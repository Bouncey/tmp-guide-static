{"version":3,"sources":["webpack:///path---c-switch-1d186eee0fb1f86d8d62.js","webpack:///./.cache/json/c-switch.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/c-switch.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,kEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,yyNAAkgMC,QAAulCC,KAAA,cAAoBC,aAAgBC,MAAA,iBAAwBC,aAAgBH,KAAA","file":"path---c-switch-1d186eee0fb1f86d8d62.js","sourcesContent":["webpackJsonp([10997544551791356000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/c-switch.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Switch Case</h1>\\n<p>The switch statement is like a set of <code>if statements</code>.</p>\\n<p>It’s a list of possibilities, with an action for each possibility, and an optional default action, in case nothing else evaluates to true.</p>\\n<p>We exit from the switch by <code>break</code>. If the <code>break</code> statement is not reached before the beginning of the next case, the execution will fall through and begin executing the code in the next case.</p>\\n<p>Using a switch statement over multiple if/else statements can contribute to more speed and readability.</p>\\n<h2>Example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token macro property\\\"># <span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;stdio.h></span></span>\\n\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token keyword\\\">char</span> operator<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">double</span> firstNumber<span class=\\\"token punctuation\\\">,</span>secondNumber<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Enter an operator (+, -, *, /): \\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">scanf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%c\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>operator<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Enter two operands: \\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">scanf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%lf %lf\\\"</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token operator\\\">&amp;</span>firstNumber<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>secondNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>operator<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'+'</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%.1lf + %.1lf = %.1lf\\\"</span><span class=\\\"token punctuation\\\">,</span>firstNumber<span class=\\\"token punctuation\\\">,</span> secondNumber<span class=\\\"token punctuation\\\">,</span> firstNumber<span class=\\\"token operator\\\">+</span>secondNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%.1lf - %.1lf = %.1lf\\\"</span><span class=\\\"token punctuation\\\">,</span>firstNumber<span class=\\\"token punctuation\\\">,</span> secondNumber<span class=\\\"token punctuation\\\">,</span> firstNumber<span class=\\\"token operator\\\">-</span>secondNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'*'</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%.1lf * %.1lf = %.1lf\\\"</span><span class=\\\"token punctuation\\\">,</span>firstNumber<span class=\\\"token punctuation\\\">,</span> secondNumber<span class=\\\"token punctuation\\\">,</span> firstNumber<span class=\\\"token operator\\\">*</span>secondNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'/'</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%.1lf / %.1lf = %.1lf\\\"</span><span class=\\\"token punctuation\\\">,</span>firstNumber<span class=\\\"token punctuation\\\">,</span> secondNumber<span class=\\\"token punctuation\\\">,</span> firstNumber<span class=\\\"token operator\\\">/</span>firstNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Operator is doesn't match any case constant (+, -, *, /)</span>\\n        <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Error! operator is not correct\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2>Output:</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token operator\\\">-></span> Enter an operator <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">+</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">-</span>\\n<span class=\\\"token operator\\\">-></span> Enter two operands<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">32.5</span>\\n<span class=\\\"token operator\\\">-></span> <span class=\\\"token number\\\">12.4</span>\\n<span class=\\\"token operator\\\">-></span> <span class=\\\"token number\\\">32.5</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">12.4</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">20.1</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/c/switch/\"},\"frontmatter\":{\"title\":\"Switch Case\"}}},\"pathContext\":{\"slug\":\"/c/switch/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---c-switch-1d186eee0fb1f86d8d62.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Switch Case</h1>\\n<p>The switch statement is like a set of <code>if statements</code>.</p>\\n<p>It’s a list of possibilities, with an action for each possibility, and an optional default action, in case nothing else evaluates to true.</p>\\n<p>We exit from the switch by <code>break</code>. If the <code>break</code> statement is not reached before the beginning of the next case, the execution will fall through and begin executing the code in the next case.</p>\\n<p>Using a switch statement over multiple if/else statements can contribute to more speed and readability.</p>\\n<h2>Example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token macro property\\\"># <span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;stdio.h></span></span>\\n\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token keyword\\\">char</span> operator<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">double</span> firstNumber<span class=\\\"token punctuation\\\">,</span>secondNumber<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Enter an operator (+, -, *, /): \\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">scanf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%c\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>operator<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Enter two operands: \\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">scanf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%lf %lf\\\"</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token operator\\\">&amp;</span>firstNumber<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&amp;</span>secondNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>operator<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'+'</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%.1lf + %.1lf = %.1lf\\\"</span><span class=\\\"token punctuation\\\">,</span>firstNumber<span class=\\\"token punctuation\\\">,</span> secondNumber<span class=\\\"token punctuation\\\">,</span> firstNumber<span class=\\\"token operator\\\">+</span>secondNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%.1lf - %.1lf = %.1lf\\\"</span><span class=\\\"token punctuation\\\">,</span>firstNumber<span class=\\\"token punctuation\\\">,</span> secondNumber<span class=\\\"token punctuation\\\">,</span> firstNumber<span class=\\\"token operator\\\">-</span>secondNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'*'</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%.1lf * %.1lf = %.1lf\\\"</span><span class=\\\"token punctuation\\\">,</span>firstNumber<span class=\\\"token punctuation\\\">,</span> secondNumber<span class=\\\"token punctuation\\\">,</span> firstNumber<span class=\\\"token operator\\\">*</span>secondNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'/'</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%.1lf / %.1lf = %.1lf\\\"</span><span class=\\\"token punctuation\\\">,</span>firstNumber<span class=\\\"token punctuation\\\">,</span> secondNumber<span class=\\\"token punctuation\\\">,</span> firstNumber<span class=\\\"token operator\\\">/</span>firstNumber<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Operator is doesn't match any case constant (+, -, *, /)</span>\\n        <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Error! operator is not correct\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2>Output:</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token operator\\\">-></span> Enter an operator <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">+</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">-</span>\\n<span class=\\\"token operator\\\">-></span> Enter two operands<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">32.5</span>\\n<span class=\\\"token operator\\\">-></span> <span class=\\\"token number\\\">12.4</span>\\n<span class=\\\"token operator\\\">-></span> <span class=\\\"token number\\\">32.5</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">12.4</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">20.1</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/c/switch/\"},\"frontmatter\":{\"title\":\"Switch Case\"}}},\"pathContext\":{\"slug\":\"/c/switch/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/c-switch.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/c-switch.json\n// module chunks = 10997544551791356000"],"sourceRoot":""}