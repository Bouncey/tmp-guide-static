{"version":3,"sources":["webpack:///path---javascript-standard-objects-array-array-prototype-concat-ca16f63843937cc52b86.js","webpack:///./.cache/json/javascript-standard-objects-array-array-prototype-concat.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-array-array-prototype-concat.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,kHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,ojJAAqiJC,QAAsMC,KAAA,8DAAoEC,aAAgBC,MAAA,4BAAmCC,aAAgBH,KAAA","file":"path---javascript-standard-objects-array-array-prototype-concat-ca16f63843937cc52b86.js","sourcesContent":["webpackJsonp([17500134265677703000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-array-array-prototype-concat.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Array.prototype.concat</h2>\\n<p>The ‘concat’ method returns a new array consisting of the elements of the array on which you call it, followed by the elements of the arguments in the order they are passed.</p>\\n<p>You can pass multiple arguments to the ‘concat’ method. The arguments can be arrays, or data types like booleans, strings, and numbers.</p>\\n<h3>Syntax</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> newArray <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span>value1<span class=\\\"token punctuation\\\">,</span> value2<span class=\\\"token punctuation\\\">,</span> value3<span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h3>Examples</h3>\\n<h4>Concatenating two arrays</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> cold <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Blue'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Green'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Purple'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> warm <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Red'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Orange'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Yellow'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> result <span class=\\\"token operator\\\">=</span> cold<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span>warm<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// results in ['Blue', 'Green', 'Purple', 'Red', 'Orange', 'Yellow'];</span>\\n</code></pre>\\n      </div>\\n<h4>Concatenating value to an array</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> odd <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> even <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> oddAndEvenAndTen <span class=\\\"token operator\\\">=</span> odd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span>even<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>oddAndEvenAndTen<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// results in [1, 3, 5, 7, 9, 0, 2, 4, 6, 8, 10];</span>\\n</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<p><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\\\">MDN</a></p>\",\"fields\":{\"slug\":\"/javascript/standard-objects/array/array-prototype-concat/\"},\"frontmatter\":{\"title\":\"Array.prototype.concat\"}}},\"pathContext\":{\"slug\":\"/javascript/standard-objects/array/array-prototype-concat/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-standard-objects-array-array-prototype-concat-ca16f63843937cc52b86.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Array.prototype.concat</h2>\\n<p>The ‘concat’ method returns a new array consisting of the elements of the array on which you call it, followed by the elements of the arguments in the order they are passed.</p>\\n<p>You can pass multiple arguments to the ‘concat’ method. The arguments can be arrays, or data types like booleans, strings, and numbers.</p>\\n<h3>Syntax</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> newArray <span class=\\\"token operator\\\">=</span> array<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span>value1<span class=\\\"token punctuation\\\">,</span> value2<span class=\\\"token punctuation\\\">,</span> value3<span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h3>Examples</h3>\\n<h4>Concatenating two arrays</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> cold <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Blue'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Green'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Purple'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">var</span> warm <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Red'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Orange'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Yellow'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> result <span class=\\\"token operator\\\">=</span> cold<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span>warm<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// results in ['Blue', 'Green', 'Purple', 'Red', 'Orange', 'Yellow'];</span>\\n</code></pre>\\n      </div>\\n<h4>Concatenating value to an array</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> odd <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">9</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> even <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> oddAndEvenAndTen <span class=\\\"token operator\\\">=</span> odd<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">concat</span><span class=\\\"token punctuation\\\">(</span>even<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>oddAndEvenAndTen<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// results in [1, 3, 5, 7, 9, 0, 2, 4, 6, 8, 10];</span>\\n</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<p><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat\\\">MDN</a></p>\",\"fields\":{\"slug\":\"/javascript/standard-objects/array/array-prototype-concat/\"},\"frontmatter\":{\"title\":\"Array.prototype.concat\"}}},\"pathContext\":{\"slug\":\"/javascript/standard-objects/array/array-prototype-concat/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-standard-objects-array-array-prototype-concat.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-array-array-prototype-concat.json\n// module chunks = 17500134265677703000"],"sourceRoot":""}