{"version":3,"sources":["webpack:///path---csharp-nullable-types-5381d52ad06fba323a7a.js","webpack:///./.cache/json/csharp-nullable-types.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/csharp-nullable-types.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,+EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,moFAA2+EC,QAAqQC,KAAA,2BAAiCC,aAAgBC,MAAA,oBAA2BC,aAAgBH,KAAA","file":"path---csharp-nullable-types-5381d52ad06fba323a7a.js","sourcesContent":["webpackJsonp([1811615704497134600],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/csharp-nullable-types.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Nullable Types</h2>\\n<p>Nullable types are instances of the <a href=\\\"https://docs.microsoft.com/en-us/dotnet/api/system.nullable-1\\\">System.Nullable&#x3C;T></a> struct.\\nA nullable type can represent the correct range of values for its underlying value type, plus an additional <code>null</code> value.\\nThis ability is very useful when you are dealing with databases or other data types that may contain elements without assigned value.</p>\\n<h4>How to use nullable type</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-csharp\\\"><code><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Declare a variable of Nullable type (Nullable&lt;int>)</span>\\n<span class=\\\"token keyword\\\">int</span><span class=\\\"token operator\\\">?</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">int</span>  j <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">int</span> defaultValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// test for null and assign value to another variable</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">.</span>HasValue<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    j <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">.</span>Value<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// get assigned value or default when current value is null</span>\\nj <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">GetValueOrDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// i.GetValueOrDefault(defaultValue)</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//use coalescing operator to assign default value when current value is null</span>\\nj <span class=\\\"token operator\\\">=</span> i <span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">?</span> defaultValue<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>For more information, visit the following link:</p>\\n<ul>\\n<li><a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/nullable-types/\\\">C# Programming Guide: Nullable Types</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/csharp/nullable-types/\"},\"frontmatter\":{\"title\":\"Nullable Types\"}}},\"pathContext\":{\"slug\":\"/csharp/nullable-types/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---csharp-nullable-types-5381d52ad06fba323a7a.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Nullable Types</h2>\\n<p>Nullable types are instances of the <a href=\\\"https://docs.microsoft.com/en-us/dotnet/api/system.nullable-1\\\">System.Nullable&#x3C;T></a> struct.\\nA nullable type can represent the correct range of values for its underlying value type, plus an additional <code>null</code> value.\\nThis ability is very useful when you are dealing with databases or other data types that may contain elements without assigned value.</p>\\n<h4>How to use nullable type</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-csharp\\\"><code><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Declare a variable of Nullable type (Nullable&lt;int>)</span>\\n<span class=\\\"token keyword\\\">int</span><span class=\\\"token operator\\\">?</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">int</span>  j <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">int</span> defaultValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// test for null and assign value to another variable</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">.</span>HasValue<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    j <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">.</span>Value<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// get assigned value or default when current value is null</span>\\nj <span class=\\\"token operator\\\">=</span> i<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">GetValueOrDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// i.GetValueOrDefault(defaultValue)</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//use coalescing operator to assign default value when current value is null</span>\\nj <span class=\\\"token operator\\\">=</span> i <span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">?</span> defaultValue<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>For more information, visit the following link:</p>\\n<ul>\\n<li><a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/nullable-types/\\\">C# Programming Guide: Nullable Types</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/csharp/nullable-types/\"},\"frontmatter\":{\"title\":\"Nullable Types\"}}},\"pathContext\":{\"slug\":\"/csharp/nullable-types/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/csharp-nullable-types.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/csharp-nullable-types.json\n// module chunks = 1811615704497134600"],"sourceRoot":""}