{"version":3,"sources":["webpack:///path---react-native-touchables-3bcf22387bbdc883192a.js","webpack:///./.cache/json/react-native-touchables.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/react-native-touchables.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,iFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,84IAA2uIC,QAAoUC,KAAA,6BAAmCC,aAAgBC,MAAA,gBAAuBC,aAAgBH,KAAA","file":"path---react-native-touchables-3bcf22387bbdc883192a.js","sourcesContent":["webpackJsonp([9292521056429562000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/react-native-touchables.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>React Native - Touchables</h2>\\n<p>Some of the main features of mobile devices revolve around user touch interactions. How a mobile app handles and responds to these interactions can make or break the user’s experience.</p>\\n<p>React Native ships with a <code>Button</code> component which works for many standard <code>onPress</code> interactions. By default, it will give the user feedback by changing the opacity to show the button was pressed. Usage:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token operator\\\">&lt;</span>Button onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>handlePress<span class=\\\"token punctuation\\\">}</span> title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Submit\\\"</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<p>For more complex use cases, React Native has APIs build in to handle press interactions called <code>Touchables</code>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>TouchableHighlight\\nTouchableNativeFeedback\\nTouchableOpacity\\nTouchableWithoutFeedback</code></pre>\\n      </div>\\n<p>Each of these Touchable components can be styled and used with a library, like the built-in <code>Animated</code>, allowing you to make your own types of custom user feedback.</p>\\n<p>Some examples of using these components:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// with images</span>\\n<span class=\\\"token operator\\\">&lt;</span>TouchableHighlight onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handlePress<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Image\\n    style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>button<span class=\\\"token punctuation\\\">}</span>\\n    source<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./logo.png'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>TouchableHighlight<span class=\\\"token operator\\\">></span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// with text</span>\\n<span class=\\\"token operator\\\">&lt;</span>TouchableHighlight onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handlePress<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Text<span class=\\\"token operator\\\">></span>Hello<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Text<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>TouchableHighlight<span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<p>You can handle different types of button presses as well. By default, buttons and touchables are configured to handle regular taps, but you can also denote a function to call for press and hold interactions for example.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token operator\\\">&lt;</span>TouchableHighlight onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handlePress<span class=\\\"token punctuation\\\">}</span> onLongPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleLongPress<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<p>To see all of the available props and how these components work, you can look at <a href=\\\"https://github.com/facebook/react-native/tree/master/Libraries/Components/Touchable\\\">the JavaScript source code for Touchables here</a>.</p>\",\"fields\":{\"slug\":\"/react-native/touchables/\"},\"frontmatter\":{\"title\":\"Touchables\"}}},\"pathContext\":{\"slug\":\"/react-native/touchables/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---react-native-touchables-3bcf22387bbdc883192a.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>React Native - Touchables</h2>\\n<p>Some of the main features of mobile devices revolve around user touch interactions. How a mobile app handles and responds to these interactions can make or break the user’s experience.</p>\\n<p>React Native ships with a <code>Button</code> component which works for many standard <code>onPress</code> interactions. By default, it will give the user feedback by changing the opacity to show the button was pressed. Usage:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token operator\\\">&lt;</span>Button onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>handlePress<span class=\\\"token punctuation\\\">}</span> title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Submit\\\"</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<p>For more complex use cases, React Native has APIs build in to handle press interactions called <code>Touchables</code>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>TouchableHighlight\\nTouchableNativeFeedback\\nTouchableOpacity\\nTouchableWithoutFeedback</code></pre>\\n      </div>\\n<p>Each of these Touchable components can be styled and used with a library, like the built-in <code>Animated</code>, allowing you to make your own types of custom user feedback.</p>\\n<p>Some examples of using these components:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// with images</span>\\n<span class=\\\"token operator\\\">&lt;</span>TouchableHighlight onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handlePress<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Image\\n    style<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>styles<span class=\\\"token punctuation\\\">.</span>button<span class=\\\"token punctuation\\\">}</span>\\n    source<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./logo.png'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>TouchableHighlight<span class=\\\"token operator\\\">></span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// with text</span>\\n<span class=\\\"token operator\\\">&lt;</span>TouchableHighlight onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handlePress<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Text<span class=\\\"token operator\\\">></span>Hello<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Text<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>TouchableHighlight<span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<p>You can handle different types of button presses as well. By default, buttons and touchables are configured to handle regular taps, but you can also denote a function to call for press and hold interactions for example.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token operator\\\">&lt;</span>TouchableHighlight onPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handlePress<span class=\\\"token punctuation\\\">}</span> onLongPress<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleLongPress<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<p>To see all of the available props and how these components work, you can look at <a href=\\\"https://github.com/facebook/react-native/tree/master/Libraries/Components/Touchable\\\">the JavaScript source code for Touchables here</a>.</p>\",\"fields\":{\"slug\":\"/react-native/touchables/\"},\"frontmatter\":{\"title\":\"Touchables\"}}},\"pathContext\":{\"slug\":\"/react-native/touchables/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/react-native-touchables.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/react-native-touchables.json\n// module chunks = 9292521056429562000"],"sourceRoot":""}