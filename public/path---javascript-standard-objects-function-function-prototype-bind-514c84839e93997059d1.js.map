{"version":3,"sources":["webpack:///path---javascript-standard-objects-function-function-prototype-bind-514c84839e93997059d1.js","webpack:///./.cache/json/javascript-standard-objects-function-function-prototype-bind.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-function-function-prototype-bind.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,oBAERC,sHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,00NAAw9MC,QAAmkBC,KAAA,kEAAwEC,aAAgBC,MAAA,6BAAoCC,aAAgBH,KAAA","file":"path---javascript-standard-objects-function-function-prototype-bind-514c84839e93997059d1.js","sourcesContent":["webpackJsonp([230268242567831700],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-function-function-prototype-bind.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Function.prototype.bind</h2>\\n<p><code>bind</code> is a method on the prototype of all functions in JavaScript.\\nIt allows you to create a new function from an existing function, change the new function’s <code>this</code> context, and provide any arguments you want the new function to be called with.\\nThe arguments provided to <code>bind</code> will precede any arguments that are passed to the new function when it is called.</p>\\n<h3>Using <code>bind</code> to change <code>this</code> in a function</h3>\\n<p>The fist argument provided to <code>bind</code> is the <code>this</code> context the function will be bound to.\\nIf you do not want to change the value of <code>this</code> pass <code>null</code> as the first argument.</p>\\n<p>You are tasked with writing code to  update the number of attendees as they arrive at a conference.\\nYou create a simple webpage that has a button that, when clicked, increments the <code>numOfAttendees</code>\\nproperty on the confrence object. You use jQuery to add a click handler to your button, but after clicking the button the confrence object has not changed. Your code might look something like this.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> nodevember <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  numOfAttendees<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  incrementNumOfAttendees<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>numOfAttendees<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// other properties</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.add-attendee-btn'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">,</span> nodevember<span class=\\\"token punctuation\\\">.</span>incrementNumOfAttendees<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>This is a common problem when working with jQuery and JavaScript. When you click the button the <code>this</code> keyword in the method you passed to jQuery’s <code>on</code> method references the button and not the conference object. You can bind the <code>this</code> context of your method to solve the problem.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> nodevember <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  numOfAttendees<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  incrementNumOfAttendees<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>numOfAttendees<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// other properties</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.add-attendee-btn'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">,</span> nodevember<span class=\\\"token punctuation\\\">.</span>incrementNumOfAttendees<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span>nodevember<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Now when the button is clicked <code>this</code> references the <code>nodevember</code> object.</p>\\n<h3>Providing arguments to a function with <code>bind</code></h3>\\n<p>Each argument passed to <code>bind</code> after the first will precede any arguments passed when the function is called.\\nThis allows you to pre-apply arguments to a function. In the example below, <code>combineStrings</code> takes two strings and concatenates them together. <code>bind</code> is then used to create a function that always provides “Cool” as the first string.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">combineStrings</span><span class=\\\"token punctuation\\\">(</span>str1<span class=\\\"token punctuation\\\">,</span> str2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> str1 <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" \\\"</span> <span class=\\\"token operator\\\">+</span> str2\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">var</span> makeCool <span class=\\\"token operator\\\">=</span> combineStrings<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Cool\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">makeCool</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"trick\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// \\\"Cool trick\\\"</span>\\n</code></pre>\\n      </div>\\n<p>The guide on <a href='https://guide.freecodecamp.org/javascript/this-reference' target='_blank' rel='nofollow'>this reference</a> has more information about how what the <code>this</code> keyword references can change.</p>\\n<p>More details on the <code>bind</code> method can be found on Mozilla’s <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind' target='_blank' rel='nofollow'>MDN docs</a>.</p>\",\"fields\":{\"slug\":\"/javascript/standard-objects/function/function-prototype-bind/\"},\"frontmatter\":{\"title\":\"Function.prototype.bind\"}}},\"pathContext\":{\"slug\":\"/javascript/standard-objects/function/function-prototype-bind/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-standard-objects-function-function-prototype-bind-514c84839e93997059d1.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Function.prototype.bind</h2>\\n<p><code>bind</code> is a method on the prototype of all functions in JavaScript.\\nIt allows you to create a new function from an existing function, change the new function’s <code>this</code> context, and provide any arguments you want the new function to be called with.\\nThe arguments provided to <code>bind</code> will precede any arguments that are passed to the new function when it is called.</p>\\n<h3>Using <code>bind</code> to change <code>this</code> in a function</h3>\\n<p>The fist argument provided to <code>bind</code> is the <code>this</code> context the function will be bound to.\\nIf you do not want to change the value of <code>this</code> pass <code>null</code> as the first argument.</p>\\n<p>You are tasked with writing code to  update the number of attendees as they arrive at a conference.\\nYou create a simple webpage that has a button that, when clicked, increments the <code>numOfAttendees</code>\\nproperty on the confrence object. You use jQuery to add a click handler to your button, but after clicking the button the confrence object has not changed. Your code might look something like this.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> nodevember <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  numOfAttendees<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  incrementNumOfAttendees<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>numOfAttendees<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// other properties</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.add-attendee-btn'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">,</span> nodevember<span class=\\\"token punctuation\\\">.</span>incrementNumOfAttendees<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>This is a common problem when working with jQuery and JavaScript. When you click the button the <code>this</code> keyword in the method you passed to jQuery’s <code>on</code> method references the button and not the conference object. You can bind the <code>this</code> context of your method to solve the problem.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> nodevember <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  numOfAttendees<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span>\\n  incrementNumOfAttendees<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>numOfAttendees<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// other properties</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.add-attendee-btn'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'click'</span><span class=\\\"token punctuation\\\">,</span> nodevember<span class=\\\"token punctuation\\\">.</span>incrementNumOfAttendees<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span>nodevember<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Now when the button is clicked <code>this</code> references the <code>nodevember</code> object.</p>\\n<h3>Providing arguments to a function with <code>bind</code></h3>\\n<p>Each argument passed to <code>bind</code> after the first will precede any arguments passed when the function is called.\\nThis allows you to pre-apply arguments to a function. In the example below, <code>combineStrings</code> takes two strings and concatenates them together. <code>bind</code> is then used to create a function that always provides “Cool” as the first string.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">combineStrings</span><span class=\\\"token punctuation\\\">(</span>str1<span class=\\\"token punctuation\\\">,</span> str2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> str1 <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" \\\"</span> <span class=\\\"token operator\\\">+</span> str2\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">var</span> makeCool <span class=\\\"token operator\\\">=</span> combineStrings<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Cool\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">makeCool</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"trick\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// \\\"Cool trick\\\"</span>\\n</code></pre>\\n      </div>\\n<p>The guide on <a href='https://guide.freecodecamp.org/javascript/this-reference' target='_blank' rel='nofollow'>this reference</a> has more information about how what the <code>this</code> keyword references can change.</p>\\n<p>More details on the <code>bind</code> method can be found on Mozilla’s <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind' target='_blank' rel='nofollow'>MDN docs</a>.</p>\",\"fields\":{\"slug\":\"/javascript/standard-objects/function/function-prototype-bind/\"},\"frontmatter\":{\"title\":\"Function.prototype.bind\"}}},\"pathContext\":{\"slug\":\"/javascript/standard-objects/function/function-prototype-bind/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-standard-objects-function-function-prototype-bind.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-function-function-prototype-bind.json\n// module chunks = 230268242567831700"],"sourceRoot":""}