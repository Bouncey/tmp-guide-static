{"version":3,"sources":["webpack:///path---c-appendix-3d8c522452c42f6af691.js","webpack:///./.cache/json/c-appendix.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/c-appendix.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,oEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,kwEAAAC,QAAmxEC,KAAA,gBAAsBC,aAAgBC,MAAA,cAAqBC,aAAgBH,KAAA","file":"path---c-appendix-3d8c522452c42f6af691.js","sourcesContent":["webpackJsonp([17538836398511780000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/c-appendix.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>C: An Appendix</h1>\\n<p>Because C is such a low-level language, there are a lot of terms that come up that aren’t found in a lot of other languages. Here’s an appendix to making understanding them easier.</p>\\n<h2>Compilation</h2>\\n<p>The compilation is the process of taking the human-readable code and turning it into machine-readable code. This process is performed by a compiler.</p>\\n<h2>Compiler</h2>\\n<p>A compiler is a program that compiles code, meaning it changes it from something human-readable into something machine-readable.</p>\\n<h2>Debugging/Debugger</h2>\\n<p>Debugging is the process of removing errors (“bugs”) from your code. A debugger is a helpful tool that makes that easier.</p>\\n<h2>GNU+Linux</h2>\\n<p>GNU+Linux is the technically accurate term for what is commonly referred to as “Linux”. Linux is a kernel- it’s a set of programs that allow software to interact with hardware. When combined with GNU, it becomes an operating system, which allows a person to interact with it.</p>\\n<h2>GUI</h2>\\n<p>Graphical User Interface. A GUI will allow you to interact with a program by pointing and clicking rather than having to type in commands.</p>\\n<h2>Header Files</h2>\\n<p>Header files are files containing function declarations that are defined in other source files. These are typically ‘included’ at the top of a source file.</p>\\n<h2>IDE</h2>\\n<p>Integrated Development Environment. This is mostly an editor but includes tools to check syntax, format code style, compile, and debug a program, which makes writing code easier.</p>\\n<h2>Human-readable</h2>\\n<p>The human-readable code is code that can be read by a person- it’s not in binary or machine code.</p>\\n<h2>Libraries</h2>\\n<p>Libraries are useful sets of code that give more functions and features in the language.</p>\\n<h2>Machine Code</h2>\\n<p>Machine code is the code that the machine can understand. Remember that computers use numbers, not English, to run.</p>\\n<h2>Newline</h2>\\n<p>A newline is what gets printed when you hit Enter, and is an example of a whitespace character.</p>\\n<h2>Whitespace</h2>\\n<p>Whitespace is the characters that you don’t see when you type but are there anyway. For example, you can’t see spaces, but there is a lot here. Newlines are also whitespace characters, as are tabs.</p>\",\"fields\":{\"slug\":\"/c/appendix/\"},\"frontmatter\":{\"title\":\"Appendix\"}}},\"pathContext\":{\"slug\":\"/c/appendix/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---c-appendix-3d8c522452c42f6af691.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>C: An Appendix</h1>\\n<p>Because C is such a low-level language, there are a lot of terms that come up that aren’t found in a lot of other languages. Here’s an appendix to making understanding them easier.</p>\\n<h2>Compilation</h2>\\n<p>The compilation is the process of taking the human-readable code and turning it into machine-readable code. This process is performed by a compiler.</p>\\n<h2>Compiler</h2>\\n<p>A compiler is a program that compiles code, meaning it changes it from something human-readable into something machine-readable.</p>\\n<h2>Debugging/Debugger</h2>\\n<p>Debugging is the process of removing errors (“bugs”) from your code. A debugger is a helpful tool that makes that easier.</p>\\n<h2>GNU+Linux</h2>\\n<p>GNU+Linux is the technically accurate term for what is commonly referred to as “Linux”. Linux is a kernel- it’s a set of programs that allow software to interact with hardware. When combined with GNU, it becomes an operating system, which allows a person to interact with it.</p>\\n<h2>GUI</h2>\\n<p>Graphical User Interface. A GUI will allow you to interact with a program by pointing and clicking rather than having to type in commands.</p>\\n<h2>Header Files</h2>\\n<p>Header files are files containing function declarations that are defined in other source files. These are typically ‘included’ at the top of a source file.</p>\\n<h2>IDE</h2>\\n<p>Integrated Development Environment. This is mostly an editor but includes tools to check syntax, format code style, compile, and debug a program, which makes writing code easier.</p>\\n<h2>Human-readable</h2>\\n<p>The human-readable code is code that can be read by a person- it’s not in binary or machine code.</p>\\n<h2>Libraries</h2>\\n<p>Libraries are useful sets of code that give more functions and features in the language.</p>\\n<h2>Machine Code</h2>\\n<p>Machine code is the code that the machine can understand. Remember that computers use numbers, not English, to run.</p>\\n<h2>Newline</h2>\\n<p>A newline is what gets printed when you hit Enter, and is an example of a whitespace character.</p>\\n<h2>Whitespace</h2>\\n<p>Whitespace is the characters that you don’t see when you type but are there anyway. For example, you can’t see spaces, but there is a lot here. Newlines are also whitespace characters, as are tabs.</p>\",\"fields\":{\"slug\":\"/c/appendix/\"},\"frontmatter\":{\"title\":\"Appendix\"}}},\"pathContext\":{\"slug\":\"/c/appendix/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/c-appendix.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/c-appendix.json\n// module chunks = 17538836398511780000"],"sourceRoot":""}