webpackJsonp([0xcdd3a9667e622000],{"./node_modules/json-loader/index.js!./.cache/json/java-loops.json":function(o,l){o.exports={data:{markdownRemark:{html:'<h1>Loops</h1>\n<p>Whenever you need to execute a block of code multiple times, a loop will often\ncome in handy.</p>\n<p>Java has 4 types of loops:</p>\n<ul>\n<li><a href="loops/while-loop">While Loop</a></li>\n<li><a href="loops/do-while-loop">Doâ€¦While Loop</a></li>\n<li><a href="loops/for-loop">For Loop</a></li>\n<li><a href="loops/for-each-loop">For Each Loop</a></li>\n</ul>\n<p>Loops behaviour can be customized using:</p>\n<ul>\n<li>\n<p><a href="loops/control-statements">Control Statements</a></p>\n<ul>\n<li><a href="loops/break-control-statement">Break Control Statement</a></li>\n<li><a href="loops/continue-control-statement">Continue Control Statement</a></li>\n</ul>\n</li>\n</ul>\n<p>A special case of loops:</p>\n<ul>\n<li><a href="loops/infinite-loops">Infinite Loops</a></li>\n</ul>',fields:{slug:"/java/loops/"},frontmatter:{title:"Loops"}}},pathContext:{slug:"/java/loops/"}}}});
//# sourceMappingURL=path---java-loops-f42d580ce4316d012c55.js.map