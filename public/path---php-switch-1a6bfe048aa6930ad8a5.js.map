{"version":3,"sources":["webpack:///path---php-switch-1a6bfe048aa6930ad8a5.js","webpack:///./.cache/json/php-switch.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/php-switch.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,oEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,4lFAAwgFC,QAAyMC,KAAA,gBAAsBC,aAAgBC,MAAA,YAAmBC,aAAgBH,KAAA","file":"path---php-switch-1a6bfe048aa6930ad8a5.js","sourcesContent":["webpackJsonp([13790394615815776000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/php-switch.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Switch</h2>\\n<p>In PHP, the <code>Switch</code> statement is very similar to the Javascript <code>Switch</code> statement (See the <a href=\\\"/javascript/switch-statements\\\">Javascript Switch Guide</a> to compare and contrast). It allows rapid case testing with a lot of different possible conditions, the code is also more readable.</p>\\n<h3>Syntax</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n\\t<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Switch Statement Example</span>\\n\\t<span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$i</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    \\t<span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">\\\"free\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n    \\t    <span class=\\\"token keyword\\\">echo</span> <span class=\\\"token string\\\">\\\"i is free\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t<span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">\\\"code\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n    \\t    <span class=\\\"token keyword\\\">echo</span> <span class=\\\"token string\\\">\\\"i is code\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t<span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">\\\"camp\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n    \\t    <span class=\\\"token keyword\\\">echo</span> <span class=\\\"token string\\\">\\\"i is camp\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t<span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    \\t\\t<span class=\\\"token keyword\\\">echo</span> <span class=\\\"token string\\\">\\\"i is freecodecamp\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3>Break</h3>\\n<p>The <code>break;</code> statement exits the switch and goes on to run the rest of the application’s code. If you do not use the <code>break;</code> statement you may end up running mulitple cases and statements, sometimes this may be desired in which case you should not include the <code>break;</code> statement.</p>\\n<h4>More Information:</h4>\\n<ul>\\n<li><a href=\\\"https://secure.php.net/manual/en/control-structures.switch.php\\\" rel=\\\"nofollow\\\">php.net docs Switch</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/php/switch/\"},\"frontmatter\":{\"title\":\"Switch\"}}},\"pathContext\":{\"slug\":\"/php/switch/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---php-switch-1a6bfe048aa6930ad8a5.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Switch</h2>\\n<p>In PHP, the <code>Switch</code> statement is very similar to the Javascript <code>Switch</code> statement (See the <a href=\\\"/javascript/switch-statements\\\">Javascript Switch Guide</a> to compare and contrast). It allows rapid case testing with a lot of different possible conditions, the code is also more readable.</p>\\n<h3>Syntax</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n\\t<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Switch Statement Example</span>\\n\\t<span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$i</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    \\t<span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">\\\"free\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n    \\t    <span class=\\\"token keyword\\\">echo</span> <span class=\\\"token string\\\">\\\"i is free\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t<span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">\\\"code\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n    \\t    <span class=\\\"token keyword\\\">echo</span> <span class=\\\"token string\\\">\\\"i is code\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t<span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">\\\"camp\\\"</span><span class=\\\"token punctuation\\\">:</span>\\n    \\t    <span class=\\\"token keyword\\\">echo</span> <span class=\\\"token string\\\">\\\"i is camp\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    \\t<span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    \\t\\t<span class=\\\"token keyword\\\">echo</span> <span class=\\\"token string\\\">\\\"i is freecodecamp\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\t<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3>Break</h3>\\n<p>The <code>break;</code> statement exits the switch and goes on to run the rest of the application’s code. If you do not use the <code>break;</code> statement you may end up running mulitple cases and statements, sometimes this may be desired in which case you should not include the <code>break;</code> statement.</p>\\n<h4>More Information:</h4>\\n<ul>\\n<li><a href=\\\"https://secure.php.net/manual/en/control-structures.switch.php\\\" rel=\\\"nofollow\\\">php.net docs Switch</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/php/switch/\"},\"frontmatter\":{\"title\":\"Switch\"}}},\"pathContext\":{\"slug\":\"/php/switch/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/php-switch.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/php-switch.json\n// module chunks = 13790394615815776000"],"sourceRoot":""}