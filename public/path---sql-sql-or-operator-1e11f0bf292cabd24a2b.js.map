{"version":3,"sources":["webpack:///path---sql-sql-or-operator-1e11f0bf292cabd24a2b.js","webpack:///./.cache/json/sql-sql-or-operator.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/sql-sql-or-operator.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,6EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,qzDAAAC,QAA03DC,KAAA,yBAA+BC,aAAgBC,MAAA,qBAA4BC,aAAgBH,KAAA","file":"path---sql-sql-or-operator-1e11f0bf292cabd24a2b.js","sourcesContent":["webpackJsonp([6480080518124947000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/sql-sql-or-operator.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>SQL or Operator</h2>\\n<p>You can use the <code>OR</code> operator in the <code>WHERE</code> clause of <code>SELECT</code> statement. You use it when you want to select a record that satisfies at least one of the conditions.</p>\\n<p>Here is an example that selects all records from the Person table who are either male or who have the name “Mary”:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">SELECT</span> Id<span class=\\\"token punctuation\\\">,</span> Name<span class=\\\"token punctuation\\\">,</span> DateOfBirth<span class=\\\"token punctuation\\\">,</span> Gender\\n<span class=\\\"token keyword\\\">FROM</span> Person\\n<span class=\\\"token keyword\\\">WHERE</span> Gender <span class=\\\"token operator\\\">=</span> “M” <span class=\\\"token operator\\\">OR</span> Name <span class=\\\"token operator\\\">=</span> “Mary”\\n</code></pre>\\n      </div>\\n<p>You can combine others operators in the <code>WHERE</code> clause (use parenthesis to indicate the order of operations) like in this example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">SELECT</span> Id<span class=\\\"token punctuation\\\">,</span> Name<span class=\\\"token punctuation\\\">,</span> DateOfBirth<span class=\\\"token punctuation\\\">,</span> Gender\\n<span class=\\\"token keyword\\\">FROM</span> Person\\n<span class=\\\"token keyword\\\">WHERE</span> Gender <span class=\\\"token operator\\\">=</span> “M” <span class=\\\"token operator\\\">AND</span> <span class=\\\"token punctuation\\\">(</span>Name <span class=\\\"token operator\\\">=</span> “Peter” <span class=\\\"token operator\\\">OR</span> Name <span class=\\\"token operator\\\">=</span> “John”<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>This example selects all records where Gender is “M” and Name is “Peter” as well as where Gender is “M” and Name is “John”. </p>\",\"fields\":{\"slug\":\"/sql/sql-or-operator/\"},\"frontmatter\":{\"title\":\"SQL or Operator\"}}},\"pathContext\":{\"slug\":\"/sql/sql-or-operator/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---sql-sql-or-operator-1e11f0bf292cabd24a2b.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>SQL or Operator</h2>\\n<p>You can use the <code>OR</code> operator in the <code>WHERE</code> clause of <code>SELECT</code> statement. You use it when you want to select a record that satisfies at least one of the conditions.</p>\\n<p>Here is an example that selects all records from the Person table who are either male or who have the name “Mary”:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">SELECT</span> Id<span class=\\\"token punctuation\\\">,</span> Name<span class=\\\"token punctuation\\\">,</span> DateOfBirth<span class=\\\"token punctuation\\\">,</span> Gender\\n<span class=\\\"token keyword\\\">FROM</span> Person\\n<span class=\\\"token keyword\\\">WHERE</span> Gender <span class=\\\"token operator\\\">=</span> “M” <span class=\\\"token operator\\\">OR</span> Name <span class=\\\"token operator\\\">=</span> “Mary”\\n</code></pre>\\n      </div>\\n<p>You can combine others operators in the <code>WHERE</code> clause (use parenthesis to indicate the order of operations) like in this example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sql\\\"><code><span class=\\\"token keyword\\\">SELECT</span> Id<span class=\\\"token punctuation\\\">,</span> Name<span class=\\\"token punctuation\\\">,</span> DateOfBirth<span class=\\\"token punctuation\\\">,</span> Gender\\n<span class=\\\"token keyword\\\">FROM</span> Person\\n<span class=\\\"token keyword\\\">WHERE</span> Gender <span class=\\\"token operator\\\">=</span> “M” <span class=\\\"token operator\\\">AND</span> <span class=\\\"token punctuation\\\">(</span>Name <span class=\\\"token operator\\\">=</span> “Peter” <span class=\\\"token operator\\\">OR</span> Name <span class=\\\"token operator\\\">=</span> “John”<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p>This example selects all records where Gender is “M” and Name is “Peter” as well as where Gender is “M” and Name is “John”. </p>\",\"fields\":{\"slug\":\"/sql/sql-or-operator/\"},\"frontmatter\":{\"title\":\"SQL or Operator\"}}},\"pathContext\":{\"slug\":\"/sql/sql-or-operator/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/sql-sql-or-operator.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/sql-sql-or-operator.json\n// module chunks = 6480080518124947000"],"sourceRoot":""}