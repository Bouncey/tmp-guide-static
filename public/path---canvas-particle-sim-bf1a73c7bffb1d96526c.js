webpackJsonp([0x8bd985e4db2be800],{"./node_modules/json-loader/index.js!./.cache/json/canvas-particle-sim.json":function(n,a){n.exports={data:{markdownRemark:{html:'<h2>Particle Simulation in Canvas</h2>\n<p>In this guide, we’re going to build a basic particle simulation in Canvas using simple principles of animation.</p>\n<p>We will want to set up an array of particles with accelerations and velocities. We will create 100 particles at random points on the canvas.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">\'2d\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> particles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  particles<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n    <span class="token punctuation">{</span>\n      x<span class="token punctuation">:</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span>\n      y<span class="token punctuation">:</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>canvas<span class="token punctuation">.</span>height<span class="token punctuation">,</span>\n      vx<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>\n      vy<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>\n      ax<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>\n      ay<span class="token punctuation">:</span><span class="token number">0</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>In our draw loop, we render these particles.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>particles<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// update state</span>\n\n    <span class="token comment" spellcheck="true">// render state</span>\n    ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>Math<span class="token punctuation">.</span>PI<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nwindow<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Now, all we need to do is update velocity and acceleration each frame. We will add the acceleration to the velocity and add the velocity to the position.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>particles<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment" spellcheck="true">// update state</span>\n    particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token operator">+=</span>particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>vx<span class="token punctuation">;</span>\n    particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token operator">+=</span>particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>vy<span class="token punctuation">;</span>\n    particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>vx<span class="token operator">+=</span>particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ax<span class="token punctuation">;</span>\n    particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>vy<span class="token operator">+=</span>particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ay<span class="token punctuation">;</span>\n  \n    <span class="token comment" spellcheck="true">/* render code */</span>\n  <span class="token punctuation">}</span>\n\n  window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nwindow<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>That’s it! All we need to do to is create a force somewhere. Let’s do it with a click listener.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>canvas<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> clickX <span class="token operator">=</span> e<span class="token punctuation">.</span>clientX<span class="token operator">-</span>canvas<span class="token punctuation">.</span>offsetLeft<span class="token punctuation">;</span>\n  <span class="token keyword">var</span> clickY <span class="token operator">=</span> e<span class="token punctuation">.</span>clientY<span class="token operator">-</span>canvas<span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>\n  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>particles<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> delx <span class="token operator">=</span> particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token operator">-</span>clickX<span class="token punctuation">;</span>\n    <span class="token keyword">var</span> dely <span class="token operator">=</span> particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token operator">-</span>clickY<span class="token punctuation">;</span>\n    <span class="token keyword">var</span> magnitudeSquared <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>delx<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>dely<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    \n    particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ax <span class="token operator">=</span> <span class="token number">0.1</span><span class="token operator">*</span>delx<span class="token operator">/</span>magnitudeSquared<span class="token punctuation">;</span>\n    particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ay <span class="token operator">=</span> <span class="token number">0.1</span><span class="token operator">*</span>dely<span class="token operator">/</span>magnitudeSquared<span class="token punctuation">;</span>\n    \n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>This adds force via the inverse-square law. See <a href="#placeholder">this page</a> for more details.</p>\n<p>That’s all! The final codepen:</p>\n<p data-height="265" data-theme-id="0" data-slug-hash="OjMbpm" data-default-tab="js,result" data-user="alanluo" data-embed-version="2" data-pen-title="Particle Sim (FCC)" class="codepen">See the Pen <a href="https://codepen.io/alanluo/pen/OjMbpm/">Particle Sim (FCC)</a> by Alan Luo (<a href="https://codepen.io/alanluo">@alanluo</a>) on <a href="https://codepen.io">CodePen</a>.</p>\n<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>\n<!-- TODO: make it cooler! -->\n<h4>More Information:</h4>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API">MDN Canvas API</a></li>\n</ul>',fields:{slug:"/canvas/particle-sim/"},frontmatter:{title:"Particle Sim"}}},pathContext:{slug:"/canvas/particle-sim/"}}}});
//# sourceMappingURL=path---canvas-particle-sim-bf1a73c7bffb1d96526c.js.map