{"version":3,"sources":["webpack:///path---ruby-ruby-for-loop-e17fbfb9982ff744c9fb.js","webpack:///./.cache/json/ruby-ruby-for-loop.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/ruby-ruby-for-loop.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,4EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6vCAA6uCC,QAAuCC,KAAA,wBAA8BC,aAAgBC,MAAA,oBAA2BC,aAAgBH,KAAA","file":"path---ruby-ruby-for-loop-e17fbfb9982ff744c9fb.js","sourcesContent":["webpackJsonp([1428893010922707700],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/ruby-ruby-for-loop.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Ruby For Loops</h2>\\n<p>Ruby for loops are used to loop or iterate over a number of elements and execute of block of code for each element. For loops are often used on arrays. See section on <a href='https://github.com/freeCodeCamp/guides/blob/master/src/pages/ruby/ruby-arrays/index.md' target='_blank' rel='nofollow'>Ruby Arrays</a>.</p>\\n<p>For loops are merely one example of looping or iterating over elements. Below is an example of a for loop:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>for element in array do\\n  puts element\\nend</code></pre>\\n      </div>\\n<p>There are many many different ways in which you can execute a for loop or loop in Ruby, another such example would be:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>element.each do |element|\\n  puts element\\nend</code></pre>\\n      </div>\\n<p>This would achieve exactly the same results as the aforementioned for loop, it is however neater and more efficient as it makes use of Array’s built in methods.</p>\\n<p>To go one step further, we can write the above loop in the following way:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>element.each do { |element| puts element }</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/ruby/ruby-for-loop/\"},\"frontmatter\":{\"title\":\"Ruby For Loops\"}}},\"pathContext\":{\"slug\":\"/ruby/ruby-for-loop/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---ruby-ruby-for-loop-e17fbfb9982ff744c9fb.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Ruby For Loops</h2>\\n<p>Ruby for loops are used to loop or iterate over a number of elements and execute of block of code for each element. For loops are often used on arrays. See section on <a href='https://github.com/freeCodeCamp/guides/blob/master/src/pages/ruby/ruby-arrays/index.md' target='_blank' rel='nofollow'>Ruby Arrays</a>.</p>\\n<p>For loops are merely one example of looping or iterating over elements. Below is an example of a for loop:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>for element in array do\\n  puts element\\nend</code></pre>\\n      </div>\\n<p>There are many many different ways in which you can execute a for loop or loop in Ruby, another such example would be:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>element.each do |element|\\n  puts element\\nend</code></pre>\\n      </div>\\n<p>This would achieve exactly the same results as the aforementioned for loop, it is however neater and more efficient as it makes use of Array’s built in methods.</p>\\n<p>To go one step further, we can write the above loop in the following way:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>element.each do { |element| puts element }</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/ruby/ruby-for-loop/\"},\"frontmatter\":{\"title\":\"Ruby For Loops\"}}},\"pathContext\":{\"slug\":\"/ruby/ruby-for-loop/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/ruby-ruby-for-loop.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/ruby-ruby-for-loop.json\n// module chunks = 1428893010922707700"],"sourceRoot":""}