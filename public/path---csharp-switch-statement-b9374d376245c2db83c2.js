webpackJsonp([0x2abf085f52869000],{"./node_modules/json-loader/index.js!./.cache/json/csharp-switch-statement.json":function(e,n){e.exports={data:{markdownRemark:{html:'<h1>Switch Statement</h1>\n<p>The Switch Statement switches program flow through a specific code path based upon the value of the variable being switched.  If none of the case statements match the value of the switched variable, the default path is chosen.</p>\n<h2>Example</h2>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>public enum Colors { Red, Blue, Green, Orange }\n\nColors myColor;\n\n... myColor is set to one of the enum values ...\n\nswitch(myColor){\n  case Colors.Red: \n    Console.WriteLine("How you like them apples?");\n    break;\n  case Colors.Blue: \n    Console.WriteLine("Ice Ice Baby...");\n    break;\n  case Colors.Green: \n    Console.WriteLine("Fore!");\n    break;\n  default:\n    Console.WriteLine("I have a hard time when I try to rhyme.");\n}</code></pre>\n      </div>\n<h2>Output:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>If myColor is Colors.Red:\n> How you like them apples?\n\nIf myColor is Colors.Blue:\n> Ice Ice Baby...\n\nIf myColor is Colors.Green:\n> Fore!\n\nIf myColor is Colors.Orange:\n> I have a hard time when I try to rhyme.</code></pre>\n      </div>',fields:{slug:"/csharp/switch-statement/"},frontmatter:{title:"Switch Statement"}}},pathContext:{slug:"/csharp/switch-statement/"}}}});
//# sourceMappingURL=path---csharp-switch-statement-b9374d376245c2db83c2.js.map