{"version":3,"sources":["webpack:///path---miscellaneous-how-to-squash-multiple-commits-into-one-with-git-938e60f98508a33af708.js","webpack:///./.cache/json/miscellaneous-how-to-squash-multiple-commits-into-one-with-git.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/miscellaneous-how-to-squash-multiple-commits-into-one-with-git.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,wHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,y1CAAAC,QAAs3CC,KAAA,oEAA0EC,aAAgBC,MAAA,sDAA6DC,aAAgBH,KAAA","file":"path---miscellaneous-how-to-squash-multiple-commits-into-one-with-git-938e60f98508a33af708.js","sourcesContent":["webpackJsonp([4620926257459336000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/miscellaneous-how-to-squash-multiple-commits-into-one-with-git.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>This is an awesome feature of <code>rebase</code> that can be used in the <code>interactive</code> mode. To squash the last <em>n</em> commits into one, run the following command:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>git rebase -i HEAD~n</code></pre>\\n      </div>\\n<p>That will open up a text-editor with something similar to the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>pick commit_1\\npick commit_2\\npick commit_3\\n...\\npick commit_n\\n# Bunch of comments</code></pre>\\n      </div>\\n<p>Leave the first commit alone, and change the rest of the <code>pick</code>s to <code>squash</code>. Save and exit the editor.</p>\\n<p>So if you wanted to squash the last three commits, you’ll first run <code>git rebase -i HEAD~3</code> and then you’ll want to edit your commits to look something like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>pick dd661ba Commit 1\\nsquash 71f5fee Commit 2\\nsquash f4b4bf1 Commit 3</code></pre>\\n      </div>\\n<p>If you’ve already pushed to a remote before squashing your commits, you’ll have to push to the remote again, with the <code>-f</code> flag, otherwise git will throw an error at you.</p>\\n<p>It is strongly suggested that you read the information in the opened file as there are many things you can do.</p>\",\"fields\":{\"slug\":\"/miscellaneous/how-to-squash-multiple-commits-into-one-with-git/\"},\"frontmatter\":{\"title\":\"How to Squash Multiple Commits into One with Git\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/how-to-squash-multiple-commits-into-one-with-git/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---miscellaneous-how-to-squash-multiple-commits-into-one-with-git-938e60f98508a33af708.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>This is an awesome feature of <code>rebase</code> that can be used in the <code>interactive</code> mode. To squash the last <em>n</em> commits into one, run the following command:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>git rebase -i HEAD~n</code></pre>\\n      </div>\\n<p>That will open up a text-editor with something similar to the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>pick commit_1\\npick commit_2\\npick commit_3\\n...\\npick commit_n\\n# Bunch of comments</code></pre>\\n      </div>\\n<p>Leave the first commit alone, and change the rest of the <code>pick</code>s to <code>squash</code>. Save and exit the editor.</p>\\n<p>So if you wanted to squash the last three commits, you’ll first run <code>git rebase -i HEAD~3</code> and then you’ll want to edit your commits to look something like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>pick dd661ba Commit 1\\nsquash 71f5fee Commit 2\\nsquash f4b4bf1 Commit 3</code></pre>\\n      </div>\\n<p>If you’ve already pushed to a remote before squashing your commits, you’ll have to push to the remote again, with the <code>-f</code> flag, otherwise git will throw an error at you.</p>\\n<p>It is strongly suggested that you read the information in the opened file as there are many things you can do.</p>\",\"fields\":{\"slug\":\"/miscellaneous/how-to-squash-multiple-commits-into-one-with-git/\"},\"frontmatter\":{\"title\":\"How to Squash Multiple Commits into One with Git\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/how-to-squash-multiple-commits-into-one-with-git/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/miscellaneous-how-to-squash-multiple-commits-into-one-with-git.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/miscellaneous-how-to-squash-multiple-commits-into-one-with-git.json\n// module chunks = 4620926257459336000"],"sourceRoot":""}