{"version":3,"sources":["webpack:///path---python-docstring-bc4a89447995b069a548.js","webpack:///./.cache/json/python-docstring.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/python-docstring.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,0EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,suGAAAC,QAAiyGC,KAAA,sBAA4BC,aAAgBC,MAAA,eAAsBC,aAAgBH,KAAA","file":"path---python-docstring-bc4a89447995b069a548.js","sourcesContent":["webpackJsonp([15860709199348447000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/python-docstring.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Docstring</h2>\\n<p>Docstring is a way for developers to communicate the purpose, parameters, requirements, and usage of a function in Python to other developers. It allows for ease of code maintenance and understanding.</p>\\n<p>A similar example to Docstring is @Javadoc in Java.</p>\\n<p>Docstring is written as a multi-line comment just after the declaration header in Python. There are 4 different parts to a docstring:</p>\\n<ol>\\n<li>\\n<p>Type of input, and type of output</p>\\n<ul>\\n<li>Input/output can be <code>obj, list, bool, int, str, float</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>Description of function</p>\\n<ul>\\n<li>Brief, but thorough description of what your function does</li>\\n</ul>\\n</li>\\n<li>\\n<p>Requirements </p>\\n<ul>\\n<li>This is read by a human, so it does not have to be code</li>\\n</ul>\\n</li>\\n<li>Test cases (normally 2-3)</li>\\n</ol>\\n<p>The general format is listed below.</p>\\n<h2>Format of Docstring</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">my_examplefunc</span><span class=\\\"token punctuation\\\">(</span>input_type1<span class=\\\"token punctuation\\\">,</span> input_type2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token triple-quoted-string string\\\">'''(input_type1, input_type2) -> output_type        # Your first line will be the input/output. Remember the space around the arrow!\\n  Here is a description of my example function        # Your second line will be the description\\n  REQ: type(input_type1) == list                      # Your next line (or lines) will be the requirements for the input of your function\\n  REQ: type(input_type2) == str                       \\n  >>> my_example_func([2, 3], \\\"Hello World!\\\")         # After the requirements come test cases\\n  [2, 3] \\\"Hello World\\\"\\n  >>> my_example_func([7, 2], \\\"Another test case\\\")    # Your first line of the test case is an example of the usage, prefaced by >>>\\n  [7, 2] \\\"Another test case\\\"                          # Your second line of the test case is the output\\n  >>> my_example_func([5, 6], \\\"Last test case\\\")\\n  [5, 6] \\\"Last test case\\\"\\n  '''</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Your code goes here, underneath the Docstring</span>\\n</code></pre>\\n      </div>\\n<p>Docstring is best understood with examples, so take a look at the below example program where the program outputs True if a number is less than 5, and False if a number is greater than 5.</p>\\n<h2>Example 1</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">is_less_than_five</span><span class=\\\"token punctuation\\\">(</span>some_number<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token triple-quoted-string string\\\">'''(int) -> bool\\n  Returns True if the given number is less than 5, and False is the given number is greater than 5.\\n  REQ: some_number != 5\\n  >>> is_less_than_five(4)\\n  True\\n  >>> is_less_than_five(6)\\n  False\\n  >>> is_less_than_five(100000)\\n  False\\n  '''</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Your code goes here</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/python/docstring/\"},\"frontmatter\":{\"title\":\"Docstring\"}}},\"pathContext\":{\"slug\":\"/python/docstring/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---python-docstring-bc4a89447995b069a548.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Docstring</h2>\\n<p>Docstring is a way for developers to communicate the purpose, parameters, requirements, and usage of a function in Python to other developers. It allows for ease of code maintenance and understanding.</p>\\n<p>A similar example to Docstring is @Javadoc in Java.</p>\\n<p>Docstring is written as a multi-line comment just after the declaration header in Python. There are 4 different parts to a docstring:</p>\\n<ol>\\n<li>\\n<p>Type of input, and type of output</p>\\n<ul>\\n<li>Input/output can be <code>obj, list, bool, int, str, float</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>Description of function</p>\\n<ul>\\n<li>Brief, but thorough description of what your function does</li>\\n</ul>\\n</li>\\n<li>\\n<p>Requirements </p>\\n<ul>\\n<li>This is read by a human, so it does not have to be code</li>\\n</ul>\\n</li>\\n<li>Test cases (normally 2-3)</li>\\n</ol>\\n<p>The general format is listed below.</p>\\n<h2>Format of Docstring</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">my_examplefunc</span><span class=\\\"token punctuation\\\">(</span>input_type1<span class=\\\"token punctuation\\\">,</span> input_type2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token triple-quoted-string string\\\">'''(input_type1, input_type2) -> output_type        # Your first line will be the input/output. Remember the space around the arrow!\\n  Here is a description of my example function        # Your second line will be the description\\n  REQ: type(input_type1) == list                      # Your next line (or lines) will be the requirements for the input of your function\\n  REQ: type(input_type2) == str                       \\n  >>> my_example_func([2, 3], \\\"Hello World!\\\")         # After the requirements come test cases\\n  [2, 3] \\\"Hello World\\\"\\n  >>> my_example_func([7, 2], \\\"Another test case\\\")    # Your first line of the test case is an example of the usage, prefaced by >>>\\n  [7, 2] \\\"Another test case\\\"                          # Your second line of the test case is the output\\n  >>> my_example_func([5, 6], \\\"Last test case\\\")\\n  [5, 6] \\\"Last test case\\\"\\n  '''</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Your code goes here, underneath the Docstring</span>\\n</code></pre>\\n      </div>\\n<p>Docstring is best understood with examples, so take a look at the below example program where the program outputs True if a number is less than 5, and False if a number is greater than 5.</p>\\n<h2>Example 1</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">is_less_than_five</span><span class=\\\"token punctuation\\\">(</span>some_number<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token triple-quoted-string string\\\">'''(int) -> bool\\n  Returns True if the given number is less than 5, and False is the given number is greater than 5.\\n  REQ: some_number != 5\\n  >>> is_less_than_five(4)\\n  True\\n  >>> is_less_than_five(6)\\n  False\\n  >>> is_less_than_five(100000)\\n  False\\n  '''</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\"># Your code goes here</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/python/docstring/\"},\"frontmatter\":{\"title\":\"Docstring\"}}},\"pathContext\":{\"slug\":\"/python/docstring/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/python-docstring.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/python-docstring.json\n// module chunks = 15860709199348447000"],"sourceRoot":""}