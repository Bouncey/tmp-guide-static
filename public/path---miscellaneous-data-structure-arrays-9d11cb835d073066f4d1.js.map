{"version":3,"sources":["webpack:///path---miscellaneous-data-structure-arrays-9d11cb835d073066f4d1.js","webpack:///./.cache/json/miscellaneous-data-structure-arrays.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/miscellaneous-data-structure-arrays.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,6FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2rKAAg/EC,QAA8uFC,KAAA,yCAA+CC,aAAgBC,MAAA,2BAAkCC,aAAgBH,KAAA","file":"path---miscellaneous-data-structure-arrays-9d11cb835d073066f4d1.js","sourcesContent":["webpackJsonp([6506179688088267000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/miscellaneous-data-structure-arrays.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Internally, <code>array</code> is a kind of data structure that can store a fixed-size sequential collection of elements of the same type. An <code>array</code> is used to store a collection of data, but it is often more useful to think of an <code>array</code> as a collection of variables of the same type.</p>\\n<p><code>array</code> consists of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.</p>\\n<h2>Arrays in C++</h2>\\n<p>C++ provides a data structure, <code>array</code>, which stores a fixed-size sequential collection of elements of the same data-type. An <code>array</code> is used to store a collection of data, but it is better to think of an <code>array</code> as a collection of variables of the same type.</p>\\n<h4>Declaration of <code>array</code></h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>int intarray<a href='https://repl.it/CWZE/3' target='_blank' rel='nofollow'>10]; // Declares an array of integer type of size 10 with elements having random values. Index ranges from 0 to 9(i.e. size-1).\\nint intarray[10] = { 0 }; // Declares an array of integer of size 10 with all elements having value 0\\n\\n// Choose one the two declarations and then move ahead.</code></pre>\\n      </div>\\n<h4>Inserting elements to <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>intarray[0] = 1; // Inserts an integer value of 1 at index 0\\nintarray[1] = 0; // Inserts an integer value of 0 at index 1\\nintarray[2] = -1; // Inserts an integer value of -1 at index 2\\nintarray[3] = 1; // Inserts an integer value of 1 at index 3</code></pre>\\n      </div>\\n<h4>Printing an <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>std::cout << intarray[0] << std::endl; // Returns 1 which is element at index of the array\\nstd::cout << intarray[11] << std::endl; // Would give a a \\\"Garbage\\\" value as there is no element at index 11 of array.\\n// That memory location is beyond the range of the array.\\n\\n// To print all the elements of the array\\nfor(int i = 0; i < n; i++)\\n\\tstd::cout << intarray[i] << std::endl;</code></pre>\\n      </div>\\n<h4>Basic operations on <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>std::cout << sizeof(intarray)/sizeof(intarray[0]) << std::endl; // Returns the length of the array i.e. 10.\\nstd::cout << sizeof(intarray[0]) << std::endl; // Returns length in bytes of one array item i.e. 4 as it is an integer</code></pre>\\n      </div>\\n<p>:rocket: [Run Code</a> ## Arrays in Python Python doesn’t have a native <code>array</code> data structure. An <code>array</code> in Python should not be confused with <code>list</code>. The major difference between a <code>list</code> and an <code>array</code> in Python is that a <code>list</code> can have different types of values whereas an <code>array</code> should have all the values of same type. #### Declaration of <code>array</code>  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>from array import array\\nintarray = array('i') # Declares an array of integer type</code></pre>\\n      </div>\\n<h4>Inserting elements to <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>intarray.append(1) # Inserts an integer value of 1 to the array\\nintarray.append(0) # Inserts an integer value of 0 to the array\\nintarray.append(-1) # Inserts an integer value of -1 to the array\\nintarray.append(1) # Inserts an integer value of 1 to the array\\n\\nintarray.append('d') # Would give a TypeError as the array is of integer type.\\n\\n#Resolve the above error and then move ahead.</code></pre>\\n      </div>\\n<h4>Printing an <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>print(intarray) # Returns array('i', [1, 4, -1])\\nprint(intarray[0]) # Returns 1 which is the element at index 0 of the array\\nprint(intarray[3]) # Would give IndexError as there is no element at index 3 of array.\\n\\n#Resolve the above error and then move ahead.\\n\\n# To print all the elements of the array\\nfor i in intarray:\\n\\tprint(i)</code></pre>\\n      </div>\\n<h4>Basic operations on <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>len(intarray) # Returns the length of the array i.e. 3\\nintarray.itemsize # Returns length in bytes of one array item i.e. 4 as it is an integer\\nintarray.count(1) # Returns the number of occurrences of 1 in the array i.e. 2\\nintarray.insert(1, 3) # Insert a new item with value x in the array before position i\\nintarray.remove(1) # Remove the first occurrence of 1 from the array\\nintarray.reverse() # Reverse the order of the items in the array\\nintarray.pop(1) # Removes the item with the index 1 from the array and returns it</code></pre>\\n      </div>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" title=\\\":rocket:\\\" alt=\\\":rocket:\\\" class=\\\"forum-image\\\"> <a href='https://repl.it/CWJB' target='_blank' rel='nofollow'>Run Code</a></p>\\n<p><a href='https://docs.python.org/3.5/library/array.html' target='_blank' rel='nofollow'>Official Docs</a></p>\",\"fields\":{\"slug\":\"/miscellaneous/data-structure-arrays/\"},\"frontmatter\":{\"title\":\"Data Structure Arrays\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/data-structure-arrays/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---miscellaneous-data-structure-arrays-9d11cb835d073066f4d1.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Internally, <code>array</code> is a kind of data structure that can store a fixed-size sequential collection of elements of the same type. An <code>array</code> is used to store a collection of data, but it is often more useful to think of an <code>array</code> as a collection of variables of the same type.</p>\\n<p><code>array</code> consists of contiguous memory locations. The lowest address corresponds to the first element and the highest address to the last element.</p>\\n<h2>Arrays in C++</h2>\\n<p>C++ provides a data structure, <code>array</code>, which stores a fixed-size sequential collection of elements of the same data-type. An <code>array</code> is used to store a collection of data, but it is better to think of an <code>array</code> as a collection of variables of the same type.</p>\\n<h4>Declaration of <code>array</code></h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>int intarray<a href='https://repl.it/CWZE/3' target='_blank' rel='nofollow'>10]; // Declares an array of integer type of size 10 with elements having random values. Index ranges from 0 to 9(i.e. size-1).\\nint intarray[10] = { 0 }; // Declares an array of integer of size 10 with all elements having value 0\\n\\n// Choose one the two declarations and then move ahead.</code></pre>\\n      </div>\\n<h4>Inserting elements to <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>intarray[0] = 1; // Inserts an integer value of 1 at index 0\\nintarray[1] = 0; // Inserts an integer value of 0 at index 1\\nintarray[2] = -1; // Inserts an integer value of -1 at index 2\\nintarray[3] = 1; // Inserts an integer value of 1 at index 3</code></pre>\\n      </div>\\n<h4>Printing an <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>std::cout << intarray[0] << std::endl; // Returns 1 which is element at index of the array\\nstd::cout << intarray[11] << std::endl; // Would give a a \\\"Garbage\\\" value as there is no element at index 11 of array.\\n// That memory location is beyond the range of the array.\\n\\n// To print all the elements of the array\\nfor(int i = 0; i < n; i++)\\n\\tstd::cout << intarray[i] << std::endl;</code></pre>\\n      </div>\\n<h4>Basic operations on <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>std::cout << sizeof(intarray)/sizeof(intarray[0]) << std::endl; // Returns the length of the array i.e. 10.\\nstd::cout << sizeof(intarray[0]) << std::endl; // Returns length in bytes of one array item i.e. 4 as it is an integer</code></pre>\\n      </div>\\n<p>:rocket: [Run Code</a> ## Arrays in Python Python doesn’t have a native <code>array</code> data structure. An <code>array</code> in Python should not be confused with <code>list</code>. The major difference between a <code>list</code> and an <code>array</code> in Python is that a <code>list</code> can have different types of values whereas an <code>array</code> should have all the values of same type. #### Declaration of <code>array</code>  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>from array import array\\nintarray = array('i') # Declares an array of integer type</code></pre>\\n      </div>\\n<h4>Inserting elements to <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>intarray.append(1) # Inserts an integer value of 1 to the array\\nintarray.append(0) # Inserts an integer value of 0 to the array\\nintarray.append(-1) # Inserts an integer value of -1 to the array\\nintarray.append(1) # Inserts an integer value of 1 to the array\\n\\nintarray.append('d') # Would give a TypeError as the array is of integer type.\\n\\n#Resolve the above error and then move ahead.</code></pre>\\n      </div>\\n<h4>Printing an <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>print(intarray) # Returns array('i', [1, 4, -1])\\nprint(intarray[0]) # Returns 1 which is the element at index 0 of the array\\nprint(intarray[3]) # Would give IndexError as there is no element at index 3 of array.\\n\\n#Resolve the above error and then move ahead.\\n\\n# To print all the elements of the array\\nfor i in intarray:\\n\\tprint(i)</code></pre>\\n      </div>\\n<h4>Basic operations on <code>array</code>:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>len(intarray) # Returns the length of the array i.e. 3\\nintarray.itemsize # Returns length in bytes of one array item i.e. 4 as it is an integer\\nintarray.count(1) # Returns the number of occurrences of 1 in the array i.e. 2\\nintarray.insert(1, 3) # Insert a new item with value x in the array before position i\\nintarray.remove(1) # Remove the first occurrence of 1 from the array\\nintarray.reverse() # Reverse the order of the items in the array\\nintarray.pop(1) # Removes the item with the index 1 from the array and returns it</code></pre>\\n      </div>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" title=\\\":rocket:\\\" alt=\\\":rocket:\\\" class=\\\"forum-image\\\"> <a href='https://repl.it/CWJB' target='_blank' rel='nofollow'>Run Code</a></p>\\n<p><a href='https://docs.python.org/3.5/library/array.html' target='_blank' rel='nofollow'>Official Docs</a></p>\",\"fields\":{\"slug\":\"/miscellaneous/data-structure-arrays/\"},\"frontmatter\":{\"title\":\"Data Structure Arrays\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/data-structure-arrays/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/miscellaneous-data-structure-arrays.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/miscellaneous-data-structure-arrays.json\n// module chunks = 6506179688088267000"],"sourceRoot":""}