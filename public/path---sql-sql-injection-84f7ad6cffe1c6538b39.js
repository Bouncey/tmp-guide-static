webpackJsonp([0xd5483d82780f1000],{"./node_modules/json-loader/index.js!./.cache/json/sql-sql-injection.json":function(e,o){e.exports={data:{markdownRemark:{html:'<h2>SQL Injection</h2>\n<p>SQL injection is a malicious technique that is meant to compromise or destroy databases. It is one of the most common web-hacking techniques.</p>\n<p>SQL injection is performed by placing malicious code in SQL statements via an input. </p>\n<p>The following example is a code snippet that will retrieve a user from a database based on an <code>AccountId</code>.</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>passedInAccountId = getRequestString("AccountId");\nsql = "select * from Accounts where AccountId = " + passedInAccountId;</code></pre>\n      </div>\n<p>SQL injection can be used to compromise this code by injecting a <code>1=1;</code> statement for <code>AccountId</code>.</p>\n<p><code>https://www.foo.com/get-user?AccountId="105 OR 1=1;"</code></p>\n<p><code>1=1</code> will always evaluate to <code>TRUE</code>. This will cause the executed code to output all of the Accounts table.</p>',fields:{slug:"/sql/sql-injection/"},frontmatter:{title:"SQL Injection"}}},pathContext:{slug:"/sql/sql-injection/"}}}});
//# sourceMappingURL=path---sql-sql-injection-84f7ad6cffe1c6538b39.js.map