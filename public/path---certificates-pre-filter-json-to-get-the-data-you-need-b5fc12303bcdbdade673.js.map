{"version":3,"sources":["webpack:///path---certificates-pre-filter-json-to-get-the-data-you-need-b5fc12303bcdbdade673.js","webpack:///./.cache/json/certificates-pre-filter-json-to-get-the-data-you-need.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-pre-filter-json-to-get-the-data-you-need.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,+GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,ggBAA8eC,QAAuCC,KAAA,2DAAiEC,aAAgBC,MAAA,8CAAqDC,aAAgBH,KAAA","file":"path---certificates-pre-filter-json-to-get-the-data-you-need-b5fc12303bcdbdade673.js","sourcesContent":["webpackJsonp([8407641157697917000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-pre-filter-json-to-get-the-data-you-need.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>The <strong>filter()</strong> method creates a new array with all elements that pass the test implemented by the provided function.</p>\\n<p>So when you don’t want to work with all the elements from the array then you can use filter.</p>\\n<p>Let’s filter out the cat who’s “id” key has a value of 1.</p>\\n<p>Here’s the code to do this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>json = json.filter(function(val) {\\n\\n  return(val.id !== 1);\\n\\n});</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/pre-filter-json-to-get-the-data-you-need/\"},\"frontmatter\":{\"title\":\"Pre-filter JSON to Get the Data You Need\"}}},\"pathContext\":{\"slug\":\"/certificates/pre-filter-json-to-get-the-data-you-need/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-pre-filter-json-to-get-the-data-you-need-b5fc12303bcdbdade673.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>The <strong>filter()</strong> method creates a new array with all elements that pass the test implemented by the provided function.</p>\\n<p>So when you don’t want to work with all the elements from the array then you can use filter.</p>\\n<p>Let’s filter out the cat who’s “id” key has a value of 1.</p>\\n<p>Here’s the code to do this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>json = json.filter(function(val) {\\n\\n  return(val.id !== 1);\\n\\n});</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/pre-filter-json-to-get-the-data-you-need/\"},\"frontmatter\":{\"title\":\"Pre-filter JSON to Get the Data You Need\"}}},\"pathContext\":{\"slug\":\"/certificates/pre-filter-json-to-get-the-data-you-need/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-pre-filter-json-to-get-the-data-you-need.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-pre-filter-json-to-get-the-data-you-need.json\n// module chunks = 8407641157697917000"],"sourceRoot":""}