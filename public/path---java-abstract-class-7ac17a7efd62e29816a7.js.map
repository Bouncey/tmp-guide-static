{"version":3,"sources":["webpack:///path---java-abstract-class-7ac17a7efd62e29816a7.js","webpack:///./.cache/json/java-abstract-class.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/java-abstract-class.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,6EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,64HAA41HC,QAAwNC,KAAA,yBAA+BC,aAAgBC,MAAA,8BAAqCC,aAAgBH,KAAA","file":"path---java-abstract-class-7ac17a7efd62e29816a7.js","sourcesContent":["webpackJsonp([5195562732123791000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/java-abstract-class.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Lets discuss abstract classes. Before diving into this tutorial it is better that you have understood concepts of classes\\nand inheritance.\\nLet’s suppose that you are building a java application and you have a parent class named Person and you have two child classes\\nTeacher and Student. The teacher and student class is inherited by the Person class. </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Teacher</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Person</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Student</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Person</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>In this application only Teacher and Student objects can be created and you don’t want anyone to create an object of class\\nPerson. In this situation you make the Person class as abstract class.\\nIts syntax is as follows</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">abstract</span> <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span>\\n</code></pre>\\n      </div>\\n<p>Now, you cannot create a person object anywhere in the program. Only childs of Person i.e Teacher and Student objects can be\\ncreated.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code>Person p <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Person</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// It will give error</span>\\nPerson p1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Student</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// valid</span>\\nPerson p2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Teacher</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// valid</span>\\n\\nTeacher t1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Teacher</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// valid</span>\\nStudent s1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Student</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// valid</span>\\n</code></pre>\\n      </div>\\n<p>There are also some more concepts related to abstract classes which will be discussed later.</p>\",\"fields\":{\"slug\":\"/java/abstract-class/\"},\"frontmatter\":{\"title\":\"Abstract Classes in Java\"}}},\"pathContext\":{\"slug\":\"/java/abstract-class/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---java-abstract-class-7ac17a7efd62e29816a7.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Lets discuss abstract classes. Before diving into this tutorial it is better that you have understood concepts of classes\\nand inheritance.\\nLet’s suppose that you are building a java application and you have a parent class named Person and you have two child classes\\nTeacher and Student. The teacher and student class is inherited by the Person class. </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Teacher</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Person</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Student</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Person</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>In this application only Teacher and Student objects can be created and you don’t want anyone to create an object of class\\nPerson. In this situation you make the Person class as abstract class.\\nIts syntax is as follows</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">abstract</span> <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Person</span>\\n</code></pre>\\n      </div>\\n<p>Now, you cannot create a person object anywhere in the program. Only childs of Person i.e Teacher and Student objects can be\\ncreated.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code>Person p <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Person</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// It will give error</span>\\nPerson p1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Student</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// valid</span>\\nPerson p2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Teacher</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// valid</span>\\n\\nTeacher t1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Teacher</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// valid</span>\\nStudent s1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Student</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// valid</span>\\n</code></pre>\\n      </div>\\n<p>There are also some more concepts related to abstract classes which will be discussed later.</p>\",\"fields\":{\"slug\":\"/java/abstract-class/\"},\"frontmatter\":{\"title\":\"Abstract Classes in Java\"}}},\"pathContext\":{\"slug\":\"/java/abstract-class/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/java-abstract-class.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/java-abstract-class.json\n// module chunks = 5195562732123791000"],"sourceRoot":""}