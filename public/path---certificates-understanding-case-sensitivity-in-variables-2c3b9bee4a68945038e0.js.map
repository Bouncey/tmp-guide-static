{"version":3,"sources":["webpack:///path---certificates-understanding-case-sensitivity-in-variables-2c3b9bee4a68945038e0.js","webpack:///./.cache/json/certificates-understanding-case-sensitivity-in-variables.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-understanding-case-sensitivity-in-variables.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,kHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,y0BAAuzBC,QAAuCC,KAAA,8DAAoEC,aAAgBC,MAAA,iDAAwDC,aAAgBH,KAAA","file":"path---certificates-understanding-case-sensitivity-in-variables-2c3b9bee4a68945038e0.js","sourcesContent":["webpackJsonp([2282998951977941800],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-understanding-case-sensitivity-in-variables.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>In JavaScript all variables and function names are case sensitive. This means that capitalization matters.</p>\\n<p><code>MYVAR</code> is not the same as <code>MyVar</code> nor <code>myvar</code>. It is possible to have multiple distinct variables with the same name but different casing. It is strongly recommended that for the sake of clarity, you do not use this language feature.</p>\\n<h2>Best Practice</h2>\\n<p>Write variable names in Javascript in <code>camelCase</code>. In <code>camelCase</code>, <code>multi-word</code> variable names have the first word in lowercase and the first letter of each subsequent word is capitalized.</p>\\n<h2>Examples:</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var someVariable;\\nvar anotherVariableName;\\nvar thisVariableNameIsTooLong;</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/understanding-case-sensitivity-in-variables/\"},\"frontmatter\":{\"title\":\"Understanding Case Sensitivity in Variables\"}}},\"pathContext\":{\"slug\":\"/certificates/understanding-case-sensitivity-in-variables/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-understanding-case-sensitivity-in-variables-2c3b9bee4a68945038e0.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>In JavaScript all variables and function names are case sensitive. This means that capitalization matters.</p>\\n<p><code>MYVAR</code> is not the same as <code>MyVar</code> nor <code>myvar</code>. It is possible to have multiple distinct variables with the same name but different casing. It is strongly recommended that for the sake of clarity, you do not use this language feature.</p>\\n<h2>Best Practice</h2>\\n<p>Write variable names in Javascript in <code>camelCase</code>. In <code>camelCase</code>, <code>multi-word</code> variable names have the first word in lowercase and the first letter of each subsequent word is capitalized.</p>\\n<h2>Examples:</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var someVariable;\\nvar anotherVariableName;\\nvar thisVariableNameIsTooLong;</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/understanding-case-sensitivity-in-variables/\"},\"frontmatter\":{\"title\":\"Understanding Case Sensitivity in Variables\"}}},\"pathContext\":{\"slug\":\"/certificates/understanding-case-sensitivity-in-variables/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-understanding-case-sensitivity-in-variables.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-understanding-case-sensitivity-in-variables.json\n// module chunks = 2282998951977941800"],"sourceRoot":""}