webpackJsonp([0x66235fd742136400],{"./node_modules/json-loader/index.js!./.cache/json/javascript-tutorials-add-new-properties-to-a-javascript-object.json":function(a,s){a.exports={data:{markdownRemark:{html:'<p>You can add new properties to existing JavaScript objects the same way you would modify them.</p>\n<p>Here is how using dot notation:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>myDog.bark = "woof-woof";</code></pre>\n      </div>\n<p>Here is how using bracket notation:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>myObject<span class="token punctuation">[</span><span class="token string">\'myProperty\'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"myValue"</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Using bracket notation, we can utilize variables as property names:</p>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">var</span> dynamicProperty <span class="token operator">=</span> <span class="token string">"myProperty"</span><span class="token punctuation">;</span>\nmyObject<span class="token punctuation">[</span>dynamicProperty<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"myValue"</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>',fields:{slug:"/javascript/tutorials/add-new-properties-to-a-javascript-object/"},frontmatter:{title:"Add New Properties to a JavaScript Object"}}},pathContext:{slug:"/javascript/tutorials/add-new-properties-to-a-javascript-object/"}}}});
//# sourceMappingURL=path---javascript-tutorials-add-new-properties-to-a-javascript-object-bddc7011dce82d4dc706.js.map