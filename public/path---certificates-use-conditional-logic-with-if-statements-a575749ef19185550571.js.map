{"version":3,"sources":["webpack:///path---certificates-use-conditional-logic-with-if-statements-a575749ef19185550571.js","webpack:///./.cache/json/certificates-use-conditional-logic-with-if-statements.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-use-conditional-logic-with-if-statements.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,+GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,g/BAAimBC,QAA4aC,KAAA,2DAAiEC,aAAgBC,MAAA,8CAAqDC,aAAgBH,KAAA","file":"path---certificates-use-conditional-logic-with-if-statements-a575749ef19185550571.js","sourcesContent":["webpackJsonp([9537145849499195000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-use-conditional-logic-with-if-statements.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>We can use <code>if</code> statements in JavaScript to execute code only if the specified condition is met.</p>\\n<p>Each <code>if</code> statement requires a <code>boolean</code> condition to evaluate. If the boolean evaluates to <code>true</code>, the statements inside the curly braces will execute. Otherwise, if it evaluates to <code>false</code>, the code will not execute.</p>\\n<h2>Example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function trueOrFalse(myVal) {\\n  if (myVal > 10) {\\n     return \\\"Greater Than\\\";\\n  }\\n  return \\\"Not Greater Than\\\";\\n}</code></pre>\\n      </div>\\n<p>If <code>myVal</code> is greater than <code>10</code>, the function will return <code>\\\"Greater Than\\\"</code>. If it is not, the function will return <code>\\\"Not Greater Than\\\"</code>. Both <code>return</code> statements will never get executed because as soon as the first one is encountered, the execution exits the function and returns control to where the function was called.</p>\",\"fields\":{\"slug\":\"/certificates/use-conditional-logic-with-if-statements/\"},\"frontmatter\":{\"title\":\"Use Conditional Logic with if Statements\"}}},\"pathContext\":{\"slug\":\"/certificates/use-conditional-logic-with-if-statements/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-use-conditional-logic-with-if-statements-a575749ef19185550571.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>We can use <code>if</code> statements in JavaScript to execute code only if the specified condition is met.</p>\\n<p>Each <code>if</code> statement requires a <code>boolean</code> condition to evaluate. If the boolean evaluates to <code>true</code>, the statements inside the curly braces will execute. Otherwise, if it evaluates to <code>false</code>, the code will not execute.</p>\\n<h2>Example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function trueOrFalse(myVal) {\\n  if (myVal > 10) {\\n     return \\\"Greater Than\\\";\\n  }\\n  return \\\"Not Greater Than\\\";\\n}</code></pre>\\n      </div>\\n<p>If <code>myVal</code> is greater than <code>10</code>, the function will return <code>\\\"Greater Than\\\"</code>. If it is not, the function will return <code>\\\"Not Greater Than\\\"</code>. Both <code>return</code> statements will never get executed because as soon as the first one is encountered, the execution exits the function and returns control to where the function was called.</p>\",\"fields\":{\"slug\":\"/certificates/use-conditional-logic-with-if-statements/\"},\"frontmatter\":{\"title\":\"Use Conditional Logic with if Statements\"}}},\"pathContext\":{\"slug\":\"/certificates/use-conditional-logic-with-if-statements/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-use-conditional-logic-with-if-statements.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-use-conditional-logic-with-if-statements.json\n// module chunks = 9537145849499195000"],"sourceRoot":""}