{"version":3,"sources":["webpack:///path---javascript-switch-statements-b2f6104d51fb4471fa4f.js","webpack:///./.cache/json/javascript-switch-statements.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-switch-statements.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,sFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,w8PAAwyOC,QAAq5BC,KAAA,kCAAwCC,aAAgBC,MAAA,uBAA8BC,aAAgBH,KAAA","file":"path---javascript-switch-statements-b2f6104d51fb4471fa4f.js","sourcesContent":["webpackJsonp([6887555007796639000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-switch-statements.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Switch Statements</h2>\\n<!-- The article goes here, in GitHub-flavored Markdown. Feel free to add YouTube videos, images, and CodePen/JSBin embeds  -->\\n<p>A <code>switch</code> statement in programming is similar to an <code>if-else</code> statement, but has the benefit of sometimes being easier to read when there are a lot of conditions. Also it allows a <code>default</code> block to be added that will be executed if none of the other conditions are true.</p>\\n<h3>Syntax:</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">switch</span><span class=\\\"token punctuation\\\">(</span>expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span>\\n     console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n     <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n     console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'No true condition, default'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>The above snippet shows the syntax for a basic <code>switch</code> statement. In this example, there are 3 different scenarios for:</p>\\n<ul>\\n<li><code>expression = 1</code>: First condition is true, and <code>1</code> gets printed to the console.</li>\\n<li><code>expression = 2</code>: Second condition is true, and <code>2</code> gets printed to the console.</li>\\n<li><code>expression = 'anything else'</code>: Case 1 and Case 2 are both false, so the default condition is executed.</li>\\n</ul>\\n<p>The <code>default</code> condition is a condition that will be executed if none of the other cases are true.</p>\\n<h3>Break</h3>\\n<p>The <code>break</code> keyword is required in each case to make sure that only the code in that case gets executed. Without the break, multiple cases could be executed. When JavaScript reaches a <code>break</code> keyword, it breaks out of the switch block. If the <code>break</code> was left out of the above example, this is what would happen:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> expression <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">switch</span><span class=\\\"token punctuation\\\">(</span>expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 1 would be printed to console</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// As there is no break after case 1, this case is also executed.</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 2 would be printed to the console.</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// break -> Switch statement is exited</span>\\n  <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'No true condition, default'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3>Execute multiple cases:</h3>\\n<p><code>switch</code> statements also allow for the same code block to be executed by multiple cases. This can be done by adding 1 or more <code>case :</code> keywords before a code block.</p>\\n<p>Eg:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>day<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'it is nearly the weekend'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span> \\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'it is the weekend'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> \\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Looking forward to the Weekend'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>In the above snippet:</p>\\n<ul>\\n<li>If <code>day</code> is <code>4</code> or <code>5</code> (Thursday or Friday), <code>it is nearly the weekend</code> will be printed to the console as the first case gets executed.</li>\\n<li>If <code>day</code> is <code>0</code> or <code>6</code>, (Saturday or Sunday),<code>it is the weekend</code> will be printed to the console as the second case gets executed.</li>\\n<li>If <code>day</code> is any other value, <code>Looking forward to the Weekend</code> will be printed to the console, as the default case gets executed.</li>\\n</ul>\\n<h3>More Information:</h3>\\n<!-- Please add any articles you think might be helpful to read before writing the article -->\\n<p><a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/switch' target='_blank' rel='nofollow'>MDN Documentation for switch</a> </p>\",\"fields\":{\"slug\":\"/javascript/switch-statements/\"},\"frontmatter\":{\"title\":\"Switch Statements\"}}},\"pathContext\":{\"slug\":\"/javascript/switch-statements/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-switch-statements-b2f6104d51fb4471fa4f.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Switch Statements</h2>\\n<!-- The article goes here, in GitHub-flavored Markdown. Feel free to add YouTube videos, images, and CodePen/JSBin embeds  -->\\n<p>A <code>switch</code> statement in programming is similar to an <code>if-else</code> statement, but has the benefit of sometimes being easier to read when there are a lot of conditions. Also it allows a <code>default</code> block to be added that will be executed if none of the other conditions are true.</p>\\n<h3>Syntax:</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">switch</span><span class=\\\"token punctuation\\\">(</span>expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span>\\n     console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n     <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n   <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n     console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'No true condition, default'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>The above snippet shows the syntax for a basic <code>switch</code> statement. In this example, there are 3 different scenarios for:</p>\\n<ul>\\n<li><code>expression = 1</code>: First condition is true, and <code>1</code> gets printed to the console.</li>\\n<li><code>expression = 2</code>: Second condition is true, and <code>2</code> gets printed to the console.</li>\\n<li><code>expression = 'anything else'</code>: Case 1 and Case 2 are both false, so the default condition is executed.</li>\\n</ul>\\n<p>The <code>default</code> condition is a condition that will be executed if none of the other cases are true.</p>\\n<h3>Break</h3>\\n<p>The <code>break</code> keyword is required in each case to make sure that only the code in that case gets executed. Without the break, multiple cases could be executed. When JavaScript reaches a <code>break</code> keyword, it breaks out of the switch block. If the <code>break</code> was left out of the above example, this is what would happen:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> expression <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">switch</span><span class=\\\"token punctuation\\\">(</span>expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'1'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 1 would be printed to console</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// As there is no break after case 1, this case is also executed.</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// 2 would be printed to the console.</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// break -> Switch statement is exited</span>\\n  <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'No true condition, default'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3>Execute multiple cases:</h3>\\n<p><code>switch</code> statements also allow for the same code block to be executed by multiple cases. This can be done by adding 1 or more <code>case :</code> keywords before a code block.</p>\\n<p>Eg:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>day<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'it is nearly the weekend'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span> \\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">:</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'it is the weekend'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span> \\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Looking forward to the Weekend'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>In the above snippet:</p>\\n<ul>\\n<li>If <code>day</code> is <code>4</code> or <code>5</code> (Thursday or Friday), <code>it is nearly the weekend</code> will be printed to the console as the first case gets executed.</li>\\n<li>If <code>day</code> is <code>0</code> or <code>6</code>, (Saturday or Sunday),<code>it is the weekend</code> will be printed to the console as the second case gets executed.</li>\\n<li>If <code>day</code> is any other value, <code>Looking forward to the Weekend</code> will be printed to the console, as the default case gets executed.</li>\\n</ul>\\n<h3>More Information:</h3>\\n<!-- Please add any articles you think might be helpful to read before writing the article -->\\n<p><a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/switch' target='_blank' rel='nofollow'>MDN Documentation for switch</a> </p>\",\"fields\":{\"slug\":\"/javascript/switch-statements/\"},\"frontmatter\":{\"title\":\"Switch Statements\"}}},\"pathContext\":{\"slug\":\"/javascript/switch-statements/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-switch-statements.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-switch-statements.json\n// module chunks = 6887555007796639000"],"sourceRoot":""}