{"version":3,"sources":["webpack:///path---certificates-return-a-value-from-a-function-with-return-34793968833828177378.js","webpack:///./.cache/json/certificates-return-a-value-from-a-function-with-return.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-return-a-value-from-a-function-with-return.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,iHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,wxBAA4UC,QAAieC,KAAA,6DAAmEC,aAAgBC,MAAA,gDAAuDC,aAAgBH,KAAA","file":"path---certificates-return-a-value-from-a-function-with-return-34793968833828177378.js","sourcesContent":["webpackJsonp([6995448836980077000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-return-a-value-from-a-function-with-return.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>We can pass values into a function with <code>arguments</code>. You can use a <code>return</code> statement to send a value back out of a function.</p>\\n<h2>Example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function plusThree(num) {\\n  return num + 3;\\n}\\nvar answer = plusThree(5); // 8</code></pre>\\n      </div>\\n<p><code>plusThree</code> takes an <code>argument</code> for <code>num</code> and returns a value equal to <code>num + 3</code>.</p>\\n<p>A <code>return</code> statement will also end the execution of it’s parent function. Hence, any statements inside a function scope after a <code>return</code> statement will not be executed. In case of multiple <code>return</code> statements in a function, only the first one will get executed.</p>\",\"fields\":{\"slug\":\"/certificates/return-a-value-from-a-function-with-return/\"},\"frontmatter\":{\"title\":\"Return a Value from a Function with Return\"}}},\"pathContext\":{\"slug\":\"/certificates/return-a-value-from-a-function-with-return/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-return-a-value-from-a-function-with-return-34793968833828177378.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>We can pass values into a function with <code>arguments</code>. You can use a <code>return</code> statement to send a value back out of a function.</p>\\n<h2>Example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function plusThree(num) {\\n  return num + 3;\\n}\\nvar answer = plusThree(5); // 8</code></pre>\\n      </div>\\n<p><code>plusThree</code> takes an <code>argument</code> for <code>num</code> and returns a value equal to <code>num + 3</code>.</p>\\n<p>A <code>return</code> statement will also end the execution of it’s parent function. Hence, any statements inside a function scope after a <code>return</code> statement will not be executed. In case of multiple <code>return</code> statements in a function, only the first one will get executed.</p>\",\"fields\":{\"slug\":\"/certificates/return-a-value-from-a-function-with-return/\"},\"frontmatter\":{\"title\":\"Return a Value from a Function with Return\"}}},\"pathContext\":{\"slug\":\"/certificates/return-a-value-from-a-function-with-return/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-return-a-value-from-a-function-with-return.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-return-a-value-from-a-function-with-return.json\n// module chunks = 6995448836980077000"],"sourceRoot":""}