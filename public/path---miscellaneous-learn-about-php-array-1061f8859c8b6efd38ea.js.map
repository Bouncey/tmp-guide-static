{"version":3,"sources":["webpack:///path---miscellaneous-learn-about-php-array-1061f8859c8b6efd38ea.js","webpack:///./.cache/json/miscellaneous-learn-about-php-array.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/miscellaneous-learn-about-php-array.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,6FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,mmCAAugCC,QAAiHC,KAAA,yCAA+CC,aAAgBC,MAAA,2BAAkCC,aAAgBH,KAAA","file":"path---miscellaneous-learn-about-php-array-1061f8859c8b6efd38ea.js","sourcesContent":["webpackJsonp([8060574252535036000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/miscellaneous-learn-about-php-array.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>PHP Array</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Array Can Store multiple values in single Varible. \\nlet's think that you have a list of cars like ( 'BMW', 'Honda', Swift, 'XUV' )\\n\\nbut you want to separate this by categories like sport car, xuv. \\nbut you need to put it in a single varible then you need two arrays\\n\\n## Let's Solve this By Programming\\n\\n   <?php\\n          $sport_cars = array('BMW', 'Honda');\\n          $xuv_cars = array('Swift', 'XUV');\\n          echo \\\"Sport Cars List: \\\" . $sport_cars[0] . \\\", \\\" . $sport_cars[1] . \\\".\\\";\\n          echo \\\"XUV Cars List: \\\" . $xuv_cars[0] . \\\", \\\" . $xuv_cars[1] . \\\".\\\";\\n    ?>\\n\\nOutput:\\n    Sport Cars List: BMW, Honda.\\n    XUV Cars List: Swift, XUV.</code></pre>\\n      </div>\\n<p>Note That: array is Index from 0 to n you can access each value by passing there<br>\\nindex number to variable like follows</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>echo $sport_cars[0];\\n\\noutput:\\n    BMW</code></pre>\\n      </div>\\n<p>Like That you can access the element in array</p>\",\"fields\":{\"slug\":\"/miscellaneous/learn-about-php-array/\"},\"frontmatter\":{\"title\":\"Learn About Php Array\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/learn-about-php-array/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---miscellaneous-learn-about-php-array-1061f8859c8b6efd38ea.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>PHP Array</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Array Can Store multiple values in single Varible. \\nlet's think that you have a list of cars like ( 'BMW', 'Honda', Swift, 'XUV' )\\n\\nbut you want to separate this by categories like sport car, xuv. \\nbut you need to put it in a single varible then you need two arrays\\n\\n## Let's Solve this By Programming\\n\\n   <?php\\n          $sport_cars = array('BMW', 'Honda');\\n          $xuv_cars = array('Swift', 'XUV');\\n          echo \\\"Sport Cars List: \\\" . $sport_cars[0] . \\\", \\\" . $sport_cars[1] . \\\".\\\";\\n          echo \\\"XUV Cars List: \\\" . $xuv_cars[0] . \\\", \\\" . $xuv_cars[1] . \\\".\\\";\\n    ?>\\n\\nOutput:\\n    Sport Cars List: BMW, Honda.\\n    XUV Cars List: Swift, XUV.</code></pre>\\n      </div>\\n<p>Note That: array is Index from 0 to n you can access each value by passing there<br>\\nindex number to variable like follows</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>echo $sport_cars[0];\\n\\noutput:\\n    BMW</code></pre>\\n      </div>\\n<p>Like That you can access the element in array</p>\",\"fields\":{\"slug\":\"/miscellaneous/learn-about-php-array/\"},\"frontmatter\":{\"title\":\"Learn About Php Array\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/learn-about-php-array/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/miscellaneous-learn-about-php-array.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/miscellaneous-learn-about-php-array.json\n// module chunks = 8060574252535036000"],"sourceRoot":""}