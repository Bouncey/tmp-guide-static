{"version":3,"sources":["webpack:///path---certificates-extend-constructors-to-receive-arguments-c524210154a0a7acdc6d.js","webpack:///./.cache/json/certificates-extend-constructors-to-receive-arguments.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-extend-constructors-to-receive-arguments.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,mBAERC,+GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,8qBAAgqBC,QAAuCC,KAAA,2DAAiEC,aAAgBC,MAAA,8CAAqDC,aAAgBH,KAAA","file":"path---certificates-extend-constructors-to-receive-arguments-c524210154a0a7acdc6d.js","sourcesContent":["webpackJsonp([9890184264278300000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-extend-constructors-to-receive-arguments.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>When you have a constructor but don’t want to keep creating the same object, all you have to do is add parameters to the constructor the following way:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var Car = function(wheels, seats, engines) {\\n\\n  this.wheels = wheels;\\n\\n  this.seats = seats;\\n\\n  this.engines = engines;\\n\\n};</code></pre>\\n      </div>\\n<p>Now you can pass in arguments when you call the constructor. <code>var myCar = new Car(6, 3, 1);</code></p>\\n<p>This will result in:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>{\\n\\n  wheels: 6,\\n\\n  seats: 3,\\n\\n  engines: 1\\n\\n}</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/extend-constructors-to-receive-arguments/\"},\"frontmatter\":{\"title\":\"Extend Constructors to Receive Arguments\"}}},\"pathContext\":{\"slug\":\"/certificates/extend-constructors-to-receive-arguments/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-extend-constructors-to-receive-arguments-c524210154a0a7acdc6d.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>When you have a constructor but don’t want to keep creating the same object, all you have to do is add parameters to the constructor the following way:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var Car = function(wheels, seats, engines) {\\n\\n  this.wheels = wheels;\\n\\n  this.seats = seats;\\n\\n  this.engines = engines;\\n\\n};</code></pre>\\n      </div>\\n<p>Now you can pass in arguments when you call the constructor. <code>var myCar = new Car(6, 3, 1);</code></p>\\n<p>This will result in:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>{\\n\\n  wheels: 6,\\n\\n  seats: 3,\\n\\n  engines: 1\\n\\n}</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/extend-constructors-to-receive-arguments/\"},\"frontmatter\":{\"title\":\"Extend Constructors to Receive Arguments\"}}},\"pathContext\":{\"slug\":\"/certificates/extend-constructors-to-receive-arguments/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-extend-constructors-to-receive-arguments.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-extend-constructors-to-receive-arguments.json\n// module chunks = 9890184264278300000"],"sourceRoot":""}