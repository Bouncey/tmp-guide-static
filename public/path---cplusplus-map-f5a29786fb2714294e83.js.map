{"version":3,"sources":["webpack:///path---cplusplus-map-f5a29786fb2714294e83.js","webpack:///./.cache/json/cplusplus-map.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/cplusplus-map.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,uEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,82EAA0iEC,QAAuWC,KAAA,mBAAyBC,aAAgBC,MAAA,SAAgBC,aAAgBH,KAAA","file":"path---cplusplus-map-f5a29786fb2714294e83.js","sourcesContent":["webpackJsonp([9058004532288424000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/cplusplus-map.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Introduction of map</h2>\\n<p><code>map</code> is an associative container that store elements in key-value pair. Just like in <code>Java</code> have collection, associative array in PHP and so on.</p>\\n<h2>Benefits of using map</h2>\\n<ul>\\n<li>It stores only unique keys and that too in sorted order based on its assigned sorting criteria.</li>\\n<li>As keys are in sorted order therefore searching element in map through key is very fast i.e. it takes logarithmic time.</li>\\n<li>In <code>map</code> there will be only one value attached with the every key.</li>\\n<li><code>map</code> can be used as associative arrays.</li>\\n<li>It might be implemented using balanced binary trees.</li>\\n</ul>\\n<p>Here is an example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c++\\\"><code>#include <iostream>\\n#include <map>\\n\\nusing namespace std;\\n\\nint main (){\\n  map<char,int> first;\\n  \\n  //initializing\\n  first['a']=10;\\n  first['b']=20;\\n  first['c']=30;\\n  first['d']=40;\\n  \\n   map<char, int>::iterator it;\\n   for(it=first.begin(); it!=first.end(); ++it){\\n      cout << it->first << \\\" => \\\" << it->second << '\\\\n';\\n   }\\n   \\n  return 0;\\n}</code></pre>\\n      </div>\\n<p>Output:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>a => 10\\nb => 20\\nc => 30\\nd => 40</code></pre>\\n      </div>\\n<h2>Creating map object</h2>\\n<p><code>map&#x3C;string, int> myMap;</code></p>\\n<h2>Insertion</h2>\\n<p>Inserting data with insert member function.</p>\\n<p><code>myMap.insert(make_pair(\\\"earth\\\", 1));</code>\\n<code>myMap.insert(make_pair(\\\"moon\\\", 2));</code></p>\\n<p>We can also insert data in std::map using operator [] i.e.</p>\\n<p><code>myMap[\\\"sun\\\"] = 3;</code></p>\\n<h2>Accessing map elements</h2>\\n<p>To access map elements, you have to create iterator for it. Here is an example as stated before.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c++\\\"><code>map<char, int>::iterator it;\\n   for(it=first.begin(); it!=first.end(); ++it){\\n      cout << it->first << \\\" => \\\" << it->second << '\\\\n';\\n   }</code></pre>\\n      </div>\\n<p>Here you can learn more about map: <a href=\\\"http://www.cplusplus.com/reference/map/map/map/\\\" target=\\\"_blank\\\">cpluspluc_map</a></p>\\n<p>N.B: All code in example are in C++11 version. You can learn more about C++ version <a href=\\\"http://en.cppreference.com/w/cpp/compiler_support\\\" target=\\\"_blank\\\">Here</a></p>\",\"fields\":{\"slug\":\"/cplusplus/map/\"},\"frontmatter\":{\"title\":\"Map\"}}},\"pathContext\":{\"slug\":\"/cplusplus/map/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---cplusplus-map-f5a29786fb2714294e83.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Introduction of map</h2>\\n<p><code>map</code> is an associative container that store elements in key-value pair. Just like in <code>Java</code> have collection, associative array in PHP and so on.</p>\\n<h2>Benefits of using map</h2>\\n<ul>\\n<li>It stores only unique keys and that too in sorted order based on its assigned sorting criteria.</li>\\n<li>As keys are in sorted order therefore searching element in map through key is very fast i.e. it takes logarithmic time.</li>\\n<li>In <code>map</code> there will be only one value attached with the every key.</li>\\n<li><code>map</code> can be used as associative arrays.</li>\\n<li>It might be implemented using balanced binary trees.</li>\\n</ul>\\n<p>Here is an example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c++\\\"><code>#include <iostream>\\n#include <map>\\n\\nusing namespace std;\\n\\nint main (){\\n  map<char,int> first;\\n  \\n  //initializing\\n  first['a']=10;\\n  first['b']=20;\\n  first['c']=30;\\n  first['d']=40;\\n  \\n   map<char, int>::iterator it;\\n   for(it=first.begin(); it!=first.end(); ++it){\\n      cout << it->first << \\\" => \\\" << it->second << '\\\\n';\\n   }\\n   \\n  return 0;\\n}</code></pre>\\n      </div>\\n<p>Output:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>a => 10\\nb => 20\\nc => 30\\nd => 40</code></pre>\\n      </div>\\n<h2>Creating map object</h2>\\n<p><code>map&#x3C;string, int> myMap;</code></p>\\n<h2>Insertion</h2>\\n<p>Inserting data with insert member function.</p>\\n<p><code>myMap.insert(make_pair(\\\"earth\\\", 1));</code>\\n<code>myMap.insert(make_pair(\\\"moon\\\", 2));</code></p>\\n<p>We can also insert data in std::map using operator [] i.e.</p>\\n<p><code>myMap[\\\"sun\\\"] = 3;</code></p>\\n<h2>Accessing map elements</h2>\\n<p>To access map elements, you have to create iterator for it. Here is an example as stated before.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c++\\\"><code>map<char, int>::iterator it;\\n   for(it=first.begin(); it!=first.end(); ++it){\\n      cout << it->first << \\\" => \\\" << it->second << '\\\\n';\\n   }</code></pre>\\n      </div>\\n<p>Here you can learn more about map: <a href=\\\"http://www.cplusplus.com/reference/map/map/map/\\\" target=\\\"_blank\\\">cpluspluc_map</a></p>\\n<p>N.B: All code in example are in C++11 version. You can learn more about C++ version <a href=\\\"http://en.cppreference.com/w/cpp/compiler_support\\\" target=\\\"_blank\\\">Here</a></p>\",\"fields\":{\"slug\":\"/cplusplus/map/\"},\"frontmatter\":{\"title\":\"Map\"}}},\"pathContext\":{\"slug\":\"/cplusplus/map/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/cplusplus-map.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/cplusplus-map.json\n// module chunks = 9058004532288424000"],"sourceRoot":""}