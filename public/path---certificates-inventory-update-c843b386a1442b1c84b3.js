webpackJsonp([0xf7f33dc904800000],{"./node_modules/json-loader/index.js!./.cache/json/certificates-inventory-update.json":function(n,s){n.exports={data:{markdownRemark:{html:'<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3" title=":triangular_flag_on_post:" alt=":triangular_flag_on_post:" class="forum-image"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3" title=":busts_in_silhouette:" alt=":busts_in_silhouette:" class="forum-image"> and write your own code <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3" title=":pencil:" alt=":pencil:" class="forum-image"></p>\n<h3><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3" title=":checkered_flag:" alt=":checkered_flag:" class="forum-image"> Problem Explanation:</h3>\n<p>In this problem, you’ve to compare and update the inventory stored in a 2D array against a second 2D array of a fresh delivery. Update the current existing inventory item quantities (in <code>arr1</code>). If an item cannot be found, add the new item and quantity into the inventory array. The returned inventory array should be in alphabetical order by item.</p>\n<p>The current as well as new inventory will be in this format: <code>[[2, "item-0"], [3, "item-1"], [67, "item-2"], [7, "item-3"]]</code>.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href=\'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\' target=\'_blank\' rel=\'nofollow\'>JS Array</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" title=":speech_balloon:" alt=":speech_balloon:" class="forum-image"> Hint: 1</h2>\n<p>You need to work through each item of the new inventory to see if it exists in the current inventory or not. Remember that the product name is stored as the second element of each sub-array: <code>array[0][1] = "item-name"</code>.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" title=":speech_balloon:" alt=":speech_balloon:" class="forum-image"> Hint: 2</h2>\n<p>If the item exists, you need to add the quantity from the new inventory. If the item doesn’t exist, you need to add the entire item.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" title=":speech_balloon:" alt=":speech_balloon:" class="forum-image"> Hint: 3</h2>\n<p>Return the completed inventory in alphabetical order.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2>Spoiler Alert!</h2>\n<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif" alt="warning sign"></p>\n<p><strong>Solution ahead!</strong></p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3" title=":beginner:" alt=":beginner:" class="forum-image"> Basic Code Solution:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">updateInventory</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment" spellcheck="true">// Variable for location of product</span>\n        <span class="token keyword">var</span> index<span class="token punctuation">;</span>\n\n        <span class="token comment" spellcheck="true">// A helper method to return the index of a specified product (undefined if not found)</span>\n        <span class="token keyword">var</span> getProductIndex <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">\'https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3 ":rocket:"\'</span> target<span class="token operator">=</span><span class="token string">\'_blank\'</span> rel<span class="token operator">=</span><span class="token string">\'nofollow\'</span><span class="token operator">></span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> i<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> undefined<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment" spellcheck="true">// For each item of the new Inventory</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            <span class="token comment" spellcheck="true">// Invoke our helper function using arr1 as this</span>\n            index <span class="token operator">=</span> getProductIndex<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment" spellcheck="true">// If the item doesn\'t exist</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment" spellcheck="true">// Push the entire item</span>\n                arr1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token comment" spellcheck="true">// Add the new quantity of the current item</span>\n                arr1<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n        <span class="token punctuation">}</span>\n\n        <span class="token comment" spellcheck="true">// Sort alphabetically, by the product name of each item</span>\n        arr1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> arr1<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment" spellcheck="true">// test here</span>\n    <span class="token comment" spellcheck="true">// Example inventory lists</span>\n    <span class="token keyword">var</span> curInv <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"Bowling Ball"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Dirty Sock"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Hair Pin"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"Microphone"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> newInv <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Hair Pin"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"Half-Eaten Apple"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">67</span><span class="token punctuation">,</span> <span class="token string">"Bowling Ball"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">"Toothpaste"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">updateInventory</span><span class="token punctuation">(</span>curInv<span class="token punctuation">,</span> newInv<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" title=":rocket:" alt=":rocket:" class="forum-image"> <a href=\'https://repl.it/CLok/0\' target=\'_blank\' rel=\'nofollow\'>Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>The variable <strong>index</strong> stores the location (index) of a product.</li>\n<li>The helper function <code>getProductIndex()</code> returns the index of a specified product. It iterates through each element of the array that it is called on until it can find the name parameter. If the product is not found in the inventory, <code>undefined</code> is returned.</li>\n<li>\n<p>Then, each item in the new inventory (delivery) is worked through:</p>\n<ul>\n<li><strong>index</strong> is set to the result of invoking the helper function i.e., search the new inventory for that product name and return it’s index.</li>\n<li>If the item is found, quantity of the product is added to the quantity of the same product in current inventory.</li>\n<li>If the item is not found, the entire product (name and quantity) is added to the current inventory.</li>\n</ul>\n</li>\n<li>The updated inventory, <strong>arr1</strong>, is then sorted by product name (held in <code>arr1[x][1]</code>).</li>\n<li>The final - updated as well as sorted array is then returned.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href=\'https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/this\' target=\'_blank\' rel=\'nofollow\'>JS this</a></li>\n<li><a href=\'https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length\' target=\'_blank\' rel=\'nofollow\'>JS Array.length</a></li>\n<li><a href=\'http://forum.freecodecamp.com/t/javascript-array-prototype-push/14298\' target=\'_blank\' rel=\'nofollow\'>JS Array.prototype.push()</a></li>\n<li><a href=\'http://forum.freecodecamp.com/t/javascript-array-prototype-sort/14306\' target=\'_blank\' rel=\'nofollow\'>JS Array.prototype.sort()</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3" title=":sunflower:" alt=":sunflower:" class="forum-image"> Intermediate Code Solution:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">updateInventory</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment" spellcheck="true">// All inventory must be accounted for or you\'re fired!</span>\n\n      <span class="token keyword">var</span> index<span class="token punctuation">;</span>\n      <span class="token keyword">var</span> arrCurInvName <span class="token operator">=</span> <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">\'https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3 ":rocket:"\'</span> target<span class="token operator">=</span><span class="token string">\'_blank\'</span> rel<span class="token operator">=</span><span class="token string">\'nofollow\'</span><span class="token operator">></span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Names of arr1\'s items</span>\n      <span class="token keyword">var</span> arrNeInvName <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Names of arr2\'s items</span>\n\n      <span class="token comment" spellcheck="true">// Same as using two for loops, this takes care of increasing the number of stock quantity.</span>\n      arr1<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item1<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> arr2<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>item1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">===</span> item2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            item1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> item1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> item2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//Increase number of stock</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment" spellcheck="true">// Get item\'s name for new Inventory</span>\n      arr2<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        arrNeInvName<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment" spellcheck="true">// Get item\'s name for Current Inventory</span>\n      arr1<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        arrCurInvName<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment" spellcheck="true">// Add new inventory items to current inventory.</span>\n      arrNeInvName<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>arrCurInvName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          index <span class="token operator">=</span> arrNeInvName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          arr1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr2<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment" spellcheck="true">// Sort the array alphabetically using the second element of the array as base.</span>\n      arr1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>currItem<span class="token punctuation">,</span> nextItem<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment" spellcheck="true">//Ternary function to avoid using if else</span>\n        <span class="token keyword">return</span> currItem<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> nextItem<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> arr1<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment" spellcheck="true">// test here</span>\n    <span class="token comment" spellcheck="true">// Example inventory lists</span>\n    <span class="token keyword">var</span> curInv <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"Bowling Ball"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Dirty Sock"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Hair Pin"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"Microphone"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> newInv <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Hair Pin"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"Half-Eaten Apple"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">67</span><span class="token punctuation">,</span> <span class="token string">"Bowling Ball"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">"Toothpaste"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">updateInventory</span><span class="token punctuation">(</span>curInv<span class="token punctuation">,</span> newInv<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" title=":rocket:" alt=":rocket:" class="forum-image"> <a href=\'https://repl.it/CLol/0\' target=\'_blank\' rel=\'nofollow\'>Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>The variable <strong>index</strong> stores the location (index) of a product.</li>\n<li><strong>arrCurInvName</strong> has the names of <strong>arr1</strong>’s items.</li>\n<li><strong>arrNeInvName</strong> has the names of <strong>arr2</strong>’s items.</li>\n<li><code>arr1.map(function(item1))</code> takes care of items already existing in inventory i.e., it increases the quantity in the inventory.</li>\n<li>Next, <code>arr2.map(function(item))</code> and <code>arr1.map(function(item))</code> get the names of items for the new and current inventory respectively.</li>\n<li><code>arrNeInvName.map(function(item))</code> handles items which don’t already exist in inventory i.e., it adds new items to the inventory.</li>\n<li>The updated array <strong>arr1</strong> is then sorted alphabetically by product name (held in <code>arr1[x][1]</code>) and returned.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href=\'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\' target=\'_blank\' rel=\'nofollow\'>JS Array.prototype.map()</a></li>\n<li><a href=\'http://forum.freecodecamp.com/t/javascript-array-prototype-indexof/14291\' target=\'_blank\' rel=\'nofollow\'>JS Array.prototype.indexOf()</a></li>\n<li><a href=\'http://forum.freecodecamp.com/t/javascript-ternary-operator/15973\' target=\'_blank\' rel=\'nofollow\'>JS Ternary Operator</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3" title=":rotating_light:" alt=":rotating_light:" class="forum-image"> Advanced Code Solution:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">updateInventory</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment" spellcheck="true">// All inventory must be accounted for or you\'re fired!</span>\n\n      <span class="token comment" spellcheck="true">// convert current inventory (arr1) to an one-dimensional array</span>\n      <span class="token keyword">const</span> inventory <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>concat<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment" spellcheck="true">// loop through new delivery (arr2)</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n        <span class="token comment" spellcheck="true">// extract item properties for easy reference</span>\n        <span class="token keyword">const</span> item <span class="token operator">=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> quantity <span class="token operator">=</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n        <span class="token comment" spellcheck="true">// check if item already exists in inventory</span>\n        <span class="token keyword">const</span> position <span class="token operator">=</span> inventory<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment" spellcheck="true">// exsisting item: update quantity</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">const</span> row <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>position <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          arr1<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+=</span> quantity<span class="token punctuation">;</span>\n          <span class="token keyword">continue</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment" spellcheck="true">// alien item: add to inventory</span>\n        arr1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>quantity<span class="token punctuation">,</span> item<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token punctuation">}</span>\n\n      <span class="token comment" spellcheck="true">// sort inventory in alphabetical order</span>\n      arr1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>previous<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>previous<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token punctuation">[</span>next<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> arr1<span class="token punctuation">;</span>\n\n    <span class="token punctuation">}</span>\n\n\n    <span class="token comment" spellcheck="true">// test here</span>\n    <span class="token comment" spellcheck="true">// Example inventory lists</span>\n    <span class="token keyword">var</span> curInv <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">"Bowling Ball"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Dirty Sock"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Hair Pin"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"Microphone"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> newInv <span class="token operator">=</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Hair Pin"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"Half-Eaten Apple"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">67</span><span class="token punctuation">,</span> <span class="token string">"Bowling Ball"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">"Toothpaste"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token function">updateInventory</span><span class="token punctuation">(</span>curInv<span class="token punctuation">,</span> newInv<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" title=":rocket:" alt=":rocket:" class="forum-image"> <a href=\'https://repl.it/MQvv/latest\' target=\'_blank\' rel=\'nofollow\'>Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Convert current inventory array <strong>arr1</strong> to an one-dimensional array in order that <code>indexOf()</code> method could be used to check existance of new delivery items in current inventory.</li>\n<li>Check if item already exists in current inventory using <code>indexOf()</code>.</li>\n<li>If item exists update quantity and continue loop execution.</li>\n<li>Else append item to inventory.</li>\n<li>Finally, sort the array alphabetically and return the updated inventory.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href=\'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\'>JS Function.prototype.apply()</a></li>\n<li><a href=\'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/continue\' target=\'_blank\' rel=\'nofollow\'>JS continue</a></li>\n<li><a href=\'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\' target=\'_blank\' rel=\'nofollow\'>JS Array.prototype.sort()</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3" title=":clipboard:" alt=":clipboard:" class="forum-image"> NOTES FOR CONTRIBUTIONS:</h2>\n<ul>\n<li><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" title=":warning:" alt=":warning:" class="forum-image"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\n<li>Add an explanation of your solution.</li>\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3" title=":traffic_light:" alt=":traffic_light:" class="forum-image"></li>\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" title=":warning:" alt=":warning:" class="forum-image"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\n</ul>\n<blockquote>\n<p>See <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3" title=":point_right:" alt=":point_right:" class="forum-image"> <a href=\'http://forum.freecodecamp.com/t/algorithm-article-template/14272\' target=\'_blank\' rel=\'nofollow\'><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\n</blockquote>',
fields:{slug:"/certificates/inventory-update/"},frontmatter:{title:"Inventory Update"}}},pathContext:{slug:"/certificates/inventory-update/"}}}});
//# sourceMappingURL=path---certificates-inventory-update-c843b386a1442b1c84b3.js.map