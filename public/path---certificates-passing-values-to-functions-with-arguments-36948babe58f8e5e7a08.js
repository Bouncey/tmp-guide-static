webpackJsonp([0xe519be9865ea3800],{"./node_modules/json-loader/index.js!./.cache/json/certificates-passing-values-to-functions-with-arguments.json":function(e,a){e.exports={data:{markdownRemark:{html:'<p><code>Parameters</code> are variables that act as placeholders for the values that are to be input to a function when it is called. When a function is defined, it is typically defined along with one or more parameters. The actual values that are input (or ”<em>passed</em>”) into a function when it is called are known as <code>arguments</code>.</p>\n<p>Here is a function with two parameters, <code>param1</code> and <code>param2</code>:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>function functionWithArgs(param1, param2) {\n  console.log(param1, param2);\n}</code></pre>\n      </div>\n<p>Then we can call functionWithArgs:</p>\n<p><code>functionWithArgs("Hello", "World");</code></p>\n<p>We have passed two arguments, <code>"Hello"</code> and <code>"World"</code>. Inside the function, <code>param1</code> will equal “Hello” and <code>param2</code> will equal “World”. Note that you could call <code>functionWithArgs</code> again with different arguments and the parameters would take on the value of the new arguments.</p>',fields:{slug:"/certificates/passing-values-to-functions-with-arguments/"},frontmatter:{title:"Passing Values to Functions with Arguments"}}},pathContext:{slug:"/certificates/passing-values-to-functions-with-arguments/"}}}});
//# sourceMappingURL=path---certificates-passing-values-to-functions-with-arguments-36948babe58f8e5e7a08.js.map