webpackJsonp([0x34667d6417a72200],{"./node_modules/json-loader/index.js!./.cache/json/csharp-expression-bodied-functions-and-properties.json":function(e,n){e.exports={data:{markdownRemark:{html:'<h1>Expression Bodied Functions and Properties</h1>\n<p>You can declare functions and properties as a lambda expression, without the need for a statement block. Intended for simple implementations, this syntax is more concise than declaring a regular method or property in that it eliminates the need for some of the curly braces and the use of an explicit return statement.</p>\n<p>Here is an example of a regular method declaration:</p>\n<h2></h2>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>public Point CreatePoint(int x, int y)\n{\n    return new Point(x, y);\n}</code></pre>\n      </div>\n<p>The following gives the same result, but is written as an expression bodied function:</p>\n<h2></h2>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>public Point CreatePoint(int x, int y) => new Point(x, y);</code></pre>\n      </div>',fields:{slug:"/csharp/expression-bodied-functions-and-properties/"},frontmatter:{title:"Expression Bodied Functions and Properties"}}},pathContext:{slug:"/csharp/expression-bodied-functions-and-properties/"}}}});
//# sourceMappingURL=path---csharp-expression-bodied-functions-and-properties-b68257fdd9a4512db9d7.js.map