{"version":3,"sources":["webpack:///path---logic-tautologies-faf4df6f9386a94e5e6f.js","webpack:///./.cache/json/logic-tautologies.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/logic-tautologies.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,2EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,uwCAAAC,QAA8xCC,KAAA,uBAA6BC,aAAgBC,MAAA,iBAAwBC,aAAgBH,KAAA","file":"path---logic-tautologies-faf4df6f9386a94e5e6f.js","sourcesContent":["webpackJsonp([5771246277203061000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/logic-tautologies.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Tautologies</h2>\\n<h3>Definition</h3>\\n<p>In logic, a tautology is a statement that is true in every possible case. The opposite of a tautology is a contradiction, a statement being false in every possible cases.</p>\\n<h3>Example</h3>\\n<table>\\n  <tr>\\n    <th>p</th>\\n    <th>q</th> \\n    <th>p OR q</th>\\n    <th>p → p OR q</th>\\n  </tr>\\n  <tr>\\n    <td>T</td>\\n    <td>T</td>\\n    <td>T</tq>\\n    <td>T</td>\\n  </tr>\\n  <tr>\\n    <td>T</td>\\n    <td>F</td>\\n    <td>T</td>\\n    <td>T</td>\\n  </tr>\\n  <tr>\\n    <td>F</td>\\n    <td>T</td>\\n    <td>T</td>\\n    <td>T</td>\\n  </tr>\\n  <tr>\\n    <td>F</td>\\n    <td>F</td>\\n    <td>F</td>\\n    <td>T</td>\\n  </tr>\\n</table>\\n<p>As we can see in the truth table, the statement “p → p OR q” is always true (see last column). </p>\\n<h4>Note</h4>\\n<p>The arrow simply means “implies”. p implies p OR q, it can also mean <i>if…then…</i>  </p>\\n<h4>More Information:</h4>\\n<!-- Please add any articles you think might be helpful to read before writing the article -->\\n<p><a href=\\\"https://en.wikipedia.org/wiki/Tautology_(logic)\\\">Wikipedia Tautology (Logic)</a>\\n<a href=\\\"https://www.youtube.com/watch?v=O0KbymjE7xU\\\">Youtube Truth Tables</a>\\n<a href=\\\"https://en.wikipedia.org/wiki/List_of_logic_symbols\\\">Wikipedia Logic Symbols</a></p>\",\"fields\":{\"slug\":\"/logic/tautologies/\"},\"frontmatter\":{\"title\":\"Tautologies\"}}},\"pathContext\":{\"slug\":\"/logic/tautologies/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---logic-tautologies-faf4df6f9386a94e5e6f.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Tautologies</h2>\\n<h3>Definition</h3>\\n<p>In logic, a tautology is a statement that is true in every possible case. The opposite of a tautology is a contradiction, a statement being false in every possible cases.</p>\\n<h3>Example</h3>\\n<table>\\n  <tr>\\n    <th>p</th>\\n    <th>q</th> \\n    <th>p OR q</th>\\n    <th>p → p OR q</th>\\n  </tr>\\n  <tr>\\n    <td>T</td>\\n    <td>T</td>\\n    <td>T</tq>\\n    <td>T</td>\\n  </tr>\\n  <tr>\\n    <td>T</td>\\n    <td>F</td>\\n    <td>T</td>\\n    <td>T</td>\\n  </tr>\\n  <tr>\\n    <td>F</td>\\n    <td>T</td>\\n    <td>T</td>\\n    <td>T</td>\\n  </tr>\\n  <tr>\\n    <td>F</td>\\n    <td>F</td>\\n    <td>F</td>\\n    <td>T</td>\\n  </tr>\\n</table>\\n<p>As we can see in the truth table, the statement “p → p OR q” is always true (see last column). </p>\\n<h4>Note</h4>\\n<p>The arrow simply means “implies”. p implies p OR q, it can also mean <i>if…then…</i>  </p>\\n<h4>More Information:</h4>\\n<!-- Please add any articles you think might be helpful to read before writing the article -->\\n<p><a href=\\\"https://en.wikipedia.org/wiki/Tautology_(logic)\\\">Wikipedia Tautology (Logic)</a>\\n<a href=\\\"https://www.youtube.com/watch?v=O0KbymjE7xU\\\">Youtube Truth Tables</a>\\n<a href=\\\"https://en.wikipedia.org/wiki/List_of_logic_symbols\\\">Wikipedia Logic Symbols</a></p>\",\"fields\":{\"slug\":\"/logic/tautologies/\"},\"frontmatter\":{\"title\":\"Tautologies\"}}},\"pathContext\":{\"slug\":\"/logic/tautologies/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/logic-tautologies.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/logic-tautologies.json\n// module chunks = 5771246277203061000"],"sourceRoot":""}