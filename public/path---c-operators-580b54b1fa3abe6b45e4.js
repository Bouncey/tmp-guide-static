webpackJsonp([0xf8fe5bb980c2e000],{"./node_modules/json-loader/index.js!./.cache/json/c-operators.json":function(n,s){n.exports={data:{markdownRemark:{html:'<h1>Operators in C</h1>\n<h2>1. Arithmetic Operators</h2>\n<ul>\n<li>\n<p><code>+</code> Adds to operands (values) </p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = 7</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>-</code>Subtracts the second operand from the first</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = -1</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>*</code> Multiplies two operands</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">*</span> b<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = 72</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>/</code> Divides the first operand by the second</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">/</span> b<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = 2</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>%</code> Gives the remainder after an integer division</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> c <span class="token operator">=</span> b <span class="token operator">%</span> a<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = 1 because b = 1*a + 1 = 8 + 1</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>++</code> Increases int value by one</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>\na<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// a = 9</span>\n<span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// a = 10, b = 9</span>\n<span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token operator">++</span>a<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// a = 11, c = 11</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>--</code> Decreases int value by one</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>\na<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// a = 7</span>\n<span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// a = 6, b = 7</span>\n<span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token operator">--</span>a<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// a = 5, c = 5</span>\n</code></pre>\n      </div>\n<h2>2. Logical Operators</h2>\n</li>\n<li>\n<p><code>==</code> True when the two operands are equal</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\nbool c <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = true</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>!=</code> True when the two operands are NOT equal</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>\nbool c <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = true</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>></code> Greater than - True when first operand is bigger than the second.</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\nbool c <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">></span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = true</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>&#x3C;</code> Less than - True when the first operand is smaller then the second.</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>\nbool c <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = true</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>>=</code> Greater than or equal - True when the first operand is bigger, or equal to the second.</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\nbool c <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">>=</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = true</span>\nbool d <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">>=</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// d = true</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>&#x3C;=</code> Less than or equal - True when the first operand is smaller or equal to the second.</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>\nbool c <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;=</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// c = true</span>\n</code></pre>\n      </div>\n<ul>\n<li>\n<p><code>&#x26;&#x26;</code> AND operator - True when <strong>both</strong> of the operands are true.</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>bool c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token operator">!=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// both operands true, therefore c = true</span>\n</code></pre>\n      </div>\n</li>\n</ul>\n</li>\n<li>\n<p><code>||</code> OR operator - True when either the first or the second operands are true (or both)</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>bool c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// first operand is true, therefore c = true</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>!</code> NOT operator - True when the operand is false. </p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>bool c <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// translate: NOT (false), therefore c = true</span>\n</code></pre>\n      </div>\n</li>\n</ul>\n<h2>3. Bitwise Operators</h2>\n<ul>\n<li>\n<p><code>&#x26;</code> AND operator - If at a place there is a bit in both operands, then it is copied to the result</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>A <span class="token operator">=</span> <span class="token number">11001</span>\nB <span class="token operator">=</span> <span class="token number">01000</span>\nRESULT <span class="token operator">=</span> <span class="token number">01000</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>|</code> OR operator - If at a place there is a bit in either operands, then it is copied to the result</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>A <span class="token operator">=</span> <span class="token number">11001</span>\nB <span class="token operator">=</span> <span class="token number">01000</span>\nRESULT <span class="token operator">=</span> <span class="token number">11001</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>^</code> XOR (exclusive OR) operator - If at a place there is a bit in one of the operands (not both), then it is copied to the result</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>A <span class="token operator">=</span> <span class="token number">11001</span>\nB <span class="token operator">=</span> <span class="token number">01000</span>\nRESULT <span class="token operator">=</span> <span class="token number">10001</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>~</code> Negation operator - Reverses the bits. 1 -> 0, 0 -> 1</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>C <span class="token operator">=</span> <span class="token number">01000</span>\nRESULT <span class="token operator">=</span> <span class="token number">10111</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>&#x3C;&#x3C;</code> Left shift operator - The left operand is moved left by as many bits, as the right operand</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>A <span class="token operator">=</span> <span class="token number">11001</span>\n A <span class="token operator">&lt;&lt;</span> <span class="token number">2</span>\nRESULT <span class="token operator">=</span> <span class="token number">00100</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>>></code> Right shift operator - The left operand is moved right by as many bits, as the right operand</p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code>A <span class="token operator">=</span> <span class="token number">11001</span>\n A <span class="token operator">>></span> <span class="token number">2</span>\nRESULT <span class="token operator">=</span> <span class="token number">00110</span>\n</code></pre>\n      </div>\n</li>\n</ul>\n<h2>4. Assignment Operators</h2>\n<ul>\n<li>\n<p><code>=</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// \'a\' is going to be equal to 7</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>+=</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>\na <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// equivalent to a = a + 5 = 7 + 5 = 12</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>-=</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>\na <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// equivalent to a = a - 2 = 7 - 2 = 5</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>*=</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>\na <span class="token operator">*</span><span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// equivalent to a = a * 3 = 7 * 3 = 21</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>/=</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">21</span><span class="token punctuation">;</span>\na <span class="token operator">/</span><span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// equivalent to a = a / 3 = 21 / 3 = 7</span>\n</code></pre>\n      </div>\n</li>\n<li>\n<p><code>%=</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">21</span><span class="token punctuation">;</span>\na <span class="token operator">%</span><span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// equivalent to a = a % 5 = 21 % 5 = 1</span>\n</code></pre>\n      </div>\n</li>\n</ul>',fields:{slug:"/c/operators/"},frontmatter:{title:"Operators"}}},pathContext:{slug:"/c/operators/"}}}});
//# sourceMappingURL=path---c-operators-580b54b1fa3abe6b45e4.js.map