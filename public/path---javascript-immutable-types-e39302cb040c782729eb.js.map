{"version":3,"sources":["webpack:///path---javascript-immutable-types-e39302cb040c782729eb.js","webpack:///./.cache/json/javascript-immutable-types.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-immutable-types.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,oFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,gyBAAuVC,QAAseC,KAAA,gCAAsCC,aAAgBC,MAAA,qBAA4BC,aAAgBH,KAAA","file":"path---javascript-immutable-types-e39302cb040c782729eb.js","sourcesContent":["webpackJsonp([2678559723039744000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-immutable-types.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<blockquote>\\n<p>Immutable means unchangeable i.e. you can’t change.</p>\\n</blockquote>\\n<p>Javascript has lots of immutable types e.g. <code>string</code> primitive type. Try this in your console.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>s = \\\"red\\\";\\nconsole.log(s[1]); //→ \\\"e\\\"\\ns[1] = \\\"x\\\";\\nconsole.log(s) //→ \\\"red\\\"</code></pre>\\n      </div>\\n<p>the <code>s</code> didn’t change! <a>WAT</a>!</p>\\n<h2>Details</h2>\\n<p>Some string methods like <code>String.replace</code> returns a new string.</p>\\n<p>JavaScript has one complex data type, the Object data type, and it has five simple data types: Number, String, Boolean, Undefined, and Null. These simple (primitive) data types are immutable (cannot be changed), while objects are mutable (can be changed).</p>\",\"fields\":{\"slug\":\"/javascript/immutable-types/\"},\"frontmatter\":{\"title\":\"Immutable Types\"}}},\"pathContext\":{\"slug\":\"/javascript/immutable-types/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-immutable-types-e39302cb040c782729eb.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<blockquote>\\n<p>Immutable means unchangeable i.e. you can’t change.</p>\\n</blockquote>\\n<p>Javascript has lots of immutable types e.g. <code>string</code> primitive type. Try this in your console.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>s = \\\"red\\\";\\nconsole.log(s[1]); //→ \\\"e\\\"\\ns[1] = \\\"x\\\";\\nconsole.log(s) //→ \\\"red\\\"</code></pre>\\n      </div>\\n<p>the <code>s</code> didn’t change! <a>WAT</a>!</p>\\n<h2>Details</h2>\\n<p>Some string methods like <code>String.replace</code> returns a new string.</p>\\n<p>JavaScript has one complex data type, the Object data type, and it has five simple data types: Number, String, Boolean, Undefined, and Null. These simple (primitive) data types are immutable (cannot be changed), while objects are mutable (can be changed).</p>\",\"fields\":{\"slug\":\"/javascript/immutable-types/\"},\"frontmatter\":{\"title\":\"Immutable Types\"}}},\"pathContext\":{\"slug\":\"/javascript/immutable-types/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-immutable-types.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-immutable-types.json\n// module chunks = 2678559723039744000"],"sourceRoot":""}