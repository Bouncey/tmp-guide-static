{"version":3,"sources":["webpack:///path---javascript-standard-objects-array-array-prototype-filter-aa0e4d076e19650fc5fe.js","webpack:///./.cache/json/javascript-standard-objects-array-array-prototype-filter.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-array-array-prototype-filter.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,kHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,w3VAAq7VC,QAAsVC,KAAA,8DAAoEC,aAAgBC,MAAA,4BAAmCC,aAAgBH,KAAA","file":"path---javascript-standard-objects-array-array-prototype-filter-aa0e4d076e19650fc5fe.js","sourcesContent":["webpackJsonp([2928914846940109300],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-array-array-prototype-filter.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Array.prototype.filter</h2>\\n<p>The filter method takes an array as an input. It takes each element in the array and it applies a conditional statement against it. If this conditional returns true, the element gets “pushed” to the output array. </p>\\n<p>Once each element in the input array is “filtered” as such, it outputs a new array containing each element that returned true.</p>\\n<p>In this example below, there is an array that has multiple objects within it. Normally, to iterate through this array, you might use a for loop. </p>\\n<p>In this case, we want to get all the students whose grades are greater than or equal to 90.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> students <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Quincy'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">96</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Jason'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">84</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Alexis'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Sam'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">65</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Katie'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">90</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Define an array to push student objects to.</span>\\n<span class=\\\"token keyword\\\">var</span> studentsGrades <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">var</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> students<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Check if grade is greater than 90</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>students<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>grade <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">90</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Add a student to the studentsGrades array.</span>\\n    studentsGrades<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>students<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">return</span> studentsGrades<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [ { name: 'Quincy', grade: 96 }, { name: 'Alexis', grade: 100 }, { name: 'Katie', grade: 90 } ]</span>\\n</code></pre>\\n      </div>\\n<p>This for loop works, but it is pretty lengthy. It can also become tedious to write for loops over and over again for many arrays that you need to iterate through.</p>\\n<p>This is a great use case for filter!</p>\\n<p>Here is the same example using filter:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> students <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Quincy'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">96</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Jason'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">84</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Alexis'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Sam'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">65</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Katie'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">90</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> studentGrades <span class=\\\"token operator\\\">=</span> students<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>student<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//This tests if student.grade is greater than or equal to 90. It returns the \\\"student\\\" object if this conditional is met.</span>\\n  <span class=\\\"token keyword\\\">return</span> student<span class=\\\"token punctuation\\\">.</span>grade <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">90</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">return</span> studentGrades<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [ { name: 'Quincy', grade: 96 }, { name: 'Alexis', grade: 100 }, { name: 'Katie', grade: 90 } ]</span>\\n</code></pre>\\n      </div>\\n<p>The filter method is much faster to write and cleaner to read while still accomplishing the same thing. Using ES6 syntax we can even replicate the 6-line for-loop with filter:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> students <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Quincy'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">96</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Jason'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">84</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Alexis'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Sam'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">65</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Katie'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">90</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> studentGrades <span class=\\\"token operator\\\">=</span> students<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>student <span class=\\\"token operator\\\">=></span> student<span class=\\\"token punctuation\\\">.</span>grade <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">90</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">return</span> studentGrades<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [ { name: 'Quincy', grade: 96 }, { name: 'Alexis', grade: 100 }, { name: 'Katie', grade: 90 } ]</span>\\n</code></pre>\\n      </div>\\n<p>Filter is very useful and a great choice over for loops to filter arrays against conditional statements.</p>\\n<h4>More Information:</h4>\\n<p><a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter' target='_blank' rel='nofollow'>MDN</a></p>\",\"fields\":{\"slug\":\"/javascript/standard-objects/array/array-prototype-filter/\"},\"frontmatter\":{\"title\":\"Array.prototype.filter\"}}},\"pathContext\":{\"slug\":\"/javascript/standard-objects/array/array-prototype-filter/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-standard-objects-array-array-prototype-filter-aa0e4d076e19650fc5fe.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Array.prototype.filter</h2>\\n<p>The filter method takes an array as an input. It takes each element in the array and it applies a conditional statement against it. If this conditional returns true, the element gets “pushed” to the output array. </p>\\n<p>Once each element in the input array is “filtered” as such, it outputs a new array containing each element that returned true.</p>\\n<p>In this example below, there is an array that has multiple objects within it. Normally, to iterate through this array, you might use a for loop. </p>\\n<p>In this case, we want to get all the students whose grades are greater than or equal to 90.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> students <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Quincy'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">96</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Jason'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">84</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Alexis'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Sam'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">65</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Katie'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">90</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Define an array to push student objects to.</span>\\n<span class=\\\"token keyword\\\">var</span> studentsGrades <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">var</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> students<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Check if grade is greater than 90</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>students<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>grade <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">90</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Add a student to the studentsGrades array.</span>\\n    studentsGrades<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>students<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">return</span> studentsGrades<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [ { name: 'Quincy', grade: 96 }, { name: 'Alexis', grade: 100 }, { name: 'Katie', grade: 90 } ]</span>\\n</code></pre>\\n      </div>\\n<p>This for loop works, but it is pretty lengthy. It can also become tedious to write for loops over and over again for many arrays that you need to iterate through.</p>\\n<p>This is a great use case for filter!</p>\\n<p>Here is the same example using filter:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> students <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Quincy'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">96</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Jason'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">84</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Alexis'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Sam'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">65</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Katie'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">90</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> studentGrades <span class=\\\"token operator\\\">=</span> students<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>student<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//This tests if student.grade is greater than or equal to 90. It returns the \\\"student\\\" object if this conditional is met.</span>\\n  <span class=\\\"token keyword\\\">return</span> student<span class=\\\"token punctuation\\\">.</span>grade <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">90</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">return</span> studentGrades<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [ { name: 'Quincy', grade: 96 }, { name: 'Alexis', grade: 100 }, { name: 'Katie', grade: 90 } ]</span>\\n</code></pre>\\n      </div>\\n<p>The filter method is much faster to write and cleaner to read while still accomplishing the same thing. Using ES6 syntax we can even replicate the 6-line for-loop with filter:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> students <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Quincy'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">96</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Jason'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">84</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Alexis'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Sam'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">65</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Katie'</span><span class=\\\"token punctuation\\\">,</span> grade<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">90</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">var</span> studentGrades <span class=\\\"token operator\\\">=</span> students<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span>student <span class=\\\"token operator\\\">=></span> student<span class=\\\"token punctuation\\\">.</span>grade <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">90</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">return</span> studentGrades<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// [ { name: 'Quincy', grade: 96 }, { name: 'Alexis', grade: 100 }, { name: 'Katie', grade: 90 } ]</span>\\n</code></pre>\\n      </div>\\n<p>Filter is very useful and a great choice over for loops to filter arrays against conditional statements.</p>\\n<h4>More Information:</h4>\\n<p><a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter' target='_blank' rel='nofollow'>MDN</a></p>\",\"fields\":{\"slug\":\"/javascript/standard-objects/array/array-prototype-filter/\"},\"frontmatter\":{\"title\":\"Array.prototype.filter\"}}},\"pathContext\":{\"slug\":\"/javascript/standard-objects/array/array-prototype-filter/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-standard-objects-array-array-prototype-filter.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-array-array-prototype-filter.json\n// module chunks = 2928914846940109300"],"sourceRoot":""}