webpackJsonp([0xd4466bfbac8ee000],{"./node_modules/json-loader/index.js!./.cache/json/python-commenting-code.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p>Comments are used to annotate, describe, or explain code that is complex or difficult to understand. Python will intentionally ignore comments when it compiles to bytecode by the interpreter. <a href=\'https://www.python.org/dev/peps/pep-0008/#comments\' target=\'_blank\' rel=\'nofollow\'><code>PEP 8</code></a> has a section dealing with comments.They also increases the readablity of code by adding easy and descriptive language for better understanding.</p>\n<p><strong>Block</strong> and <strong>inline</strong> comments start with a <code>#</code>, followed by a space before the comment:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code># This is a block comment.\nprint(\'Hello world!\') # This is an inline commment.</code></pre>\n      </div>\n<p>Python does not include a formal way to write multiline comments. Each line of a comment spanning multiple lines should start with <code>#</code> and a space:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code># This is the first line of a multiline comment.\n# This is the second line.</code></pre>\n      </div>\n<p>Another type of comment is the <strong>docstring</strong>, documented in <a href=\'https://www.python.org/dev/peps/pep-0257/\' target=\'_blank\' rel=\'nofollow\'><code>PEP 257</code></a>. Docstrings are a specific type of comment that becomes the <code>__doc__</code> attribute.</p>\n<p>For a string literal to be a docstring, it must start and end with <code>\\"\\"\\"</code> and be the first statement of the module, function, class, or method definition it is documenting:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>class SomeClass():\n    """Summary line for SomeClass.\n\n    More elaborate descriptions may require using a\n    a multiline docstring.\n    """\n\n    def method_a(self):\n        """Single line summary of method_a."""\n        pass</code></pre>\n      </div>\n<p>String literals that start and end with <code>"""</code> that are not docstrings (not the first statement), can be used for multiline strings. They will not become <code>__doc__</code> attributes. If they are not assigned to a variable, they will not generate bytecode. There is some discussion about using them as multiline comments found <a href=\'http://stackoverflow.com/questions/7696924/multiline-comments-in-python\' target=\'_blank\' rel=\'nofollow\'>here</a>.</p>',fields:{slug:"/python/commenting-code/"},frontmatter:{title:"Python Commenting Code"}}},pathContext:{slug:"/python/commenting-code/"}}}});
//# sourceMappingURL=path---python-commenting-code-7dbb725b67bd5e5f25a2.js.map