webpackJsonp([0x3fcd422e92c89c00],{"./node_modules/json-loader/index.js!./.cache/json/php-variable-basics.json":function(a,e){a.exports={data:{markdownRemark:{html:'<p>Variables allow programmers to use data throuhgout a PHP script.</p>\n<p>In PHP, variables always start with a <code>$</code> symbol followed by the name of the variable. Only letters, numbers (may not be the first character), and underscores can make up the name of a variable.</p>\n<p>For example, <code>$my_variable</code>, <code>$anotherVariable</code>, and <code>$the2ndVariable</code> are allow valid variable names.</p>\n<p>Variable names are case-sensitive. <code>$my_variable</code> is different from <code>$My_Variable</code> which is different from <code>$mY_vARiAblE</code>.</p>\n<p>Before a variable can be used, it must have a value assigned to it.</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code>    <span class="token delimiter important">&lt;?php</span>\n    <span class="token variable">$my_number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$my_number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token operator">></span><span class="token operator">></span><span class="token operator">></span> <span class="token number">1</span>\n</code></pre>\n      </div>\n<p>In the example above, the variable is <code>$my_number</code>. The value assigned to it was the number <code>1</code>. The variable was then passed as a parameter to the <code>echo</code> function, which output the value to the command line.</p>',fields:{slug:"/php/variable-basics/"},frontmatter:{title:"PHP Variable Basics"}}},pathContext:{slug:"/php/variable-basics/"}}}});
//# sourceMappingURL=path---php-variable-basics-d2130e763eb3579d64ef.js.map