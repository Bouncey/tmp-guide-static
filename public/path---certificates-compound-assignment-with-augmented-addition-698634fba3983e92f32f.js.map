{"version":3,"sources":["webpack:///path---certificates-compound-assignment-with-augmented-addition-698634fba3983e92f32f.js","webpack:///./.cache/json/certificates-compound-assignment-with-augmented-addition.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-compound-assignment-with-augmented-addition.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,oBAERC,kHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,k3BAAu2BC,QAAgDC,KAAA,8DAAoEC,aAAgBC,MAAA,iDAAwDC,aAAgBH,KAAA","file":"path---certificates-compound-assignment-with-augmented-addition-698634fba3983e92f32f.js","sourcesContent":["webpackJsonp([16476849967644800000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-compound-assignment-with-augmented-addition.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Everything to the right of the equals sign is evaluated first, so we can say <code>myVar = myVar + 5;</code> to add <code>5</code> to <code>myVar</code>. Since this is such a common pattern, there are operators which do both a mathematical operation and assignment in one step.</p>\\n<p>One such operator is the <code>+= operator</code>.</p>\\n<p><code>myVar += 5;</code> will add 5 to myVar instead of using any of the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    myVar <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">+</span> myVar<span class=\\\"token punctuation\\\">;</span>\\n    myVar <span class=\\\"token operator\\\">=</span> myvar <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/compound-assignment-with-augmented-addition/\"},\"frontmatter\":{\"title\":\"Compound Assignment With Augmented Addition\"}}},\"pathContext\":{\"slug\":\"/certificates/compound-assignment-with-augmented-addition/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-compound-assignment-with-augmented-addition-698634fba3983e92f32f.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Everything to the right of the equals sign is evaluated first, so we can say <code>myVar = myVar + 5;</code> to add <code>5</code> to <code>myVar</code>. Since this is such a common pattern, there are operators which do both a mathematical operation and assignment in one step.</p>\\n<p>One such operator is the <code>+= operator</code>.</p>\\n<p><code>myVar += 5;</code> will add 5 to myVar instead of using any of the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    myVar <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token operator\\\">+</span> myVar<span class=\\\"token punctuation\\\">;</span>\\n    myVar <span class=\\\"token operator\\\">=</span> myvar <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/compound-assignment-with-augmented-addition/\"},\"frontmatter\":{\"title\":\"Compound Assignment With Augmented Addition\"}}},\"pathContext\":{\"slug\":\"/certificates/compound-assignment-with-augmented-addition/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-compound-assignment-with-augmented-addition.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-compound-assignment-with-augmented-addition.json\n// module chunks = 16476849967644800000"],"sourceRoot":""}