{"version":3,"sources":["webpack:///path---certificates-passing-values-to-functions-with-arguments-36948babe58f8e5e7a08.js","webpack:///./.cache/json/certificates-passing-values-to-functions-with-arguments.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-passing-values-to-functions-with-arguments.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,iHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,0iCAAwtBC,QAA+WC,KAAA,6DAAmEC,aAAgBC,MAAA,gDAAuDC,aAAgBH,KAAA","file":"path---certificates-passing-values-to-functions-with-arguments-36948babe58f8e5e7a08.js","sourcesContent":["webpackJsonp([16508435470857419000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-passing-values-to-functions-with-arguments.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><code>Parameters</code> are variables that act as placeholders for the values that are to be input to a function when it is called. When a function is defined, it is typically defined along with one or more parameters. The actual values that are input (or ”<em>passed</em>”) into a function when it is called are known as <code>arguments</code>.</p>\\n<p>Here is a function with two parameters, <code>param1</code> and <code>param2</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function functionWithArgs(param1, param2) {\\n  console.log(param1, param2);\\n}</code></pre>\\n      </div>\\n<p>Then we can call functionWithArgs:</p>\\n<p><code>functionWithArgs(\\\"Hello\\\", \\\"World\\\");</code></p>\\n<p>We have passed two arguments, <code>\\\"Hello\\\"</code> and <code>\\\"World\\\"</code>. Inside the function, <code>param1</code> will equal “Hello” and <code>param2</code> will equal “World”. Note that you could call <code>functionWithArgs</code> again with different arguments and the parameters would take on the value of the new arguments.</p>\",\"fields\":{\"slug\":\"/certificates/passing-values-to-functions-with-arguments/\"},\"frontmatter\":{\"title\":\"Passing Values to Functions with Arguments\"}}},\"pathContext\":{\"slug\":\"/certificates/passing-values-to-functions-with-arguments/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-passing-values-to-functions-with-arguments-36948babe58f8e5e7a08.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><code>Parameters</code> are variables that act as placeholders for the values that are to be input to a function when it is called. When a function is defined, it is typically defined along with one or more parameters. The actual values that are input (or ”<em>passed</em>”) into a function when it is called are known as <code>arguments</code>.</p>\\n<p>Here is a function with two parameters, <code>param1</code> and <code>param2</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function functionWithArgs(param1, param2) {\\n  console.log(param1, param2);\\n}</code></pre>\\n      </div>\\n<p>Then we can call functionWithArgs:</p>\\n<p><code>functionWithArgs(\\\"Hello\\\", \\\"World\\\");</code></p>\\n<p>We have passed two arguments, <code>\\\"Hello\\\"</code> and <code>\\\"World\\\"</code>. Inside the function, <code>param1</code> will equal “Hello” and <code>param2</code> will equal “World”. Note that you could call <code>functionWithArgs</code> again with different arguments and the parameters would take on the value of the new arguments.</p>\",\"fields\":{\"slug\":\"/certificates/passing-values-to-functions-with-arguments/\"},\"frontmatter\":{\"title\":\"Passing Values to Functions with Arguments\"}}},\"pathContext\":{\"slug\":\"/certificates/passing-values-to-functions-with-arguments/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-passing-values-to-functions-with-arguments.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-passing-values-to-functions-with-arguments.json\n// module chunks = 16508435470857419000"],"sourceRoot":""}