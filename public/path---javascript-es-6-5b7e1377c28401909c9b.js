webpackJsonp([0xd661e62e0d040000],{"./node_modules/json-loader/index.js!./.cache/json/javascript-es-6.json":function(n,a){n.exports={data:{markdownRemark:{html:'<h2>ES6</h2>\n<p>The 6th edition of ECMAScript is called ES6. </p>\n<p>It is also know as ES2015. </p>\n<p>The changes add a lot of syntactic sugar that allow developers to create applications in an object oriented style. </p>\n<blockquote>\n<p>ES5 example:</p>\n</blockquote>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">var</span> User <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">function</span> <span class="token function">User</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_name <span class="token operator">=</span> name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  User<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>getName <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">\'Mr./Mrs. \'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> User<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<blockquote>\n<p>ES6 example:</p>\n</blockquote>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>_name <span class="token operator">=</span> name\n  <span class="token punctuation">}</span>\n\n  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`Mr./Mrs. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>_name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>A lot of new syntax features were introduced including:</p>\n<ul>\n<li>classes,</li>\n<li>modules,</li>\n<li>templating,</li>\n<li>for/of loops,</li>\n<li>generator expressions,</li>\n<li>arrow functions,</li>\n<li>collections,</li>\n<li>promises.</li>\n</ul>\n<p>Nowadays most of the features are available in all popular browsers. The <a href=\'https://kangax.github.io/compat-table/es6/\' target=\'_blank\' rel=\'nofollow\'>compatibility table</a> contains all information about feature availability of all modern browsers. </p>\n<p>Frequently new features arrive that are part of the successor ES7. A common way is to translate modern JavaScript (ES6, ES7 and other experimental proposals) to ES5. This makes sure that also old browsers can execute the code. There are tools like <a href=\'https://babeljs.io/\' target=\'_blank\' rel=\'nofollow\'>Babel</a> that transforms new JavaScript to ES5.</p>\n<p>Besides syntactic sugar coming from ECMAScript standards there are features that require a <a href=\'https://babeljs.io/docs/usage/polyfill\' target=\'_blank\' rel=\'nofollow\'>Polyfill</a>. Usually they are necessary because whole class/method implementations were added to the standard.</p>',fields:{slug:"/javascript/es6/"},frontmatter:{title:"ES6"}}},pathContext:{slug:"/javascript/es6/"}}}});
//# sourceMappingURL=path---javascript-es-6-5b7e1377c28401909c9b.js.map