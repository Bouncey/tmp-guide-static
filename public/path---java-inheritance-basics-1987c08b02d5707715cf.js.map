{"version":3,"sources":["webpack:///path---java-inheritance-basics-1987c08b02d5707715cf.js","webpack:///./.cache/json/java-inheritance-basics.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/java-inheritance-basics.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,iFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,oyLAAirKC,QAA41BC,KAAA,6BAAmCC,aAAgBC,MAAA,wBAA+BC,aAAgBH,KAAA","file":"path---java-inheritance-basics-1987c08b02d5707715cf.js","sourcesContent":["webpackJsonp([12591043576772581000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/java-inheritance-basics.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Inheritance Basics</h1>\\n<p>So great you have successfully created a Car class. But, wait, aren’t Tesla cars supposed to be electric variants? I want an Electric car class, but it also should have the properties of the original <code>Car</code> class.</p>\\n<p>Solution : <strong>Inheritance</strong>. Java provides a neat way to “inherit” parent properties :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Car</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token keyword\\\">private</span> String name<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">private</span> String manufacturerName<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">Car</span><span class=\\\"token punctuation\\\">(</span>String name<span class=\\\"token punctuation\\\">,</span> String man<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>name <span class=\\\"token operator\\\">=</span> name<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>manufacturerName <span class=\\\"token operator\\\">=</span> man<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Getter method</span>\\n    <span class=\\\"token keyword\\\">public</span> String <span class=\\\"token function\\\">getName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> name<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Getter method</span>\\n    <span class=\\\"token keyword\\\">public</span> String <span class=\\\"token function\\\">getManufacturerName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> manufacturerName<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ElectricCar</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Car</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">ElectricCar</span><span class=\\\"token punctuation\\\">(</span>String name<span class=\\\"token punctuation\\\">,</span> String man<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">,</span> man<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">charge</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n     System<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Charging ...\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nElectricCar modelS <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ElectricCar</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Model S\\\"</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">\\\"Tesla\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// prints Tesla</span>\\nSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span>modelS<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getManufacturerName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// prints Charging ...</span>\\nmodelS<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">charge</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" title=\\\":rocket:\\\" alt=\\\":rocket:\\\" class=\\\"forum-image\\\"> <a href='https://repl.it/CJZY/0' target='_blank' rel='nofollow'>Run Code</a></p>\\n<p>See here that the class <code>ElectricCar</code> inherits or <code>extends</code> the public methods from <code>Car</code> class, as well as has its own methods and properties. Cool way to pass on information!</p>\\n<p>Also notice the usage of <a href='https://docs.oracle.com/javase/tutorial/java/IandI/super.html' target='_blank' rel='nofollow'>super</a> keyword here. Since our <code>Car</code> class had a constructor, so we have to initialize that constructor from the child class as well. We do that using the <code>super</code> keyword. Read more about <a>Inheritance here</a>.</p>\",\"fields\":{\"slug\":\"/java/inheritance-basics/\"},\"frontmatter\":{\"title\":\"Inheritance Basics\"}}},\"pathContext\":{\"slug\":\"/java/inheritance-basics/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---java-inheritance-basics-1987c08b02d5707715cf.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Inheritance Basics</h1>\\n<p>So great you have successfully created a Car class. But, wait, aren’t Tesla cars supposed to be electric variants? I want an Electric car class, but it also should have the properties of the original <code>Car</code> class.</p>\\n<p>Solution : <strong>Inheritance</strong>. Java provides a neat way to “inherit” parent properties :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Car</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token keyword\\\">private</span> String name<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">private</span> String manufacturerName<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">Car</span><span class=\\\"token punctuation\\\">(</span>String name<span class=\\\"token punctuation\\\">,</span> String man<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>name <span class=\\\"token operator\\\">=</span> name<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>manufacturerName <span class=\\\"token operator\\\">=</span> man<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Getter method</span>\\n    <span class=\\\"token keyword\\\">public</span> String <span class=\\\"token function\\\">getName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> name<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Getter method</span>\\n    <span class=\\\"token keyword\\\">public</span> String <span class=\\\"token function\\\">getManufacturerName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> manufacturerName<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ElectricCar</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Car</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token function\\\">ElectricCar</span><span class=\\\"token punctuation\\\">(</span>String name<span class=\\\"token punctuation\\\">,</span> String man<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">,</span> man<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">charge</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n     System<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Charging ...\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nElectricCar modelS <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ElectricCar</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Model S\\\"</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token string\\\">\\\"Tesla\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// prints Tesla</span>\\nSystem<span class=\\\"token punctuation\\\">.</span>out<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">println</span><span class=\\\"token punctuation\\\">(</span>modelS<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getManufacturerName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// prints Charging ...</span>\\nmodelS<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">charge</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" title=\\\":rocket:\\\" alt=\\\":rocket:\\\" class=\\\"forum-image\\\"> <a href='https://repl.it/CJZY/0' target='_blank' rel='nofollow'>Run Code</a></p>\\n<p>See here that the class <code>ElectricCar</code> inherits or <code>extends</code> the public methods from <code>Car</code> class, as well as has its own methods and properties. Cool way to pass on information!</p>\\n<p>Also notice the usage of <a href='https://docs.oracle.com/javase/tutorial/java/IandI/super.html' target='_blank' rel='nofollow'>super</a> keyword here. Since our <code>Car</code> class had a constructor, so we have to initialize that constructor from the child class as well. We do that using the <code>super</code> keyword. Read more about <a>Inheritance here</a>.</p>\",\"fields\":{\"slug\":\"/java/inheritance-basics/\"},\"frontmatter\":{\"title\":\"Inheritance Basics\"}}},\"pathContext\":{\"slug\":\"/java/inheritance-basics/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/java-inheritance-basics.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/java-inheritance-basics.json\n// module chunks = 12591043576772581000"],"sourceRoot":""}