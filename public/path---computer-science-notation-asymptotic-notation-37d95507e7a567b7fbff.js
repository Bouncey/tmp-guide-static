webpackJsonp([0x31225d9ddc546400],{"./node_modules/json-loader/index.js!./.cache/json/computer-science-notation-asymptotic-notation.json":function(e,t){e.exports={data:{markdownRemark:{html:"<h2>Asymptotic Notation</h2>\n<p>How do we measure the performance value of algorithms?</p>\n<p>Consider how time is one of our most valuable resources. In computing, we can measure performance with the amount of time a process takes to complete. If the data processed by two algorithms is the same, we can decide on the best implementation to solve a problem.</p>\n<p>We do this by defining the mathematical limits of an algorithm. These are the big-O, big-omega, and big-theta, or the asymptotic notations of an algorithm. On a graph the big-O would be the longest an algorithm could take for any given data set, or the “upper bound”. Big-omega is like the opposite of big-O, the “lower bound”. That’s where the algorithm reaches its top-speed for any data set. Big theta is either the exact performance value of the algorithm, or a useful range between narrow upper and lower bounds.</p>\n<p>Some examples:</p>\n<ul>\n<li>\n<p>“The delivery will be there within your lifetime.” (big-O, upper-bound)</p>\n</li>\n<li>\n<p>“I can pay you at least one dollar.” (big-omega, lower bound)</p>\n</li>\n<li>\n<p>“The high today will be 25ºC and the low will be 19ºC.” (big-theta, narrow)</p>\n</li>\n<li>\n<p>“It’s a kilometer walk to the beach.” (big-theta, exact)</p>\n<h4>More Information:</h4>\n<!-- Please add any articles you think might be helpful to read before writing the article -->\n</li>\n<li>\n<p><a href='https://learnxinyminutes.com/docs/asymptotic-notation/' target='_blank' rel='nofollow'>Asymptotic Notation</a></p>\n</li>\n</ul>",fields:{slug:"/computer-science/notation/asymptotic-notation/"},frontmatter:{title:"Asymptotic Notation"}}},pathContext:{slug:"/computer-science/notation/asymptotic-notation/"}}}});
//# sourceMappingURL=path---computer-science-notation-asymptotic-notation-37d95507e7a567b7fbff.js.map