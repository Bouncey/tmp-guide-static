webpackJsonp([0x5f7682e918e32800],{"./node_modules/json-loader/index.js!./.cache/json/miscellaneous-chaijs-cheatsheet.json":function(e,n){e.exports={data:{markdownRemark:{html:"<h2>Assert</h2>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>assert(val)\nassert.fail(actual, expected)\nassert.ok(val) // is truthy\nassert.equal(actual, expected) // 'compare with =='\nassert.strictEqual\nassert.deepEqual\n\nassert.isTrue\nassert.isFalse\n\nassert.isNull\nassert.isNotNull\nassert.isUndefined\nassert.isDefined\nassert.isFunction\nassert.isObject\nassert.isArray\nassert.isString\nassert.isNumber\nassert.isBoolean\n\nassert.typeOf(/tea/, 'regexp') // Object.prototype.toString()\nassert.instanceOf(chai, Tea)\nassert.include(<a href='https://github.com/rstacruz/cheatsheets' target='_blank' rel='nofollow'> a,b,c ], a)\nassert.match(val, /regexp/)\nassert.property(obj, 'tea') // 'tea' in object\nassert.deepProperty(obj, 'tea.green')\nassert.propertyVal(person, 'name', 'John')\nassert.deepPropertyVal(post, 'author.name', 'John')\n\nassert.lengthOf(object, 3)\nassert.throws(function() { ... })\nassert.throws(function() { ... }, /reference error/)\nassert.doesNotThrow\n\nassert.operator(1, '<', 2)\nassert.closeTo(actual, expected)</code></pre>\n      </div>\n<h2>Should: chains</h2>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>.to .be .been .is .that .and .have .with .at .of .same</code></pre>\n      </div>\n<h2>Should not</h2>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>expect(object).not.equal('x')</code></pre>\n      </div>\n<h2>Expectations</h2>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>expect(object)\n  .equal(expected)\n  .eql\n  .deep.equal(expected) // same as .eql\n  .be.a('string')\n  .include(val)\n\n  .be.ok(val)\n  .be.true\n  .be.false\n\n  .be.null\n  .be.undefined\n  .be.empty\n  .be.arguments\n  .be.function\n  .be.instanceOf\n\n  .gt(5)  # or .above .greaterThan\n  .gte    # or .at.least\n  .lt(5)  # or .below\n\n  .respondTo('bar')\n  .satisfy (n) -> n > 0\n\n  .have.members([2, 3, 4])\n  .have.keys(['foo'])\n  .have.key('foo')\n\n  .exist\n\nexpect(-> ...)\n  .throw /not a function/</code></pre>\n      </div>\n<h2>Chai-jQuery</h2>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>    global.jQuery = ...;\n    chai.use(require('chai-jquery'));\n\n    expect($body)\n\n      .have.attr('foo')\n      .have.prop('disabled')\n      .have.css('background')\n      .have.css('background-color', '#ffffff')\n      .have.data('foo')\n\n      .have.class('active')\n      .have.id('id')\n\n      .have.html('<em>hi</em>')\n      .have.text('hello')\n      .have.value('2013')\n\n      .be.visible\n      .be.hidden\n\n      .be.checked\n      .be.selected\n\n      .be.enabled\n      .be.disabled\n\n      .be.empty\n      .to.exist\n      .to.contain('text')\n      .to.have('.selector')</code></pre>\n      </div>\n<blockquote>\n<p>[ricostacruz CheatSheets</a></p>\n<p><a href='https://gitter.im/bothelp/testing' target='_blank' rel='nofollow'>Discuss on gitter</a></p>\n</blockquote>",fields:{slug:"/miscellaneous/chaijs-cheatsheet/"},frontmatter:{title:"Chaijs Cheatsheet"}}},pathContext:{slug:"/miscellaneous/chaijs-cheatsheet/"}}}});
//# sourceMappingURL=path---miscellaneous-chaijs-cheatsheet-fdf4f513db6077d3d1d7.js.map