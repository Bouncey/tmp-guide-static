webpackJsonp([0x181ea53bc807bb00],{"./node_modules/json-loader/index.js!./.cache/json/certificates-counting-cards.json":function(n,e){n.exports={data:{markdownRemark:{html:'<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3" title=":triangular_flag_on_post:" alt=":triangular_flag_on_post:" class="forum-image"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3" title=":busts_in_silhouette:" alt=":busts_in_silhouette:" class="forum-image"> and write your own code <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3" title=":pencil:" alt=":pencil:" class="forum-image"></p>\n<h3><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3" title=":checkered_flag:" alt=":checkered_flag:" class="forum-image"> Problem Explanation:</h3>\n<p>In the casino game <strong>Blackjack</strong>, a player can gain an advantage over the house by keeping track of the relative number of high and low cards remaining in the deck. This is called card counting.</p>\n<p>Having more high cards remaining in the deck favors the player. Each card is assigned a value according to the table below. When the count is positive, the player should bet high. When the count is zero or negative, the player should bet low.</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th align="center">Cards</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+1</td>\n<td align="center">2, 3, 4, 5, 6</td>\n</tr>\n<tr>\n<td>0</td>\n<td align="center">7, 8, 9</td>\n</tr>\n<tr>\n<td>-1</td>\n<td align="center">10, ‘J’, ‘Q’, ‘K’,‘A’</td>\n</tr>\n</tbody>\n</table>\n<p>You will write a card counting function. It will receive a <strong>card</strong> parameter and increment or decrement the global <strong>count</strong> variable according to the card’s value (see table). The function will then return a string with the current count and the string <code>Bet</code> if the count is positive, or <code>Hold</code> if the count is zero or negative. The current count and the player’s decision (<code>Bet</code> or <code>Hold</code>) should be separated by a single space.</p>\n<ul>\n<li>Change the code below <code>// Only change code below this line</code> and up to <code>// Only change code above this line</code></li>\n<li>Ensure that you are editing the inside of the <code>cc</code> function.</li>\n<li>Use what you’ve learned to check the value of each <strong>card</strong> parameter passed into the function.</li>\n<li>Keep a running count of that number.</li>\n<li>If the final count is 1 or greater, return <strong># Hold</strong>.</li>\n<li>If the final count is 0 or less, return <strong># Bet</strong>.</li>\n</ul>\n<p><strong>Example Output:</strong></p>\n<ul>\n<li>-3 Hold</li>\n<li>5 Bet</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href=\'https://en.wikipedia.org/wiki/Card_counting\' target=\'_blank\' rel=\'nofollow\'>Card counting</a></li>\n<li><a href=\'http://www.freecodecamp.com/challenges/selecting-from-many-options-with-switch-statements\' target=\'_blank\' rel=\'nofollow\'>Challenge: Selecting from many options with Switch Statements</a></li>\n<li><a href=\'http://www.freecodecamp.com/challenges/chaining-if-else-statements\' target=\'_blank\' rel=\'nofollow\'>Challenge: Chaining If Else Statements</a></li>\n<li><a href=\'http://www.freecodecamp.com/challenges/increment-a-number-with-javascript\' target=\'_blank\' rel=\'nofollow\'>Challenge: Increment a Number with Javascript</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" title=":speech_balloon:" alt=":speech_balloon:" class="forum-image"> Hint: 1</h2>\n<p>Use a <code>switch</code> (or <code>else if</code>) statement to count the value of each card.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" title=":speech_balloon:" alt=":speech_balloon:" class="forum-image"> Hint: 2</h2>\n<p>Add/subtract the value of each card to variable <strong>count</strong>. If the card is worth 0, don’t do anything.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" title=":speech_balloon:" alt=":speech_balloon:" class="forum-image"> Hint: 3</h2>\n<p>After you’ve counted the cards, use an <code>if</code> statement to check the value of <strong>count</strong>. Also, make sure your <code>return</code> has a space between the number and the string.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2>Spoiler Alert!</h2>\n<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif" alt="warning sign"></p>\n<p><strong>Solution ahead!</strong></p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3" title=":beginner:" alt=":beginner:" class="forum-image"> Basic Code Solution:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">cc</span><span class="token punctuation">(</span>card<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment" spellcheck="true">// Only change code below this line</span>\n      <span class="token keyword">switch</span><span class="token punctuation">(</span>card<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>\n        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>\n        <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>\n        <span class="token keyword">case</span> <span class="token number">6</span><span class="token punctuation">:</span>\n          count<span class="token operator">++</span><span class="token punctuation">;</span>\n          <span class="token keyword">break</span><span class="token punctuation">;</span>\n        <span class="token keyword">case</span> <span class="token number">10</span><span class="token punctuation">:</span>\n        <span class="token keyword">case</span> <span class="token string">"J"</span><span class="token punctuation">:</span>\n        <span class="token keyword">case</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>\n        <span class="token keyword">case</span> <span class="token string">"K"</span><span class="token punctuation">:</span>\n        <span class="token keyword">case</span> <span class="token string">"A"</span><span class="token punctuation">:</span>\n          count<span class="token operator">--</span><span class="token punctuation">;</span>\n          <span class="token keyword">break</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">return</span> count <span class="token operator">+</span> <span class="token string">" Bet"</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> count <span class="token operator">+</span> <span class="token string">" Hold"</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment" spellcheck="true">// Only change code above this line</span>\n    <span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Check the value of each card via a <code>switch</code> statement.</li>\n<li>\n<p>The variable <strong>count</strong>:</p>\n<ul>\n<li>Increases by 1 if the card is a 2, 3, 4, 5, or 6.</li>\n<li>Since 7, 8, and 9 aren’t worth anything, we ignore those cards in our <code>switch</code> statement.</li>\n<li>Decreases by 1 if the card is a 10, ‘J’, ‘Q’, ‘K’, or ‘A’.</li>\n</ul>\n</li>\n<li>Check the value of <strong>count</strong> and return the appropriate response.</li>\n</ul>\n<p><strong>Example Run</strong></p>\n<ul>\n<li><code>cc(2);</code> runs.</li>\n<li>The <code>switch</code> statement hits <code>case 2</code>, jumps down and adds 1 to the variable <code>count</code>.</li>\n<li>The <code>switch</code> statement then hits the <code>break</code> and <code>cc(3);</code> runs.</li>\n<li>This cycle continues until the final call is made, <code>cc(\'A\');</code>.</li>\n<li>After the <code>switch</code> statement, the <code>if</code> statement checks <code>count</code>, which is now 0.</li>\n<li>This then drops down to the <code>else</code> statement, which will return <strong>0 Hold</strong>.</li>\n</ul>\n<p><strong><em>Note</em></strong>: As mentioned earlier, the <code>switch</code> statement could have also been an <code>else if</code> statement.</p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3" title=":clipboard:" alt=":clipboard:" class="forum-image"> NOTES FOR CONTRIBUTIONS:</h2>\n<ul>\n<li><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" title=":warning:" alt=":warning:" class="forum-image"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\n<li>Add an explanation of your solution.</li>\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3" title=":traffic_light:" alt=":traffic_light:" class="forum-image"></li>\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" title=":warning:" alt=":warning:" class="forum-image"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\n</ul>\n<blockquote>\n<p>See <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3" title=":point_right:" alt=":point_right:" class="forum-image"> <a><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\n</blockquote>',fields:{slug:"/certificates/counting-cards/"},frontmatter:{title:"Counting Cards"}}},pathContext:{slug:"/certificates/counting-cards/"}}}});
//# sourceMappingURL=path---certificates-counting-cards-b6d44e416f613d870ab2.js.map