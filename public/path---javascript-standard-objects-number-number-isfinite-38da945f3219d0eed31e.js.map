{"version":3,"sources":["webpack:///path---javascript-standard-objects-number-number-isfinite-38da945f3219d0eed31e.js","webpack:///./.cache/json/javascript-standard-objects-number-number-isfinite.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-number-number-isfinite.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,4GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,yiEAAk7CC,QAAwoBC,KAAA,wDAA8DC,aAAgBC,MAAA,qBAA4BC,aAAgBH,KAAA","file":"path---javascript-standard-objects-number-number-isfinite-38da945f3219d0eed31e.js","sourcesContent":["webpackJsonp([2718932610749495300],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-number-number-isfinite.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Number isFinite</h1>\\n<h2>Description</h2>\\n<p>The <code>Number.isFinite()</code> method checks if the value passed into it is a finite number. This method was introduced in ES6</p>\\n<h2>Syntax</h2>\\n<p><code>Number.isFinite(val)</code></p>\\n<h3>Parameters</h3>\\n<p><strong>val</strong> - value to check for finiteness</p>\\n<h2>Return value</h2>\\n<p>A <a href=\\\"https://guide.freecodecamp.org/javascript/booleans\\\">Boolean</a> indicating whether the value is a finite number or not.</p>\\n<h2>Description</h2>\\n<p><code>Number.isFinite</code> is different from the global <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite\\\">isFinite()</a> method, it doesn’t convert the tested value into a number. This means the value needs to be a number and finite to return true.</p>\\n<h2>Examples</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Number.isFinite(Infinity)     // false\\nNumber.isFinite(-Infinity)    // false\\n\\nNumber.isFinite(1234)         // true\\nNumber.isFinite(-1.11)        // true\\nNumber.isFinite(0)            // true\\nNumber.isFinite(3g55)         // true\\n\\nNumber.isFinite('1234')       // false\\nNumber.isFinite('Hi')         // false\\nNumber.isFinite('2005/12/12') // false\\n\\nNumber.isFinite('0');         // false, would've been true with\\n                              // global isFinite('0')\\n                         \\nNumber.isFinite(null);        // false, would've been true with\\n                              // global isFinite(null)</code></pre>\\n      </div>\\n<!-- The article goes here, in GitHub-flavored Markdown. Feel free to add YouTube videos, images, and CodePen/JSBin embeds  -->\\n<h4>More Information:</h4>\\n<!-- Please add any articles you think might be helpful to read before writing the article -->\\n<p><a href=\\\"https://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite\\\">ECMA 2015 Docs</a>\\n<br>\\n<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\\\">Number.isFinite() MDN Web Docs</a></p>\",\"fields\":{\"slug\":\"/javascript/standard-objects/number/number-isfinite/\"},\"frontmatter\":{\"title\":\"Number isFinite\"}}},\"pathContext\":{\"slug\":\"/javascript/standard-objects/number/number-isfinite/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-standard-objects-number-number-isfinite-38da945f3219d0eed31e.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Number isFinite</h1>\\n<h2>Description</h2>\\n<p>The <code>Number.isFinite()</code> method checks if the value passed into it is a finite number. This method was introduced in ES6</p>\\n<h2>Syntax</h2>\\n<p><code>Number.isFinite(val)</code></p>\\n<h3>Parameters</h3>\\n<p><strong>val</strong> - value to check for finiteness</p>\\n<h2>Return value</h2>\\n<p>A <a href=\\\"https://guide.freecodecamp.org/javascript/booleans\\\">Boolean</a> indicating whether the value is a finite number or not.</p>\\n<h2>Description</h2>\\n<p><code>Number.isFinite</code> is different from the global <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite\\\">isFinite()</a> method, it doesn’t convert the tested value into a number. This means the value needs to be a number and finite to return true.</p>\\n<h2>Examples</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>Number.isFinite(Infinity)     // false\\nNumber.isFinite(-Infinity)    // false\\n\\nNumber.isFinite(1234)         // true\\nNumber.isFinite(-1.11)        // true\\nNumber.isFinite(0)            // true\\nNumber.isFinite(3g55)         // true\\n\\nNumber.isFinite('1234')       // false\\nNumber.isFinite('Hi')         // false\\nNumber.isFinite('2005/12/12') // false\\n\\nNumber.isFinite('0');         // false, would've been true with\\n                              // global isFinite('0')\\n                         \\nNumber.isFinite(null);        // false, would've been true with\\n                              // global isFinite(null)</code></pre>\\n      </div>\\n<!-- The article goes here, in GitHub-flavored Markdown. Feel free to add YouTube videos, images, and CodePen/JSBin embeds  -->\\n<h4>More Information:</h4>\\n<!-- Please add any articles you think might be helpful to read before writing the article -->\\n<p><a href=\\\"https://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite\\\">ECMA 2015 Docs</a>\\n<br>\\n<a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\\\">Number.isFinite() MDN Web Docs</a></p>\",\"fields\":{\"slug\":\"/javascript/standard-objects/number/number-isfinite/\"},\"frontmatter\":{\"title\":\"Number isFinite\"}}},\"pathContext\":{\"slug\":\"/javascript/standard-objects/number/number-isfinite/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-standard-objects-number-number-isfinite.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-standard-objects-number-number-isfinite.json\n// module chunks = 2718932610749495300"],"sourceRoot":""}