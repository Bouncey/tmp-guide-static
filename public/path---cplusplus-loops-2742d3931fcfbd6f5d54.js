webpackJsonp([0xed239843b8fad000],{"./node_modules/json-loader/index.js!./.cache/json/cplusplus-loops.json":function(e,n){e.exports={data:{markdownRemark:{html:'<h1>Loops</h1>\n<h2>Introduction</h2>\n<p>Now lets discuss something known as loop. Suppose you want to print the even numbers from 1 to 1000 on the screen. One way\nto do this is to write the following lines</p>\n<div class="gatsby-highlight">\n      <pre class="language-c++"><code>cout << 0 << endl;\ncout << 2 << endl;\ncout << 4 << endl;\n....\n....\n....\ncout << 1000 << endl;</code></pre>\n      </div>\n<p>But the problem with this approach is that you have to write the same line again and again. And if suppose you have to print\nprime numbers from 1 to 1000 then this will be more hectic.\nTherefore, in order to solve such problems loops are introduced.</p>\n<p>There are different types of loop functions:</p>\n<h3>While and do while loops</h3>\n<p>While and do while loops allow you to make the loop until a condition finishes.\nThe difference between While and Do while is that Do while always executes once.\nHere you can see an example:</p>\n<div class="gatsby-highlight">\n      <pre class="language-c++"><code>while (condition){\n    // Code that will execute while condition is true\n}\ndo { \n    // Will execute once and until the condition is false\n} while (condition);</code></pre>\n      </div>\n<h3>For loops</h3>\n<p>For loops are usually used when you know how many times the code will execute.\nThe flow can be seen in this <a href="https://www.tutorialspoint.com/cplusplus/images/cpp_for_loop.jpg">graph</a>.</p>\n<p>They are declared this way:</p>\n<div class="gatsby-highlight">\n      <pre class="language-c++"><code>for ( initialize a variable; check a condition; increment the initialized variable ) {\n   //Code to execute\n}</code></pre>\n      </div>\n<p>Lets write a program which will print numbers from 0 to 1000 including 1000 on the screen using a for loop.</p>\n<div class="gatsby-highlight">\n      <pre class="language-c++"><code>for (int i = 0;i<=1000;i++)\n{\n  cout << i << endl;\n}</code></pre>\n      </div>\n<p>When you execute this code in a c++ program numbers from 1 to 1000 will be printed.\nNow lets discuss how the for loop works.</p>\n<ul>\n<li>You start a for loop by typing the keyword ‘for’. It means you are starting a for loop\n<code>for</code></li>\n<li>Next you open and close a round bracket. In this brackets you write some conditions which will be discussed later\n<code>for()</code></li>\n<li>Inside the brackets first you write the initial condition i.e the value from where the loop will start. Like in the\nabove program we write int i = 0\n<code>for(int i = 0)</code></li>\n<li>Then you write the semicolon and then condition until when the loop will be executed. In the above code you define\ni &#x3C; 1000. It means until value of i is less then 1000 execuete the loop.\n<code>for(int i=0;i&#x3C;=1000)</code></li>\n<li>Then you define the incremented value that is how much i has to be incremented in each iteration. In the above code\nwe write i++. It means value of i will be incremented by 1 every time.\n<code>for(int i=0;i&#x3C;=1000;i++)</code></li>\n<li>\n<p>If there is only one statement inside the loop then the curly bracket is optional but its better to write loop code\nwithin brackets so that you don’t get confused.</p>\n<div class="gatsby-highlight">\n      <pre class="language-c++"><code>for(int i=0;i<=1000;i++)\n\t{\n    }</code></pre>\n      </div>\n</li>\n<li>Then inside the loop you write what do you want to do. In the above program we output the value of i.</li>\n</ul>\n<p> So, in this way the for loop works</p>\n<p> If you want to print even numbers from 1 to 1000 then your program will look like this</p>\n<div class="gatsby-highlight">\n      <pre class="language-c++"><code>for (int i = 0;i<=1000;i=i+2)\n{\n  cout << i << endl;\n}</code></pre>\n      </div>\n<ul>\n<li>\n<p>The difference in first program and second is the increment part. Rest of code is same. This program will print 0 and\nthen add 2 to it and print 2 on console and so on upto value of i becomes equal to 1000.</p>\n<p>Our final program to print even numbers from 0 to 1000 will look like this.</p>\n</li>\n</ul>\n<div class="gatsby-highlight">\n      <pre class="language-c++"><code>#include<iostream>\nusing namespace std;\nint main()\n{\n\tfor (int i = 0;i<=1000;i=i+2)\n\t{\n\t  cout << i << endl;\n\t}\n\treturn 0;\n}</code></pre>\n      </div>',fields:{slug:"/cplusplus/Loops/"},frontmatter:{title:"Loops"}}},pathContext:{slug:"/cplusplus/Loops/"}}}});
//# sourceMappingURL=path---cplusplus-loops-2742d3931fcfbd6f5d54.js.map