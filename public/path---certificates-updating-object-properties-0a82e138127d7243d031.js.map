{"version":3,"sources":["webpack:///path---certificates-updating-object-properties-0a82e138127d7243d031.js","webpack:///./.cache/json/certificates-updating-object-properties.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-updating-object-properties.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,iGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+yBAAmsBC,QAAmJC,KAAA,6CAAmDC,aAAgBC,MAAA,gCAAuCC,aAAgBH,KAAA","file":"path---certificates-updating-object-properties-0a82e138127d7243d031.js","sourcesContent":["webpackJsonp([2042501665529994000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-updating-object-properties.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>After you’ve created a JavaScript object, you can update its properties at any time just like you would update any other variable. You can use either dot or bracket notation to update.</p>\\n<p>For example, let’s look at <code>ourDog</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var ourDog = {\\n  \\\"name\\\": \\\"Camper\\\",\\n  \\\"legs\\\": 4,\\n  \\\"tails\\\": 1,\\n  \\\"friends\\\": [\\\"everything!\\\"]\\n};</code></pre>\\n      </div>\\n<p>Since he’s a particularly happy dog, let’s change his name to “Happy Camper”. Here’s how we update his object’s name property:</p>\\n<p><code>ourDog.name = \\\"Happy Camper\\\";</code> or</p>\\n<p><code>ourDog[\\\"name\\\"] = \\\"Happy Camper\\\";</code></p>\\n<p>Now when we evaluate <code>ourDog.name</code>, instead of getting “Camper”, we’ll get his new name, “Happy Camper”.</p>\",\"fields\":{\"slug\":\"/certificates/updating-object-properties/\"},\"frontmatter\":{\"title\":\"Updating Object Properties\"}}},\"pathContext\":{\"slug\":\"/certificates/updating-object-properties/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-updating-object-properties-0a82e138127d7243d031.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>After you’ve created a JavaScript object, you can update its properties at any time just like you would update any other variable. You can use either dot or bracket notation to update.</p>\\n<p>For example, let’s look at <code>ourDog</code>:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var ourDog = {\\n  \\\"name\\\": \\\"Camper\\\",\\n  \\\"legs\\\": 4,\\n  \\\"tails\\\": 1,\\n  \\\"friends\\\": [\\\"everything!\\\"]\\n};</code></pre>\\n      </div>\\n<p>Since he’s a particularly happy dog, let’s change his name to “Happy Camper”. Here’s how we update his object’s name property:</p>\\n<p><code>ourDog.name = \\\"Happy Camper\\\";</code> or</p>\\n<p><code>ourDog[\\\"name\\\"] = \\\"Happy Camper\\\";</code></p>\\n<p>Now when we evaluate <code>ourDog.name</code>, instead of getting “Camper”, we’ll get his new name, “Happy Camper”.</p>\",\"fields\":{\"slug\":\"/certificates/updating-object-properties/\"},\"frontmatter\":{\"title\":\"Updating Object Properties\"}}},\"pathContext\":{\"slug\":\"/certificates/updating-object-properties/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-updating-object-properties.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-updating-object-properties.json\n// module chunks = 2042501665529994000"],"sourceRoot":""}