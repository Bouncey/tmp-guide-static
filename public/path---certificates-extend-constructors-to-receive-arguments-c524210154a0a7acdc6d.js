webpackJsonp([98901842642783e5],{"./node_modules/json-loader/index.js!./.cache/json/certificates-extend-constructors-to-receive-arguments.json":function(e,n){e.exports={data:{markdownRemark:{html:'<p>When you have a constructor but donâ€™t want to keep creating the same object, all you have to do is add parameters to the constructor the following way:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>var Car = function(wheels, seats, engines) {\n\n  this.wheels = wheels;\n\n  this.seats = seats;\n\n  this.engines = engines;\n\n};</code></pre>\n      </div>\n<p>Now you can pass in arguments when you call the constructor. <code>var myCar = new Car(6, 3, 1);</code></p>\n<p>This will result in:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>{\n\n  wheels: 6,\n\n  seats: 3,\n\n  engines: 1\n\n}</code></pre>\n      </div>',fields:{slug:"/certificates/extend-constructors-to-receive-arguments/"},frontmatter:{title:"Extend Constructors to Receive Arguments"}}},pathContext:{slug:"/certificates/extend-constructors-to-receive-arguments/"}}}});
//# sourceMappingURL=path---certificates-extend-constructors-to-receive-arguments-c524210154a0a7acdc6d.js.map