{"version":3,"sources":["webpack:///path---miscellaneous-guide-to-build-a-sliding-image-gallery-a61c4b0ce1f25466dca0.js","webpack:///./.cache/json/miscellaneous-guide-to-build-a-sliding-image-gallery.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/miscellaneous-guide-to-build-a-sliding-image-gallery.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,8GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,u+QAAq3QC,QAAmPC,KAAA,0DAAgEC,aAAgBC,MAAA,4CAAmDC,aAAgBH,KAAA","file":"path---miscellaneous-guide-to-build-a-sliding-image-gallery-a61c4b0ce1f25466dca0.js","sourcesContent":["webpackJsonp([7319283069395509000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/miscellaneous-guide-to-build-a-sliding-image-gallery.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>This tutorial will walk you through building an image slider using the <a href='https://jquery.com/' target='_blank' rel='nofollow'>jQuery</a> library.</p>\\n<p><a href=\\\"https://codepen.io/atjonathan/pen/BKMxxq\\\"><img src=\\\"//discourse-user-assets.s3.amazonaws.com/original/2X/0/08d83a22c28da836a06853b1f1ea669b398326b9.gif\\\" alt=\\\"GIF showing Slider in action\\\"></a></p>\\n<p>This tutorial will have four parts:  </p>\\n<ul>\\n<li><a href=\\\"#html\\\">HTML</a>  </li>\\n<li><a href=\\\"#scss\\\">SCSS</a>  </li>\\n<li><a href=\\\"#js\\\">JS</a>  </li>\\n<li><a href=\\\"#references\\\">References</a></li>\\n</ul>\\n<h2>HTML</h2>\\n<p>We will be using <a href='http://getbootstrap.com/' target='_blank' rel='nofollow'>Bootstrap</a> for this tutorial to keep things looking good, without spending a lot of time.</p>\\n<p>Our structure will be as follows:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><div class=\\\"container\\\">\\n\\n  <!-- The wrapper for our slider -->\\n  <div class=\\\"slider\\\">\\n    <ul class=\\\"slides\\\"><!-- Each image will be inside this unordered list --></ul>\\n  </div>\\n\\n  <div class=\\\"buttons\\\"><!-- Pause and play buttons will go in here --></div>\\n\\n</div></code></pre>\\n      </div>\\n<p>Inside our <code>ul</code> with the class of <code>slides</code> we will have the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><li class=\\\"slide\\\"><img src=\\\"#\\\" /></li>\\n<li class=\\\"slide\\\"><img src=\\\"#\\\" /></li>\\n<li class=\\\"slide\\\"><img src=\\\"#\\\" /></li>\\n<li class=\\\"slide\\\"><img src=\\\"#\\\" /></li>\\n<li class=\\\"slide\\\"><img src=\\\"#\\\" /></li></code></pre>\\n      </div>\\n<p>Inside our <code>.buttons</code> class you should have the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><button type=\\\"button\\\" class=\\\"btn btn-default pause\\\">\\n\\t<span class=\\\"glyphicon glyphicon-pause\\\"></span>\\n</button>\\n<button type=\\\"button\\\" class=\\\"btn btn-default play\\\">\\n\\t<span class=\\\"glyphicon glyphicon-play\\\"></span>\\n</button></code></pre>\\n      </div>\\n<p>Here is an example of what your <code>html</code> should look like:</p>\\n<blockquote>\\n<p>Note: You should replace the image <code>src</code> attribute with your own content.</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><div class=\\\"container\\\">\\n\\n  <div class=\\\"slider\\\">\\n    <ul class=\\\"slides\\\">\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=120\\\" /></li>\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=70\\\" /></li>\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=50\\\" /></li>\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=170\\\" /></li>\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=190\\\" /></li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"buttons\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default pause\\\">\\n      <span class=\\\"glyphicon glyphicon-pause\\\"></span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default play\\\">\\n      <span class=\\\"glyphicon glyphicon-play\\\"></span>\\n    </button>\\n  </div>\\n\\n</div></code></pre>\\n      </div>\\n<h2>SCSS</h2>\\n<p>We are using <a href='http://sass-lang.com/' target='_blank' rel='nofollow'>Sass</a> and the SCSS syntax so we can nest and use variables <img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/heart_decoration.png?v=2\\\" title=\\\":heart_decoration:\\\" alt=\\\":heart_decoration:\\\" class=\\\"forum-image\\\"></p>\\n<p>We can use the following SCSS to define our styling:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>// Variables\\n$width: 720px;\\n\\n.slider {\\n  width: $width;\\n  height: 400px;\\n  overflow: hidden;\\n  margin: 0 auto;\\n  text-align: center;\\n\\n  .slides {\\n    display: block;\\n    width: 6000px;\\n    height: 400px;\\n    margin: 0;\\n    padding: 0;\\n  }\\n\\n  .slide {\\n    float: left;\\n    list-style-type: none;\\n    width: $width;\\n    height: 400px;\\n\\n    img {\\n      width: 100%;\\n      height: 100%;\\n    }\\n  }\\n}\\n\\n.buttons {\\n  margin: 0;\\n  width: $width;\\n  position: relative;\\n  top: -40px;\\n  margin: 0 auto;\\n\\n  .play {\\n    display: none;\\n  }\\n\\n  .btn {\\n    display: flex;\\n    margin: 0 auto;\\n    text-align: center;\\n  }\\n}</code></pre>\\n      </div>\\n<h2>JS</h2>\\n<h4>Variables</h4>\\n<p><em>In the following code snippet, we define variables used later in our code.</em></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var animationSpeed = 1000; // How quickly the next slide animates.\\nvar pause = 3000; // The pause between each slide.</code></pre>\\n      </div>\\n<p>We will use a blank variable where we will call the <code>setInterval</code> method:  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var interval;</code></pre>\\n      </div>\\n<h4>Animation We will wrap our slider animations inside a function:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function startSlider() {}</code></pre>\\n      </div>\\n<p>We are using the <code>setInterval()</code> native JavaScript method to automate the contents of the function on a time based trigger.  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>interval = setInterval(function() {}, pause);</code></pre>\\n      </div>\\n<p>We use the <code>pause</code> variable to see how many milliseconds to wait before calling the function again. Read more on the native <code>setInterval</code> method here: <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval\\\">https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval</a>. Inside our function we will use jQuery to fade between slides at the speed of the animationSpeed variable:  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$('.slides > li:first')\\n  .fadeOut(animationSpeed)\\n  .next()\\n  .fadeIn(animationSpeed)\\n  .end()\\n  .appendTo('.slides');</code></pre>\\n      </div>\\n<ul>\\n<li>\\n<p>We are targeting the first slide using <code>$('.slides > li:first')</code>. - <code>.fadeOut(animationSpeed)</code> will fade the first slide out and then using <code>.next()</code>, we move to the next slide. - Once we have moved to the next slide, we will fade it in: <code>.fadeIn(animationSpeed)</code>. - This sequence will continue until the last slide (<code>.end()</code>), then we stop the animation. We will now call the <code>startSlider</code> function to start the animation:  </p>\\n<p>startSlider();</p>\\n</li>\\n</ul>\\n<h4>Play and Pause <em>This feature is optional, but quite easy to implement.</em> We will hide the play button, so we don’t see both the play and pause buttons:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$('.play').hide(); // Hiding the play button.</code></pre>\\n      </div>\\n<p>We will now create our pause button (automatically shown on page load):  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$('.pause').click(function() {\\n\\tclearInterval(interval);\\n\\t$(this).hide();\\n\\t$('.play').show();\\n});</code></pre>\\n      </div>\\n<ul>\\n<li>\\n<p>We will call our function every time the pause button is clicked using jQuery. - We will remove the interval using the <code>clearInterval</code> method and using our <code>interval</code> variable as the parameter, indicating which interval to stop. - Because our slider is paused, we will hide the pause button using <code>$(this).hide();</code>. Note: we are using <code>this</code>, which will refer to what our parent is calling i.e. <code>.pause</code>. - We will then show our play button so the user can resume the animation: <code>$('.play').show();</code>. The following code sets up our play button (automatically hidden on page load):  </p>\\n<p>$(‘.play’).click(function() {\\nstartSlider();\\n$(this).hide();\\n$(‘.pause’).show();\\n});</p>\\n</li>\\n<li>\\n<p>We will call our function every time the play button is clicked using jQuery.</p>\\n<ul>\\n<li>We will start or restart the interval using the <code>startSlider</code> function.</li>\\n<li>Because our slider is currently playing, we will hide the play button using <code>$(this).hide();</code>. Note: we are using <code>this</code>, which will refer to what our parent is calling i.e. <code>.play</code>.</li>\\n<li>We will then show our pause button so the user can stop the animation at will: <code>$('.pause').show();</code>.</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>References</h2>\\n<ul>\\n<li>Checkout the source code and example on <a href='https://codepen.io/atjonathan/pen/BKMxxq' target='_blank' rel='nofollow'>CodePen</a> for this tutorial.</li>\\n</ul>\",\"fields\":{\"slug\":\"/miscellaneous/guide-to-build-a-sliding-image-gallery/\"},\"frontmatter\":{\"title\":\"Guide to Build a Sliding Image Gallery\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/guide-to-build-a-sliding-image-gallery/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---miscellaneous-guide-to-build-a-sliding-image-gallery-a61c4b0ce1f25466dca0.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>This tutorial will walk you through building an image slider using the <a href='https://jquery.com/' target='_blank' rel='nofollow'>jQuery</a> library.</p>\\n<p><a href=\\\"https://codepen.io/atjonathan/pen/BKMxxq\\\"><img src=\\\"//discourse-user-assets.s3.amazonaws.com/original/2X/0/08d83a22c28da836a06853b1f1ea669b398326b9.gif\\\" alt=\\\"GIF showing Slider in action\\\"></a></p>\\n<p>This tutorial will have four parts:  </p>\\n<ul>\\n<li><a href=\\\"#html\\\">HTML</a>  </li>\\n<li><a href=\\\"#scss\\\">SCSS</a>  </li>\\n<li><a href=\\\"#js\\\">JS</a>  </li>\\n<li><a href=\\\"#references\\\">References</a></li>\\n</ul>\\n<h2>HTML</h2>\\n<p>We will be using <a href='http://getbootstrap.com/' target='_blank' rel='nofollow'>Bootstrap</a> for this tutorial to keep things looking good, without spending a lot of time.</p>\\n<p>Our structure will be as follows:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><div class=\\\"container\\\">\\n\\n  <!-- The wrapper for our slider -->\\n  <div class=\\\"slider\\\">\\n    <ul class=\\\"slides\\\"><!-- Each image will be inside this unordered list --></ul>\\n  </div>\\n\\n  <div class=\\\"buttons\\\"><!-- Pause and play buttons will go in here --></div>\\n\\n</div></code></pre>\\n      </div>\\n<p>Inside our <code>ul</code> with the class of <code>slides</code> we will have the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><li class=\\\"slide\\\"><img src=\\\"#\\\" /></li>\\n<li class=\\\"slide\\\"><img src=\\\"#\\\" /></li>\\n<li class=\\\"slide\\\"><img src=\\\"#\\\" /></li>\\n<li class=\\\"slide\\\"><img src=\\\"#\\\" /></li>\\n<li class=\\\"slide\\\"><img src=\\\"#\\\" /></li></code></pre>\\n      </div>\\n<p>Inside our <code>.buttons</code> class you should have the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><button type=\\\"button\\\" class=\\\"btn btn-default pause\\\">\\n\\t<span class=\\\"glyphicon glyphicon-pause\\\"></span>\\n</button>\\n<button type=\\\"button\\\" class=\\\"btn btn-default play\\\">\\n\\t<span class=\\\"glyphicon glyphicon-play\\\"></span>\\n</button></code></pre>\\n      </div>\\n<p>Here is an example of what your <code>html</code> should look like:</p>\\n<blockquote>\\n<p>Note: You should replace the image <code>src</code> attribute with your own content.</p>\\n</blockquote>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><div class=\\\"container\\\">\\n\\n  <div class=\\\"slider\\\">\\n    <ul class=\\\"slides\\\">\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=120\\\" /></li>\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=70\\\" /></li>\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=50\\\" /></li>\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=170\\\" /></li>\\n      <li class=\\\"slide\\\"><img src=\\\"https://unsplash.it/1280/720/?image=190\\\" /></li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"buttons\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default pause\\\">\\n      <span class=\\\"glyphicon glyphicon-pause\\\"></span>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default play\\\">\\n      <span class=\\\"glyphicon glyphicon-play\\\"></span>\\n    </button>\\n  </div>\\n\\n</div></code></pre>\\n      </div>\\n<h2>SCSS</h2>\\n<p>We are using <a href='http://sass-lang.com/' target='_blank' rel='nofollow'>Sass</a> and the SCSS syntax so we can nest and use variables <img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/heart_decoration.png?v=2\\\" title=\\\":heart_decoration:\\\" alt=\\\":heart_decoration:\\\" class=\\\"forum-image\\\"></p>\\n<p>We can use the following SCSS to define our styling:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>// Variables\\n$width: 720px;\\n\\n.slider {\\n  width: $width;\\n  height: 400px;\\n  overflow: hidden;\\n  margin: 0 auto;\\n  text-align: center;\\n\\n  .slides {\\n    display: block;\\n    width: 6000px;\\n    height: 400px;\\n    margin: 0;\\n    padding: 0;\\n  }\\n\\n  .slide {\\n    float: left;\\n    list-style-type: none;\\n    width: $width;\\n    height: 400px;\\n\\n    img {\\n      width: 100%;\\n      height: 100%;\\n    }\\n  }\\n}\\n\\n.buttons {\\n  margin: 0;\\n  width: $width;\\n  position: relative;\\n  top: -40px;\\n  margin: 0 auto;\\n\\n  .play {\\n    display: none;\\n  }\\n\\n  .btn {\\n    display: flex;\\n    margin: 0 auto;\\n    text-align: center;\\n  }\\n}</code></pre>\\n      </div>\\n<h2>JS</h2>\\n<h4>Variables</h4>\\n<p><em>In the following code snippet, we define variables used later in our code.</em></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var animationSpeed = 1000; // How quickly the next slide animates.\\nvar pause = 3000; // The pause between each slide.</code></pre>\\n      </div>\\n<p>We will use a blank variable where we will call the <code>setInterval</code> method:  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var interval;</code></pre>\\n      </div>\\n<h4>Animation We will wrap our slider animations inside a function:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function startSlider() {}</code></pre>\\n      </div>\\n<p>We are using the <code>setInterval()</code> native JavaScript method to automate the contents of the function on a time based trigger.  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>interval = setInterval(function() {}, pause);</code></pre>\\n      </div>\\n<p>We use the <code>pause</code> variable to see how many milliseconds to wait before calling the function again. Read more on the native <code>setInterval</code> method here: <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval\\\">https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval</a>. Inside our function we will use jQuery to fade between slides at the speed of the animationSpeed variable:  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$('.slides > li:first')\\n  .fadeOut(animationSpeed)\\n  .next()\\n  .fadeIn(animationSpeed)\\n  .end()\\n  .appendTo('.slides');</code></pre>\\n      </div>\\n<ul>\\n<li>\\n<p>We are targeting the first slide using <code>$('.slides > li:first')</code>. - <code>.fadeOut(animationSpeed)</code> will fade the first slide out and then using <code>.next()</code>, we move to the next slide. - Once we have moved to the next slide, we will fade it in: <code>.fadeIn(animationSpeed)</code>. - This sequence will continue until the last slide (<code>.end()</code>), then we stop the animation. We will now call the <code>startSlider</code> function to start the animation:  </p>\\n<p>startSlider();</p>\\n</li>\\n</ul>\\n<h4>Play and Pause <em>This feature is optional, but quite easy to implement.</em> We will hide the play button, so we don’t see both the play and pause buttons:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$('.play').hide(); // Hiding the play button.</code></pre>\\n      </div>\\n<p>We will now create our pause button (automatically shown on page load):  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$('.pause').click(function() {\\n\\tclearInterval(interval);\\n\\t$(this).hide();\\n\\t$('.play').show();\\n});</code></pre>\\n      </div>\\n<ul>\\n<li>\\n<p>We will call our function every time the pause button is clicked using jQuery. - We will remove the interval using the <code>clearInterval</code> method and using our <code>interval</code> variable as the parameter, indicating which interval to stop. - Because our slider is paused, we will hide the pause button using <code>$(this).hide();</code>. Note: we are using <code>this</code>, which will refer to what our parent is calling i.e. <code>.pause</code>. - We will then show our play button so the user can resume the animation: <code>$('.play').show();</code>. The following code sets up our play button (automatically hidden on page load):  </p>\\n<p>$(‘.play’).click(function() {\\nstartSlider();\\n$(this).hide();\\n$(‘.pause’).show();\\n});</p>\\n</li>\\n<li>\\n<p>We will call our function every time the play button is clicked using jQuery.</p>\\n<ul>\\n<li>We will start or restart the interval using the <code>startSlider</code> function.</li>\\n<li>Because our slider is currently playing, we will hide the play button using <code>$(this).hide();</code>. Note: we are using <code>this</code>, which will refer to what our parent is calling i.e. <code>.play</code>.</li>\\n<li>We will then show our pause button so the user can stop the animation at will: <code>$('.pause').show();</code>.</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>References</h2>\\n<ul>\\n<li>Checkout the source code and example on <a href='https://codepen.io/atjonathan/pen/BKMxxq' target='_blank' rel='nofollow'>CodePen</a> for this tutorial.</li>\\n</ul>\",\"fields\":{\"slug\":\"/miscellaneous/guide-to-build-a-sliding-image-gallery/\"},\"frontmatter\":{\"title\":\"Guide to Build a Sliding Image Gallery\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/guide-to-build-a-sliding-image-gallery/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/miscellaneous-guide-to-build-a-sliding-image-gallery.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/miscellaneous-guide-to-build-a-sliding-image-gallery.json\n// module chunks = 7319283069395509000"],"sourceRoot":""}