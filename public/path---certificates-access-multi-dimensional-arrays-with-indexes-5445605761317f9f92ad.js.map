{"version":3,"sources":["webpack:///path---certificates-access-multi-dimensional-arrays-with-indexes-5445605761317f9f92ad.js","webpack:///./.cache/json/certificates-access-multi-dimensional-arrays-with-indexes.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-access-multi-dimensional-arrays-with-indexes.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,mHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6jBAA8hBC,QAAoDC,KAAA,+DAAqEC,aAAgBC,MAAA,kDAAyDC,aAAgBH,KAAA","file":"path---certificates-access-multi-dimensional-arrays-with-indexes-5445605761317f9f92ad.js","sourcesContent":["webpackJsonp([13206688329218613000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-access-multi-dimensional-arrays-with-indexes.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>One way to think of a <code>multi-dimensional</code> array, is as an array of arrays. When you use brackets to access your array, the first set of bracket refers to the entries in the outer-most array, and each subsequent level of brackets refers to the next level of entries inside.</p>\\n<h2>Example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var arr = [\\n    [1,2,3],\\n    [4,5,6],\\n    [7,8,9],\\n    [[10,11,12], 13, 14]\\n];\\narr[0]; // equals [1,2,3]\\narr[1][2]; // equals 6\\narr[3][0][1]; // equals 11</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/access-multi-dimensional-arrays-with-indexes/\"},\"frontmatter\":{\"title\":\"Access Multi Dimensional Arrays with Indexes\"}}},\"pathContext\":{\"slug\":\"/certificates/access-multi-dimensional-arrays-with-indexes/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-access-multi-dimensional-arrays-with-indexes-5445605761317f9f92ad.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>One way to think of a <code>multi-dimensional</code> array, is as an array of arrays. When you use brackets to access your array, the first set of bracket refers to the entries in the outer-most array, and each subsequent level of brackets refers to the next level of entries inside.</p>\\n<h2>Example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var arr = [\\n    [1,2,3],\\n    [4,5,6],\\n    [7,8,9],\\n    [[10,11,12], 13, 14]\\n];\\narr[0]; // equals [1,2,3]\\narr[1][2]; // equals 6\\narr[3][0][1]; // equals 11</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/access-multi-dimensional-arrays-with-indexes/\"},\"frontmatter\":{\"title\":\"Access Multi Dimensional Arrays with Indexes\"}}},\"pathContext\":{\"slug\":\"/certificates/access-multi-dimensional-arrays-with-indexes/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-access-multi-dimensional-arrays-with-indexes.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-access-multi-dimensional-arrays-with-indexes.json\n// module chunks = 13206688329218613000"],"sourceRoot":""}