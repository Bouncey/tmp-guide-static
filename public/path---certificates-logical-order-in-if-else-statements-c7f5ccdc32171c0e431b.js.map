{"version":3,"sources":["webpack:///path---certificates-logical-order-in-if-else-statements-c7f5ccdc32171c0e431b.js","webpack:///./.cache/json/certificates-logical-order-in-if-else-statements.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-logical-order-in-if-else-statements.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,0GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,o7CAAi6BC,QAAgkBC,KAAA,sDAA4DC,aAAgBC,MAAA,yCAAgDC,aAAgBH,KAAA","file":"path---certificates-logical-order-in-if-else-statements-c7f5ccdc32171c0e431b.js","sourcesContent":["webpackJsonp([8861248713652726000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-logical-order-in-if-else-statements.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Order is important in <code>if</code>, <code>else if</code> and <code>else</code> statements.</p>\\n<p>The loop is executed from top to bottom so you will want to be careful of which statement comes first.</p>\\n<p>Take these two functions as an example.</p>\\n<h2>Examples:</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function foo(x) {\\n  if (x < 1) {\\n    return \\\"Less than one\\\";\\n    } \\n  else if (x < 2) {\\n    return \\\"Less than two\\\";\\n    } \\n  else {\\n    return \\\"Greater than or equal to two\\\";\\n    }\\n}</code></pre>\\n      </div>\\n<p>And the second just switches the order of the statements:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function bar(x) {\\n  if (x < 2) {\\n    return \\\"Less than two\\\";\\n    } \\n  else if (x < 1) {\\n    return \\\"Less than one\\\";\\n    }\\n  else {\\n    return \\\"Greater than or equal to two\\\";\\n    }\\n}</code></pre>\\n      </div>\\n<p>While these two functions look nearly identical, if we pass a number to both we get different outputs.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>foo(0) // \\\"Less than one\\\" \\n\\nbar(0) // \\\"Less than two\\\"</code></pre>\\n      </div>\\n<p>So be careful while using the <code>if</code>, <code>else if</code> and <code>else</code> statements and always remember that these are executed from top to bottom. Keep this in mind placing your statements accordingly so that you get the desired output.</p>\",\"fields\":{\"slug\":\"/certificates/logical-order-in-if-else-statements/\"},\"frontmatter\":{\"title\":\"Logical Order in if Else Statements\"}}},\"pathContext\":{\"slug\":\"/certificates/logical-order-in-if-else-statements/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-logical-order-in-if-else-statements-c7f5ccdc32171c0e431b.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Order is important in <code>if</code>, <code>else if</code> and <code>else</code> statements.</p>\\n<p>The loop is executed from top to bottom so you will want to be careful of which statement comes first.</p>\\n<p>Take these two functions as an example.</p>\\n<h2>Examples:</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function foo(x) {\\n  if (x < 1) {\\n    return \\\"Less than one\\\";\\n    } \\n  else if (x < 2) {\\n    return \\\"Less than two\\\";\\n    } \\n  else {\\n    return \\\"Greater than or equal to two\\\";\\n    }\\n}</code></pre>\\n      </div>\\n<p>And the second just switches the order of the statements:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function bar(x) {\\n  if (x < 2) {\\n    return \\\"Less than two\\\";\\n    } \\n  else if (x < 1) {\\n    return \\\"Less than one\\\";\\n    }\\n  else {\\n    return \\\"Greater than or equal to two\\\";\\n    }\\n}</code></pre>\\n      </div>\\n<p>While these two functions look nearly identical, if we pass a number to both we get different outputs.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>foo(0) // \\\"Less than one\\\" \\n\\nbar(0) // \\\"Less than two\\\"</code></pre>\\n      </div>\\n<p>So be careful while using the <code>if</code>, <code>else if</code> and <code>else</code> statements and always remember that these are executed from top to bottom. Keep this in mind placing your statements accordingly so that you get the desired output.</p>\",\"fields\":{\"slug\":\"/certificates/logical-order-in-if-else-statements/\"},\"frontmatter\":{\"title\":\"Logical Order in if Else Statements\"}}},\"pathContext\":{\"slug\":\"/certificates/logical-order-in-if-else-statements/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-logical-order-in-if-else-statements.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-logical-order-in-if-else-statements.json\n// module chunks = 8861248713652726000"],"sourceRoot":""}