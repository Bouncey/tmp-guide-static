{"version":3,"sources":["webpack:///path---c-conditional-statements-0b11e7c34ddd41af3bd0.js","webpack:///./.cache/json/c-conditional-statements.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/c-conditional-statements.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,kFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,q/VAA2tWC,QAA+MC,KAAA,8BAAoCC,aAAgBC,MAAA,4BAAmCC,aAAgBH,KAAA","file":"path---c-conditional-statements-0b11e7c34ddd41af3bd0.js","sourcesContent":["webpackJsonp([9963951003985983000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/c-conditional-statements.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Conditional Statements in C</h1>\\n<p>Conditional Statements are also known as Branching Statements. They are so called because the program chooses to follow one branch or another.</p>\\n<h2>1. if statement</h2>\\n<p>This is the most simple form of the conditional statements. It consists of a Boolean expression followed by one or more statements. If the Boolean expression evaluates to <strong>true</strong>, then the block of code inside the ‘if’ statement will be executed. If the Boolean expression evaluates to <strong>false</strong>, then the first set of code after the end of the ‘if’ statement (after the closing curly brace) will be executed.</p>\\n<p>C programming language <strong><em>assumes any non-zero and non-null values as true</em></strong> and if it is <strong><em>either zero or null, then it is assumed as false</em></strong> value.</p>\\n<h4>Syntax</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">int</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is less than 200\\\\n\\\"</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Result</h4>\\n<p><code>a is less than 200</code></p>\\n<h2>2. if…else statement</h2>\\n<p>If the Boolean expression evaluates to <strong>true</strong>, then the if block will be executed, otherwise, the else block will be executed.</p>\\n<h4>Syntax</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression is false</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">int</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is less than 200\\\\n\\\"</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is more than 200\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Result</h4>\\n<p><code>a is more than 200</code></p>\\n<h2>3. if…else if…else statement</h2>\\n<p>When using if…else if..else statements, there are few points to keep in mind -</p>\\n<ul>\\n<li>An <strong>if</strong> can have <strong>zero or one else</strong>’s and it <strong>must come after any else if</strong>’s.</li>\\n<li>An <strong>if</strong> can have <strong>zero to many else if</strong>’s and they <strong>must come before the else</strong>.</li>\\n<li>Once an <strong>else if</strong> succeeds, none of the remaining else if’s or else’s will be tested.</li>\\n</ul>\\n<h4>Syntax</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_1<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression_1 is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression_1 is false and boolean_expression_2 is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_3<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when both boolean_expression_1 and boolean_expression_2 are false and boolean_expression_3 is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when all boolean_expression_1, boolean_expression_2 and boolean_expression_3 are false</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">int</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is equal to 100\\\\n\\\"</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is equal to 200\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is equal to 300\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is more than 300\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Result</h4>\\n<p><code>a is equal to 300</code></p>\\n<h2>4. Nested if statement</h2>\\n<p>It is always legal in C programming to nest if-else statements, which means you can use one if or else if statement inside another if or else if statement(s).</p>\\n<h4>Syntax</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_1<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Executed when boolean_expression_1 is true</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Executed when both boolean_expression_1 and boolean_expression_2 are true</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">int</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">int</span> b <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is equal to 100\\\\n\\\"</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>b <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"b is equal to 200\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Result</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code>a is equal to 100\\nb is equal to 200\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/c/conditional-statements/\"},\"frontmatter\":{\"title\":\"Conditional Statements\"}}},\"pathContext\":{\"slug\":\"/c/conditional-statements/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---c-conditional-statements-0b11e7c34ddd41af3bd0.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Conditional Statements in C</h1>\\n<p>Conditional Statements are also known as Branching Statements. They are so called because the program chooses to follow one branch or another.</p>\\n<h2>1. if statement</h2>\\n<p>This is the most simple form of the conditional statements. It consists of a Boolean expression followed by one or more statements. If the Boolean expression evaluates to <strong>true</strong>, then the block of code inside the ‘if’ statement will be executed. If the Boolean expression evaluates to <strong>false</strong>, then the first set of code after the end of the ‘if’ statement (after the closing curly brace) will be executed.</p>\\n<p>C programming language <strong><em>assumes any non-zero and non-null values as true</em></strong> and if it is <strong><em>either zero or null, then it is assumed as false</em></strong> value.</p>\\n<h4>Syntax</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">int</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is less than 200\\\\n\\\"</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Result</h4>\\n<p><code>a is less than 200</code></p>\\n<h2>2. if…else statement</h2>\\n<p>If the Boolean expression evaluates to <strong>true</strong>, then the if block will be executed, otherwise, the else block will be executed.</p>\\n<h4>Syntax</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression is false</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">int</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is less than 200\\\\n\\\"</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is more than 200\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Result</h4>\\n<p><code>a is more than 200</code></p>\\n<h2>3. if…else if…else statement</h2>\\n<p>When using if…else if..else statements, there are few points to keep in mind -</p>\\n<ul>\\n<li>An <strong>if</strong> can have <strong>zero or one else</strong>’s and it <strong>must come after any else if</strong>’s.</li>\\n<li>An <strong>if</strong> can have <strong>zero to many else if</strong>’s and they <strong>must come before the else</strong>.</li>\\n<li>Once an <strong>else if</strong> succeeds, none of the remaining else if’s or else’s will be tested.</li>\\n</ul>\\n<h4>Syntax</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_1<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression_1 is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when boolean_expression_1 is false and boolean_expression_2 is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_3<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when both boolean_expression_1 and boolean_expression_2 are false and boolean_expression_3 is true</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Block of Statements executed when all boolean_expression_1, boolean_expression_2 and boolean_expression_3 are false</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">int</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is equal to 100\\\\n\\\"</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is equal to 200\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is equal to 300\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is more than 300\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Result</h4>\\n<p><code>a is equal to 300</code></p>\\n<h2>4. Nested if statement</h2>\\n<p>It is always legal in C programming to nest if-else statements, which means you can use one if or else if statement inside another if or else if statement(s).</p>\\n<h4>Syntax</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_1<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Executed when boolean_expression_1 is true</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>boolean_expression_2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//Executed when both boolean_expression_1 and boolean_expression_2 are true</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-c\\\"><code><span class=\\\"token keyword\\\">int</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">int</span> b <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"a is equal to 100\\\\n\\\"</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>b <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"b is equal to 200\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h4>Result</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code>a is equal to 100\\nb is equal to 200\\n</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/c/conditional-statements/\"},\"frontmatter\":{\"title\":\"Conditional Statements\"}}},\"pathContext\":{\"slug\":\"/c/conditional-statements/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/c-conditional-statements.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/c-conditional-statements.json\n// module chunks = 9963951003985983000"],"sourceRoot":""}