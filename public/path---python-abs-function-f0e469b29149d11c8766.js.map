{"version":3,"sources":["webpack:///path---python-abs-function-f0e469b29149d11c8766.js","webpack:///./.cache/json/python-abs-function.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/python-abs-function.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,oBAERC,6EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,uzCAAAC,QAAw0CC,KAAA,yBAA+BC,aAAgBC,MAAA,yBAAgCC,aAAgBH,KAAA","file":"path---python-abs-function-f0e469b29149d11c8766.js","sourcesContent":["webpackJsonp([573941291986695100],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/python-abs-function.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><code>abs()</code> is a built-in function in Python 3, to compute the absolute value of any number. It takes one argument <code>x</code>. The argument can even be a <a href='https://docs.python.org/3.0/library/cmath.html' target='_blank' rel='nofollow'>complex number</a>, and in that case its <a href='http://www.mathcentre.ac.uk/resources/sigma%20complex%20number%20leaflets/sigma-complex9-2009-1.pdf' target='_blank' rel='nofollow'>modulus</a> is returned.</p>\\n<h2>Argument</h2>\\n<p>It takes one argument <code>x</code> - an integer, or decimal, or a complex number.</p>\\n<h2>Return Value</h2>\\n<p>The return value would be a positive number. Even if complex number is passed, it would return its magnitude, computed as per complex number algebra.</p>\\n<h2>Code Sample</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>print(abs(3.4)) # prints 3.4\\nprint(abs(-6)) # prints 6\\nprint(abs(3 + 4j)) # prints 5, because |3 + 4j| = 5</code></pre>\\n      </div>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" title=\\\":rocket:\\\" alt=\\\":rocket:\\\" class=\\\"forum-image\\\"> <a href='https://repl.it/CL8k/0' target='_blank' rel='nofollow'>Run Code</a></p>\\n<p><a href='https://docs.python.org/3/library/functions.html#abs' target='_blank' rel='nofollow'>Official Docs</a></p>\",\"fields\":{\"slug\":\"/python/abs-function/\"},\"frontmatter\":{\"title\":\"Python Abs Function\"}}},\"pathContext\":{\"slug\":\"/python/abs-function/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---python-abs-function-f0e469b29149d11c8766.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><code>abs()</code> is a built-in function in Python 3, to compute the absolute value of any number. It takes one argument <code>x</code>. The argument can even be a <a href='https://docs.python.org/3.0/library/cmath.html' target='_blank' rel='nofollow'>complex number</a>, and in that case its <a href='http://www.mathcentre.ac.uk/resources/sigma%20complex%20number%20leaflets/sigma-complex9-2009-1.pdf' target='_blank' rel='nofollow'>modulus</a> is returned.</p>\\n<h2>Argument</h2>\\n<p>It takes one argument <code>x</code> - an integer, or decimal, or a complex number.</p>\\n<h2>Return Value</h2>\\n<p>The return value would be a positive number. Even if complex number is passed, it would return its magnitude, computed as per complex number algebra.</p>\\n<h2>Code Sample</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>print(abs(3.4)) # prints 3.4\\nprint(abs(-6)) # prints 6\\nprint(abs(3 + 4j)) # prints 5, because |3 + 4j| = 5</code></pre>\\n      </div>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" title=\\\":rocket:\\\" alt=\\\":rocket:\\\" class=\\\"forum-image\\\"> <a href='https://repl.it/CL8k/0' target='_blank' rel='nofollow'>Run Code</a></p>\\n<p><a href='https://docs.python.org/3/library/functions.html#abs' target='_blank' rel='nofollow'>Official Docs</a></p>\",\"fields\":{\"slug\":\"/python/abs-function/\"},\"frontmatter\":{\"title\":\"Python Abs Function\"}}},\"pathContext\":{\"slug\":\"/python/abs-function/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/python-abs-function.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/python-abs-function.json\n// module chunks = 573941291986695100"],"sourceRoot":""}