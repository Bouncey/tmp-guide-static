webpackJsonp([0xa0fb333853994800],{"./node_modules/json-loader/index.js!./.cache/json/python-numeric-types.json":function(t,l){t.exports={data:{markdownRemark:{html:"<p>The <a href='https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex' target='_blank' rel='nofollow'>numeric types</a> for Python are:</p>\n<ul>\n<li>integers (<code>int</code>)</li>\n<li>\n<p>floating point numbers (<code>float</code>)</p>\n<ul>\n<li><a href='https://docs.python.org/3/library/functions.html#float' target='_blank' rel='nofollow'>constructor</a></li>\n</ul>\n</li>\n<li>\n<p>complex numbers</p>\n<ul>\n<li><a href='https://docs.python.org/3/library/functions.html#complex' target='_blank' rel='nofollow'>constructor</a></li>\n</ul>\n</li>\n</ul>\n<p>The standard library adds numeric types for</p>\n<ul>\n<li><a href='https://docs.python.org/3/library/fractions.html#module-fractions' target='_blank' rel='nofollow'>fractions</a></li>\n<li><a href='https://docs.python.org/3/library/decimal.html#module-decimal' target='_blank' rel='nofollow'>decimals</a></li>\n</ul>\n<p>Numeric objects are created from literals or as the result of functions and operators. The syntax for numeric literals is well <a href='https://docs.python.org/3/reference/lexical_analysis.html#numeric-literals' target='_blank' rel='nofollow'>documented</a>.</p>",fields:{slug:"/python/numeric-types/"},frontmatter:{title:"Python Numeric Types"}}},pathContext:{slug:"/python/numeric-types/"}}}});
//# sourceMappingURL=path---python-numeric-types-b6346bafe8bd862dc423.js.map