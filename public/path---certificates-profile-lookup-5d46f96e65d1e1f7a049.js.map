{"version":3,"sources":["webpack:///path---certificates-profile-lookup-5d46f96e65d1e1f7a049.js","webpack:///./.cache/json/certificates-profile-lookup.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-profile-lookup.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,qFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6xPAAmoMC,QAA6xDC,KAAA,iCAAuCC,aAAgBC,MAAA,oBAA2BC,aAAgBH,KAAA","file":"path---certificates-profile-lookup-5d46f96e65d1e1f7a049.js","sourcesContent":["webpackJsonp([9012922458024963000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-profile-lookup.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3\\\" title=\\\":triangular_flag_on_post:\\\" alt=\\\":triangular_flag_on_post:\\\" class=\\\"forum-image\\\"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3\\\" title=\\\":busts_in_silhouette:\\\" alt=\\\":busts_in_silhouette:\\\" class=\\\"forum-image\\\"> and write your own code <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3\\\" title=\\\":pencil:\\\" alt=\\\":pencil:\\\" class=\\\"forum-image\\\"></p>\\n<h3><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3\\\" title=\\\":checkered_flag:\\\" alt=\\\":checkered_flag:\\\" class=\\\"forum-image\\\"> Problem Explanation:</h3>\\n<p>We have an array of objects representing different people in our contacts lists.</p>\\n<p>A <code>lookUpProfile()</code> function that takes <strong>firstName</strong> and a property (<strong>prop</strong>) as arguments has been pre-written for you.</p>\\n<p>The function should check if <strong>firstName</strong> is an actual contact’s <strong>firstName</strong> and the given property (<strong>prop</strong>) is a property of that contact.</p>\\n<p>If both are true, then return the <em>value</em> of that property.</p>\\n<p>If <strong>firstName</strong> does not correspond to any contacts then return <code>No such contact</code>.</p>\\n<p>If <strong>prop</strong> does not correspond to any valid properties then return <code>No such property</code>.</p>\\n<ul>\\n<li>Change the code below <code>// Only change code below this line</code> and up to <code>// Only change code above this line</code>.</li>\\n<li>\\n<p>Ensure that you are editing the inside of the <code>lookUpProfile()</code> function.</p>\\n<ul>\\n<li>This function includes two parameters, <strong>firstName</strong> and <strong>prop</strong>.</li>\\n</ul>\\n</li>\\n<li>\\n<p>The function should look through the <strong>contacts</strong> list for the given <strong>firstName</strong> parameter.</p>\\n<ul>\\n<li>If there is a match found, the function should then look for the given <strong>prop</strong> parameter.</li>\\n<li>If both <strong>firstName</strong> and the associated <strong>prop</strong> are found, you should return the value of the <strong>prop</strong>.</li>\\n<li>If <strong>firstName</strong> is found and no associated <strong>prop</strong> is found, you should return <code>No such property</code>.</li>\\n</ul>\\n</li>\\n<li>If <strong>firstName</strong> isn’t found anywhere, you should return <code>No such contact</code>.</li>\\n</ul>\\n<h4>Relevant Links</h4>\\n<ul>\\n<li><a href='http://www.freecodecamp.com/challenges/accessing-objects-properties-with-bracket-notation' target='_blank' rel='nofollow'>Challenge: Accessing Objects Properties with Bracket Notation</a></li>\\n<li><a href='http://www.freecodecamp.com/challenges/iterate-with-javascript-for-loops' target='_blank' rel='nofollow'>Challenge: Iterate with JavaScript For Loops</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" title=\\\":speech_balloon:\\\" alt=\\\":speech_balloon:\\\" class=\\\"forum-image\\\"> Hint: 1</h2>\\n<p>Use a <code>for</code> loop to cycle through the <strong>contacts</strong> list.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" title=\\\":speech_balloon:\\\" alt=\\\":speech_balloon:\\\" class=\\\"forum-image\\\"> Hint: 2</h2>\\n<p>Use a nested <code>if</code> statement to first check if the <strong>firstName</strong> matches, and then checks <code>if</code> the <strong>prop</strong> matches.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" title=\\\":speech_balloon:\\\" alt=\\\":speech_balloon:\\\" class=\\\"forum-image\\\"> Hint: 3</h2>\\n<p>Leave your <code>return \\\"No such contact\\\"</code> out of the <code>for</code> loop as a final catch-all.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2>Spoiler Alert!</h2>\\n<p><img src=\\\"//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif\\\" alt=\\\"warning sign\\\"></p>\\n<p><strong>Solution ahead!</strong></p>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3\\\" title=\\\":beginner:\\\" alt=\\\":beginner:\\\" class=\\\"forum-image\\\"> Basic Code Solution:</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>for (var x = 0; x < contacts.length; x++){\\n    if (contacts<a href='https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3 \\\":clipboard:\\\"' target='_blank' rel='nofollow'>x].firstName === firstName) {\\n        if (contacts[x].hasOwnProperty(prop)) {\\n            return contacts[x][prop];\\n        } else {\\n            return \\\"No such property\\\";\\n        }\\n    }\\n}\\nreturn \\\"No such contact\\\";</code></pre>\\n      </div>\\n<h3>Code Explanation:</h3>\\n<ul>\\n<li>The <code>for</code> loop runs, starting at the first object in the <strong>contacts</strong> list.</li>\\n<li>If the <strong>firstName</strong> parameter passed into the function matches the value of the <code>\\\"firstName\\\"</code> key in the first object, the <code>if</code> statement passes.</li>\\n<li>\\n<p>Then, we use <code>.hasOwnProperty()</code> method (checks if there’s a given property and returns a boolean) with <strong>prop</strong> as an argument. If it’s true, the value of <strong>prop</strong> is returned.</p>\\n<ul>\\n<li>If the second <code>if</code> statement fails, <code>No such property</code> is returned.</li>\\n</ul>\\n</li>\\n<li>If the first <code>if</code> statement fails, the <code>for</code> loop continues on to the next object in the <strong>contacts</strong> list.</li>\\n<li>If the <strong>firstName</strong> parameter isn’t matched by the final <strong>contacts</strong> object, the <code>for</code> loop exits and <code>No such contact</code> is returned.</li>\\n</ul>\\n<p><strong>Example Run</strong></p>\\n<ul>\\n<li><code>lookUpProfile(\\\"Akira\\\",\\\"likes\\\");</code> runs.</li>\\n<li><code>\\\"Akira\\\"</code> is matched to the <code>\\\"firstName\\\"</code> key in the first object, so the <code>if</code> statement returns true.</li>\\n<li><code>\\\"likes\\\"</code> is found within the first object, so the second <code>if</code> statement returns true.</li>\\n<li>The value of <code>\\\"likes\\\"</code> is returned - <code>\\\"Pizza\\\", \\\"Coding\\\", \\\"Brownie Points\\\"</code>.</li>\\n</ul>\\n<h2>![:clipboard:</a> NOTES FOR CONTRIBUTIONS:</h2>\\n<ul>\\n<li><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3\\\" title=\\\":warning:\\\" alt=\\\":warning:\\\" class=\\\"forum-image\\\"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\\n<li>Add an explanation of your solution.</li>\\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3\\\" title=\\\":traffic_light:\\\" alt=\\\":traffic_light:\\\" class=\\\"forum-image\\\"></li>\\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3\\\" title=\\\":warning:\\\" alt=\\\":warning:\\\" class=\\\"forum-image\\\"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\\n</ul>\\n<blockquote>\\n<p>See <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3\\\" title=\\\":point_right:\\\" alt=\\\":point_right:\\\" class=\\\"forum-image\\\"> <a><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\\n</blockquote>\",\"fields\":{\"slug\":\"/certificates/profile-lookup/\"},\"frontmatter\":{\"title\":\"Profile Lookup\"}}},\"pathContext\":{\"slug\":\"/certificates/profile-lookup/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-profile-lookup-5d46f96e65d1e1f7a049.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3\\\" title=\\\":triangular_flag_on_post:\\\" alt=\\\":triangular_flag_on_post:\\\" class=\\\"forum-image\\\"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3\\\" title=\\\":busts_in_silhouette:\\\" alt=\\\":busts_in_silhouette:\\\" class=\\\"forum-image\\\"> and write your own code <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3\\\" title=\\\":pencil:\\\" alt=\\\":pencil:\\\" class=\\\"forum-image\\\"></p>\\n<h3><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3\\\" title=\\\":checkered_flag:\\\" alt=\\\":checkered_flag:\\\" class=\\\"forum-image\\\"> Problem Explanation:</h3>\\n<p>We have an array of objects representing different people in our contacts lists.</p>\\n<p>A <code>lookUpProfile()</code> function that takes <strong>firstName</strong> and a property (<strong>prop</strong>) as arguments has been pre-written for you.</p>\\n<p>The function should check if <strong>firstName</strong> is an actual contact’s <strong>firstName</strong> and the given property (<strong>prop</strong>) is a property of that contact.</p>\\n<p>If both are true, then return the <em>value</em> of that property.</p>\\n<p>If <strong>firstName</strong> does not correspond to any contacts then return <code>No such contact</code>.</p>\\n<p>If <strong>prop</strong> does not correspond to any valid properties then return <code>No such property</code>.</p>\\n<ul>\\n<li>Change the code below <code>// Only change code below this line</code> and up to <code>// Only change code above this line</code>.</li>\\n<li>\\n<p>Ensure that you are editing the inside of the <code>lookUpProfile()</code> function.</p>\\n<ul>\\n<li>This function includes two parameters, <strong>firstName</strong> and <strong>prop</strong>.</li>\\n</ul>\\n</li>\\n<li>\\n<p>The function should look through the <strong>contacts</strong> list for the given <strong>firstName</strong> parameter.</p>\\n<ul>\\n<li>If there is a match found, the function should then look for the given <strong>prop</strong> parameter.</li>\\n<li>If both <strong>firstName</strong> and the associated <strong>prop</strong> are found, you should return the value of the <strong>prop</strong>.</li>\\n<li>If <strong>firstName</strong> is found and no associated <strong>prop</strong> is found, you should return <code>No such property</code>.</li>\\n</ul>\\n</li>\\n<li>If <strong>firstName</strong> isn’t found anywhere, you should return <code>No such contact</code>.</li>\\n</ul>\\n<h4>Relevant Links</h4>\\n<ul>\\n<li><a href='http://www.freecodecamp.com/challenges/accessing-objects-properties-with-bracket-notation' target='_blank' rel='nofollow'>Challenge: Accessing Objects Properties with Bracket Notation</a></li>\\n<li><a href='http://www.freecodecamp.com/challenges/iterate-with-javascript-for-loops' target='_blank' rel='nofollow'>Challenge: Iterate with JavaScript For Loops</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" title=\\\":speech_balloon:\\\" alt=\\\":speech_balloon:\\\" class=\\\"forum-image\\\"> Hint: 1</h2>\\n<p>Use a <code>for</code> loop to cycle through the <strong>contacts</strong> list.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" title=\\\":speech_balloon:\\\" alt=\\\":speech_balloon:\\\" class=\\\"forum-image\\\"> Hint: 2</h2>\\n<p>Use a nested <code>if</code> statement to first check if the <strong>firstName</strong> matches, and then checks <code>if</code> the <strong>prop</strong> matches.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" title=\\\":speech_balloon:\\\" alt=\\\":speech_balloon:\\\" class=\\\"forum-image\\\"> Hint: 3</h2>\\n<p>Leave your <code>return \\\"No such contact\\\"</code> out of the <code>for</code> loop as a final catch-all.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2>Spoiler Alert!</h2>\\n<p><img src=\\\"//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif\\\" alt=\\\"warning sign\\\"></p>\\n<p><strong>Solution ahead!</strong></p>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3\\\" title=\\\":beginner:\\\" alt=\\\":beginner:\\\" class=\\\"forum-image\\\"> Basic Code Solution:</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>for (var x = 0; x < contacts.length; x++){\\n    if (contacts<a href='https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3 \\\":clipboard:\\\"' target='_blank' rel='nofollow'>x].firstName === firstName) {\\n        if (contacts[x].hasOwnProperty(prop)) {\\n            return contacts[x][prop];\\n        } else {\\n            return \\\"No such property\\\";\\n        }\\n    }\\n}\\nreturn \\\"No such contact\\\";</code></pre>\\n      </div>\\n<h3>Code Explanation:</h3>\\n<ul>\\n<li>The <code>for</code> loop runs, starting at the first object in the <strong>contacts</strong> list.</li>\\n<li>If the <strong>firstName</strong> parameter passed into the function matches the value of the <code>\\\"firstName\\\"</code> key in the first object, the <code>if</code> statement passes.</li>\\n<li>\\n<p>Then, we use <code>.hasOwnProperty()</code> method (checks if there’s a given property and returns a boolean) with <strong>prop</strong> as an argument. If it’s true, the value of <strong>prop</strong> is returned.</p>\\n<ul>\\n<li>If the second <code>if</code> statement fails, <code>No such property</code> is returned.</li>\\n</ul>\\n</li>\\n<li>If the first <code>if</code> statement fails, the <code>for</code> loop continues on to the next object in the <strong>contacts</strong> list.</li>\\n<li>If the <strong>firstName</strong> parameter isn’t matched by the final <strong>contacts</strong> object, the <code>for</code> loop exits and <code>No such contact</code> is returned.</li>\\n</ul>\\n<p><strong>Example Run</strong></p>\\n<ul>\\n<li><code>lookUpProfile(\\\"Akira\\\",\\\"likes\\\");</code> runs.</li>\\n<li><code>\\\"Akira\\\"</code> is matched to the <code>\\\"firstName\\\"</code> key in the first object, so the <code>if</code> statement returns true.</li>\\n<li><code>\\\"likes\\\"</code> is found within the first object, so the second <code>if</code> statement returns true.</li>\\n<li>The value of <code>\\\"likes\\\"</code> is returned - <code>\\\"Pizza\\\", \\\"Coding\\\", \\\"Brownie Points\\\"</code>.</li>\\n</ul>\\n<h2>![:clipboard:</a> NOTES FOR CONTRIBUTIONS:</h2>\\n<ul>\\n<li><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3\\\" title=\\\":warning:\\\" alt=\\\":warning:\\\" class=\\\"forum-image\\\"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\\n<li>Add an explanation of your solution.</li>\\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3\\\" title=\\\":traffic_light:\\\" alt=\\\":traffic_light:\\\" class=\\\"forum-image\\\"></li>\\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3\\\" title=\\\":warning:\\\" alt=\\\":warning:\\\" class=\\\"forum-image\\\"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\\n</ul>\\n<blockquote>\\n<p>See <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3\\\" title=\\\":point_right:\\\" alt=\\\":point_right:\\\" class=\\\"forum-image\\\"> <a><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\\n</blockquote>\",\"fields\":{\"slug\":\"/certificates/profile-lookup/\"},\"frontmatter\":{\"title\":\"Profile Lookup\"}}},\"pathContext\":{\"slug\":\"/certificates/profile-lookup/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-profile-lookup.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-profile-lookup.json\n// module chunks = 9012922458024963000"],"sourceRoot":""}