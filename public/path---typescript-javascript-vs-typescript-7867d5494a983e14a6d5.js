webpackJsonp([0x1ab5e1961fbb7800],{"./node_modules/json-loader/index.js!./.cache/json/typescript-javascript-vs-typescript.json":function(e,t){e.exports={data:{markdownRemark:{html:'<h2>JavaScript vs TypeScript</h2>\n<p><img src="https://i.imgur.com/DznuAou.jpg" alt="Where&#x27;s Waldo"></p>\n<p>Okay so now that we have a general sense of what TypeScript is, let‚Äôs play a quick game of <strong>Where‚Äôs Waldo</strong>.</p>\n<p>In the above screenshot, you can spot the differences between <code>JavaScript</code> &#x26; <code>TypeScript</code> in this very simple multiplication program that just prints out the product of two numbers I‚Äôve pre-defined.</p>\n<h3>What are those differences though? ü§îÔ∏è</h3>\n<p>They‚Äôre <strong>types</strong>!</p>\n<p>So <code>JavaScript</code> has dynamic typing in that a variable declared as a number can be turned into a string where as <code>TypeScript</code> has static typing meaning you declare beforehand what type of value the variable will hold and it doesn‚Äôt change.</p>\n<p>In that <code>multiplication.ts</code> file, I‚Äôm declaring all these variables to be numbers so they cannot be changed to something else.</p>',fields:{slug:"/typescript/javascript-vs-typescript/"},frontmatter:{title:"JavaScript vs TypeScript"}}},pathContext:{slug:"/typescript/javascript-vs-typescript/"}}}});
//# sourceMappingURL=path---typescript-javascript-vs-typescript-7867d5494a983e14a6d5.js.map