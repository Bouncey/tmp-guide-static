{"version":3,"sources":["webpack:///path---javascript-tutorials-construct-javascript-objects-with-functions-c9ddc7a269f9341bfbef.js","webpack:///./.cache/json/javascript-tutorials-construct-javascript-objects-with-functions.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-tutorials-construct-javascript-objects-with-functions.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,0HACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+yBAAggBC,QAAmUC,KAAA,sEAA4EC,aAAgBC,MAAA,iDAAwDC,aAAgBH,KAAA","file":"path---javascript-tutorials-construct-javascript-objects-with-functions-c9ddc7a269f9341bfbef.js","sourcesContent":["webpackJsonp([6901799766624469000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-tutorials-construct-javascript-objects-with-functions.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Using constructors it is easy to create new objects using a blueprint or constructor. The declaration syntax is a little different but still easy to remember.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>// Let's add the properties engines and seats to the car in the same way that the property wheels has been added below. They should both be numbers.\\nvar Car = function() {\\n  this.wheels = 4;\\n  this.engines = 1;\\n  this.seats = 1;\\n};\\n\\nvar myCar = new Car();</code></pre>\\n      </div>\\n<p>The name of a constructor function usually begins with a capital letter (unlike other functions, which tend to begin with a lowercase character). The uppercase letter is supposed to help remind developers to use the new keyword when they create an object using that function.</p>\",\"fields\":{\"slug\":\"/javascript/tutorials/construct-javascript-objects-with-functions/\"},\"frontmatter\":{\"title\":\"Construct JavaScript Objects with Functions\"}}},\"pathContext\":{\"slug\":\"/javascript/tutorials/construct-javascript-objects-with-functions/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-tutorials-construct-javascript-objects-with-functions-c9ddc7a269f9341bfbef.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Using constructors it is easy to create new objects using a blueprint or constructor. The declaration syntax is a little different but still easy to remember.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>// Let's add the properties engines and seats to the car in the same way that the property wheels has been added below. They should both be numbers.\\nvar Car = function() {\\n  this.wheels = 4;\\n  this.engines = 1;\\n  this.seats = 1;\\n};\\n\\nvar myCar = new Car();</code></pre>\\n      </div>\\n<p>The name of a constructor function usually begins with a capital letter (unlike other functions, which tend to begin with a lowercase character). The uppercase letter is supposed to help remind developers to use the new keyword when they create an object using that function.</p>\",\"fields\":{\"slug\":\"/javascript/tutorials/construct-javascript-objects-with-functions/\"},\"frontmatter\":{\"title\":\"Construct JavaScript Objects with Functions\"}}},\"pathContext\":{\"slug\":\"/javascript/tutorials/construct-javascript-objects-with-functions/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-tutorials-construct-javascript-objects-with-functions.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-tutorials-construct-javascript-objects-with-functions.json\n// module chunks = 6901799766624469000"],"sourceRoot":""}