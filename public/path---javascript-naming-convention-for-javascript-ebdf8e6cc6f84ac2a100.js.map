{"version":3,"sources":["webpack:///path---javascript-naming-convention-for-javascript-ebdf8e6cc6f84ac2a100.js","webpack:///./.cache/json/javascript-naming-convention-for-javascript.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-naming-convention-for-javascript.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,qGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,88BAA08BC,QAAuCC,KAAA,iDAAuDC,aAAgBC,MAAA,sCAA6CC,aAAgBH,KAAA","file":"path---javascript-naming-convention-for-javascript-ebdf8e6cc6f84ac2a100.js","sourcesContent":["webpackJsonp([13499901810901408000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-naming-convention-for-javascript.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Here you will get an overview of the different code cases that are widely used.</p>\\n<h2>camelCase</h2>\\n<p>In programming, camelCase formatting for variable names looks like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var camelCase = \\\"lower-case first word, capitalize each subsequent word\\\";</code></pre>\\n      </div>\\n<h2>PascalCase</h2>\\n<p>PascalCase (or CamelCase) is a variant of camelCase. It differs from camelCase by capitalizing every word, <em>including</em> the first word:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var PascalCase = \\\"upper-case every word\\\";</code></pre>\\n      </div>\\n<h2>snake_case</h2>\\n<p>Another popular case called snake_case separates each word with underscores in this manner:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var snake_case = \\\"lower-case everything, but separate words with underscores\\\";</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/javascript/naming-convention-for-javascript/\"},\"frontmatter\":{\"title\":\"Naming Convention for JavaScript\"}}},\"pathContext\":{\"slug\":\"/javascript/naming-convention-for-javascript/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-naming-convention-for-javascript-ebdf8e6cc6f84ac2a100.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Here you will get an overview of the different code cases that are widely used.</p>\\n<h2>camelCase</h2>\\n<p>In programming, camelCase formatting for variable names looks like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var camelCase = \\\"lower-case first word, capitalize each subsequent word\\\";</code></pre>\\n      </div>\\n<h2>PascalCase</h2>\\n<p>PascalCase (or CamelCase) is a variant of camelCase. It differs from camelCase by capitalizing every word, <em>including</em> the first word:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var PascalCase = \\\"upper-case every word\\\";</code></pre>\\n      </div>\\n<h2>snake_case</h2>\\n<p>Another popular case called snake_case separates each word with underscores in this manner:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var snake_case = \\\"lower-case everything, but separate words with underscores\\\";</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/javascript/naming-convention-for-javascript/\"},\"frontmatter\":{\"title\":\"Naming Convention for JavaScript\"}}},\"pathContext\":{\"slug\":\"/javascript/naming-convention-for-javascript/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-naming-convention-for-javascript.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-naming-convention-for-javascript.json\n// module chunks = 13499901810901408000"],"sourceRoot":""}