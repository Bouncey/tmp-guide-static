{"version":3,"sources":["webpack:///path---php-php-data-types-e982ba7b27f2c17d17de.js","webpack:///./.cache/json/php-php-data-types.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/php-php-data-types.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,oBAERC,4EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,swFAAswFC,QAA2CC,KAAA,wBAA8BC,aAAgBC,MAAA,oBAA2BC,aAAgBH,KAAA","file":"path---php-php-data-types-e982ba7b27f2c17d17de.js","sourcesContent":["webpackJsonp([14848769706338900000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/php-php-data-types.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>PHP Data Types</h1>\\n<p>Variables can store data of different types such as:</p>\\n<ul>\\n<li>String (“Hello”)</li>\\n<li>Integer (5)</li>\\n<li>Float (also called double) (1.0)</li>\\n<li>Boolean ( 1 or 0 )</li>\\n<li>Array ( array(“I”, “am”, “an”, “array”) )</li>\\n<li>Object</li>\\n<li>NULL</li>\\n<li>Resource</li>\\n</ul>\\n<h2>PHP String</h2>\\n<p>A string is a sequence of characters. It can be any text inside quotes (single or double):</p>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$x = \\\"Hello!\\\";\\n$y = 'Hello!';</code></pre>\\n      </div>\\n<h2>PHP Integer</h2>\\n<p>An integer data type is a non-decimal number between -2,147,483,648 and 2,147,483,647.</p>\\n<p>Rules for integers:</p>\\n<ul>\\n<li>An integer must have at least one digit</li>\\n<li>An integer must not have a decimal point</li>\\n<li>An integer can be either positive or negative</li>\\n<li>Integers can be specified in three formats: decimal (10-based), hexadecimal (16-based - prefixed with 0x) or octal (8-based - prefixed with 0)</li>\\n</ul>\\n<h4>Example</h4>\\n<p><code>$x = 5;</code></p>\\n<h2>PHP Float</h2>\\n<p>A float (floating point number) is a number with a decimal point or a number in exponential form.</p>\\n<h4>Example</h4>\\n<p><code>$x = 5.01;</code></p>\\n<h2>PHP Boolean</h2>\\n<p>A Boolean represents two possible states: TRUE or FALSE. Booleans are often used in conditional testing.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$x = true;\\n$y = false;</code></pre>\\n      </div>\\n<h2>PHP Array</h2>\\n<p>An array stores multiple values in one single variable.  </p>\\n<p><code>$colours = array(\\\"Blue\\\",\\\"Purple\\\",\\\"Pink\\\");</code></p>\\n<h2>PHP NULL Value</h2>\\n<p>Null is a special data type which can have only one value: NULL.<br>\\nA variable of data type NULL is a variable that has no value assigned to it.<br>\\nVariables can also be emptied by setting the value to NULL.  </p>\\n<p><strong>Note:</strong> If a variable is created without a value, it is automatically assigned a value of NULL.  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><?php\\n$x = \\\"Hello world!\\\";\\n$x = null;\\n?></code></pre>\\n      </div>\\n<p>Output:<br>\\nNULL</p>\\n<h2>PHP Object</h2>\\n<p>An object is a data type which stores data and information on how to process that data.<br>\\nIn PHP, an object must be explicitly declared.<br>\\nFirst we must declare a class of object. A class is a structure that can contain properties and methods.</p>\\n<p><strong>Example:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><?php\\nclass Car {\\n    function Car() {\\n        $this->model = \\\"VW\\\";\\n    }\\n}\\n\\n// create an object\\n$herbie = new Car();\\n\\n// show object properties\\necho $herbie->model;\\n?></code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/php/php-data-types/\"},\"frontmatter\":{\"title\":\"PHP Data Types\"}}},\"pathContext\":{\"slug\":\"/php/php-data-types/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---php-php-data-types-e982ba7b27f2c17d17de.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>PHP Data Types</h1>\\n<p>Variables can store data of different types such as:</p>\\n<ul>\\n<li>String (“Hello”)</li>\\n<li>Integer (5)</li>\\n<li>Float (also called double) (1.0)</li>\\n<li>Boolean ( 1 or 0 )</li>\\n<li>Array ( array(“I”, “am”, “an”, “array”) )</li>\\n<li>Object</li>\\n<li>NULL</li>\\n<li>Resource</li>\\n</ul>\\n<h2>PHP String</h2>\\n<p>A string is a sequence of characters. It can be any text inside quotes (single or double):</p>\\n<h4>Example</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$x = \\\"Hello!\\\";\\n$y = 'Hello!';</code></pre>\\n      </div>\\n<h2>PHP Integer</h2>\\n<p>An integer data type is a non-decimal number between -2,147,483,648 and 2,147,483,647.</p>\\n<p>Rules for integers:</p>\\n<ul>\\n<li>An integer must have at least one digit</li>\\n<li>An integer must not have a decimal point</li>\\n<li>An integer can be either positive or negative</li>\\n<li>Integers can be specified in three formats: decimal (10-based), hexadecimal (16-based - prefixed with 0x) or octal (8-based - prefixed with 0)</li>\\n</ul>\\n<h4>Example</h4>\\n<p><code>$x = 5;</code></p>\\n<h2>PHP Float</h2>\\n<p>A float (floating point number) is a number with a decimal point or a number in exponential form.</p>\\n<h4>Example</h4>\\n<p><code>$x = 5.01;</code></p>\\n<h2>PHP Boolean</h2>\\n<p>A Boolean represents two possible states: TRUE or FALSE. Booleans are often used in conditional testing.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>$x = true;\\n$y = false;</code></pre>\\n      </div>\\n<h2>PHP Array</h2>\\n<p>An array stores multiple values in one single variable.  </p>\\n<p><code>$colours = array(\\\"Blue\\\",\\\"Purple\\\",\\\"Pink\\\");</code></p>\\n<h2>PHP NULL Value</h2>\\n<p>Null is a special data type which can have only one value: NULL.<br>\\nA variable of data type NULL is a variable that has no value assigned to it.<br>\\nVariables can also be emptied by setting the value to NULL.  </p>\\n<p><strong>Note:</strong> If a variable is created without a value, it is automatically assigned a value of NULL.  </p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><?php\\n$x = \\\"Hello world!\\\";\\n$x = null;\\n?></code></pre>\\n      </div>\\n<p>Output:<br>\\nNULL</p>\\n<h2>PHP Object</h2>\\n<p>An object is a data type which stores data and information on how to process that data.<br>\\nIn PHP, an object must be explicitly declared.<br>\\nFirst we must declare a class of object. A class is a structure that can contain properties and methods.</p>\\n<p><strong>Example:</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><?php\\nclass Car {\\n    function Car() {\\n        $this->model = \\\"VW\\\";\\n    }\\n}\\n\\n// create an object\\n$herbie = new Car();\\n\\n// show object properties\\necho $herbie->model;\\n?></code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/php/php-data-types/\"},\"frontmatter\":{\"title\":\"PHP Data Types\"}}},\"pathContext\":{\"slug\":\"/php/php-data-types/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/php-php-data-types.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/php-php-data-types.json\n// module chunks = 14848769706338900000"],"sourceRoot":""}