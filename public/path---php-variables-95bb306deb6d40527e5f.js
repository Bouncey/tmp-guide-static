webpackJsonp([0x2b5426d9cf550400],{"./node_modules/json-loader/index.js!./.cache/json/php-variables.json":function(a,n){a.exports={data:{markdownRemark:{html:'<h2>Variables</h2>\n<h1>Creating (Declaring) PHP Variables</h1>\n<p>Variables are “containers” for storing information.</p>\n<p><strong>Syntax:</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"Hello world!"</span><span class="token punctuation">;</span>\n<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token variable">$y</span> <span class="token operator">=</span> <span class="token number">10.5</span><span class="token punctuation">;</span>\n<span class="token delimiter important">?></span>\n</code></pre>\n      </div>\n<p>After the execution of the statements above, the variable $txt will hold the value Hello world!, the variable $x will hold the value 5, and the variable $y will hold the value 10.5.</p>\n<h5>Note: When you assign a text value to a variable, put quotes around the value.</h5>\n<h5>Note: Unlike other programming languages, PHP has no command for declaring a variable. It is created the moment you first assign a value to it.</h5>\n<h1>Rules for PHP variables:</h1>\n<ul>\n<li>A variable starts with the $ sign, followed by the name of the variable</li>\n<li>A variable name must start with a letter or the underscore character</li>\n<li>A variable name cannot start with a number</li>\n<li>A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )</li>\n<li>Variable names are case-sensitive ($age and $AGE are two different variables)</li>\n</ul>\n<h1>Output Variables</h1>\n<p>The PHP echo statement is often used to output data to the screen.</p>\n<p>The following example will show how to output text and a variable:</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"github.com"</span><span class="token punctuation">;</span>\n<span class="token keyword">echo</span> <span class="token string">"I love $txt!"</span><span class="token punctuation">;</span>\n<span class="token delimiter important">?></span>\n</code></pre>\n      </div>\n<p>The following example will produce the same output as the example above:</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token string">"github.com"</span><span class="token punctuation">;</span>\n<span class="token keyword">echo</span> <span class="token string">"I love "</span> <span class="token punctuation">.</span> <span class="token variable">$txt</span> <span class="token punctuation">.</span> <span class="token string">"!"</span><span class="token punctuation">;</span>\n<span class="token delimiter important">?></span>\n</code></pre>\n      </div>\n<p>The following example will output the sum of two variables:</p>\n<div class="gatsby-highlight">\n      <pre class="language-php"><code><span class="token delimiter important">&lt;?php</span>\n<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token variable">$y</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>\n<span class="token keyword">echo</span> <span class="token variable">$x</span> <span class="token operator">+</span> <span class="token variable">$y</span><span class="token punctuation">;</span>\n<span class="token delimiter important">?></span>\n</code></pre>\n      </div>\n<h1>PHP is a Loosely Typed Language</h1>\n<p>In the example above, notice that we did not have to tell PHP which data type the variable is.\nPHP automatically converts the variable to the correct data type, depending on its value.\nIn other languages such as C, C++, and Java, the programmer must declare the name and type of the variable before using it.</p>\n<h4>More Information:</h4>\n<!-- Please add any articles you think might be helpful to read before writing the article -->',fields:{slug:"/php/variables/"},frontmatter:{title:"Variables"}}},pathContext:{slug:"/php/variables/"}}}});
//# sourceMappingURL=path---php-variables-95bb306deb6d40527e5f.js.map