webpackJsonp([0x99a1c65a89326800],{"./node_modules/json-loader/index.js!./.cache/json/javascript-conditional-ternary-operators.json":function(n,a){n.exports={data:{markdownRemark:{html:'<h2>Conditional Ternary Operators</h2>\n<h3>Basic usage</h3>\n<p>The ternary operator is a compact way to write an if-else inside an expression.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> thing <span class="token operator">=</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token operator">&lt;</span><span class="token keyword">if</span> <span class="token boolean">true</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token keyword">if</span> <span class="token boolean">false</span><span class="token operator">></span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>E.g.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">const</span> cappedInput <span class="token operator">=</span> input <span class="token operator">></span> <span class="token number">50</span> <span class="token operator">?</span> <span class="token number">50</span> <span class="token punctuation">:</span> input <span class="token comment" spellcheck="true">// this will cap the input at 50</span>\n</code></pre>\n      </div>\n<h3>Else if</h3>\n<p>You can also chain ternary operators, this way you will have an if-else if-else behaviour</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token operator">&lt;</span>first condition<span class="token operator">></span> <span class="token operator">?</span> <span class="token operator">&lt;</span>value <span class="token keyword">if</span> first <span class="token boolean">true</span><span class="token operator">></span>\n<span class="token punctuation">:</span> <span class="token operator">&lt;</span>second condition<span class="token operator">></span> <span class="token operator">?</span> <span class="token operator">&lt;</span>value <span class="token keyword">if</span> second is <span class="token boolean">true</span><span class="token operator">></span>\n<span class="token punctuation">:</span> <span class="token operator">&lt;</span>fallback value<span class="token operator">></span>\n</code></pre>\n      </div>\n<blockquote>\n<p><strong>Pro tip</strong>: As you see you can split the ternary operator on multiple lines\nE.g.</p>\n</blockquote>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>const wealth = housesOwned > 3 ? "rich" \n             : housesOwned > 1 ? "nothing to complain"\n             : "poor"</code></pre>\n      </div>',fields:{slug:"/javascript/conditional-ternary-operators/"},frontmatter:{title:"Conditional Ternary Operators"}}},pathContext:{slug:"/javascript/conditional-ternary-operators/"}}}});
//# sourceMappingURL=path---javascript-conditional-ternary-operators-a7c610200dbcea5e5893.js.map