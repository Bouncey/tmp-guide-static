{"version":3,"sources":["webpack:///path---certificates-assignment-with-a-returned-value-413c668eb21c581bb75f.js","webpack:///./.cache/json/certificates-assignment-with-a-returned-value.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-assignment-with-a-returned-value.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,uGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+7BAAgzBC,QAAsLC,KAAA,mDAAyDC,aAAgBC,MAAA,sCAA6CC,aAAgBH,KAAA","file":"path---certificates-assignment-with-a-returned-value-413c668eb21c581bb75f.js","sourcesContent":["webpackJsonp([14769711348303256000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-assignment-with-a-returned-value.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>If you’ll recall from our discussion of Storing Values with the Equal Operator, everything to the right of the equal sign is resolved before the value is assigned. This means we can take the return value of a function and assign it to a variable.</p>\\n<p>Assume we have pre-defined a function <code>sum</code> which adds two numbers together, then:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    <span class=\\\"token keyword\\\">var</span> ourSum <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">sum</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>will call <code>sum</code> function, which returns a value of <code>17</code> and assigns it to <code>ourSum</code> variable.</p>\",\"fields\":{\"slug\":\"/certificates/assignment-with-a-returned-value/\"},\"frontmatter\":{\"title\":\"Assignment with a Returned Value\"}}},\"pathContext\":{\"slug\":\"/certificates/assignment-with-a-returned-value/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-assignment-with-a-returned-value-413c668eb21c581bb75f.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>If you’ll recall from our discussion of Storing Values with the Equal Operator, everything to the right of the equal sign is resolved before the value is assigned. This means we can take the return value of a function and assign it to a variable.</p>\\n<p>Assume we have pre-defined a function <code>sum</code> which adds two numbers together, then:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>    <span class=\\\"token keyword\\\">var</span> ourSum <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">sum</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>will call <code>sum</code> function, which returns a value of <code>17</code> and assigns it to <code>ourSum</code> variable.</p>\",\"fields\":{\"slug\":\"/certificates/assignment-with-a-returned-value/\"},\"frontmatter\":{\"title\":\"Assignment with a Returned Value\"}}},\"pathContext\":{\"slug\":\"/certificates/assignment-with-a-returned-value/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-assignment-with-a-returned-value.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-assignment-with-a-returned-value.json\n// module chunks = 14769711348303256000"],"sourceRoot":""}