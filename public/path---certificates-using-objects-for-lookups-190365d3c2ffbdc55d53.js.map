{"version":3,"sources":["webpack:///path---certificates-using-objects-for-lookups-190365d3c2ffbdc55d53.js","webpack:///./.cache/json/certificates-using-objects-for-lookups.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/certificates-using-objects-for-lookups.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,gGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,8lBAAqlBC,QAAgDC,KAAA,4CAAkDC,aAAgBC,MAAA,+BAAsCC,aAAgBH,KAAA","file":"path---certificates-using-objects-for-lookups-190365d3c2ffbdc55d53.js","sourcesContent":["webpackJsonp([17899632402904584000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/certificates-using-objects-for-lookups.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Objects can be thought of as a key/value storage, like a dictionary. If you have tabular data, you can use an object to “lookup” values rather than a <code>switch</code> statement or an <code>if/else</code> chain. This is most useful when you know that your input data is limited to a certain range.</p>\\n<p>Here is an example of a simple reverse alphabet lookup:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var alpha = {\\n  1:\\\"Z\\\",\\n  2:\\\"Y\\\",\\n  3:\\\"X\\\",\\n  4:\\\"W\\\",\\n  ...\\n  24:\\\"C\\\",\\n  25:\\\"B\\\",\\n  26:\\\"A\\\"\\n};\\nalpha[2]; // \\\"Y\\\"\\nalpha[24]; // \\\"C\\\"</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/using-objects-for-lookups/\"},\"frontmatter\":{\"title\":\"Using Objects for Lookups\"}}},\"pathContext\":{\"slug\":\"/certificates/using-objects-for-lookups/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---certificates-using-objects-for-lookups-190365d3c2ffbdc55d53.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Objects can be thought of as a key/value storage, like a dictionary. If you have tabular data, you can use an object to “lookup” values rather than a <code>switch</code> statement or an <code>if/else</code> chain. This is most useful when you know that your input data is limited to a certain range.</p>\\n<p>Here is an example of a simple reverse alphabet lookup:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>var alpha = {\\n  1:\\\"Z\\\",\\n  2:\\\"Y\\\",\\n  3:\\\"X\\\",\\n  4:\\\"W\\\",\\n  ...\\n  24:\\\"C\\\",\\n  25:\\\"B\\\",\\n  26:\\\"A\\\"\\n};\\nalpha[2]; // \\\"Y\\\"\\nalpha[24]; // \\\"C\\\"</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/certificates/using-objects-for-lookups/\"},\"frontmatter\":{\"title\":\"Using Objects for Lookups\"}}},\"pathContext\":{\"slug\":\"/certificates/using-objects-for-lookups/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/certificates-using-objects-for-lookups.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/certificates-using-objects-for-lookups.json\n// module chunks = 17899632402904584000"],"sourceRoot":""}