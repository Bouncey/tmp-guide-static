{"version":3,"sources":["webpack:///path---python-containers-7ed96779bb5ffaf7d9e3.js","webpack:///./.cache/json/python-containers.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/python-containers.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,oBAERC,2EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,wvBAA+uBC,QAA0BC,KAAA,uBAA6BC,aAAgBC,MAAA,uBAA8BC,aAAgBH,KAAA","file":"path---python-containers-7ed96779bb5ffaf7d9e3.js","sourcesContent":["webpackJsonp([1087509054019856500],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/python-containers.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Some objects contain references to other objects; these are called containers. Examples of containers are tuples, lists and dictionaries. The references are part of a container’s value. In most cases, when we talk about the value of a container, we imply the values, not the identities of the contained objects; however, when we talk about the mutability of a container, only the identities of the immediately contained objects are implied. So, if an immutable container (like a tuple) contains a reference to a mutable object, its value changes if that mutable object is changed.</p>\\n<p><a href='https://docs.python.org/3/reference/datamodel.html#objects-values-and-types' target='_blank' rel='nofollow'>Python Docs - Object Values &#x26; Types</a></p>\",\"fields\":{\"slug\":\"/python/containers/\"},\"frontmatter\":{\"title\":\"Python Containers\"}}},\"pathContext\":{\"slug\":\"/python/containers/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---python-containers-7ed96779bb5ffaf7d9e3.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Some objects contain references to other objects; these are called containers. Examples of containers are tuples, lists and dictionaries. The references are part of a container’s value. In most cases, when we talk about the value of a container, we imply the values, not the identities of the contained objects; however, when we talk about the mutability of a container, only the identities of the immediately contained objects are implied. So, if an immutable container (like a tuple) contains a reference to a mutable object, its value changes if that mutable object is changed.</p>\\n<p><a href='https://docs.python.org/3/reference/datamodel.html#objects-values-and-types' target='_blank' rel='nofollow'>Python Docs - Object Values &#x26; Types</a></p>\",\"fields\":{\"slug\":\"/python/containers/\"},\"frontmatter\":{\"title\":\"Python Containers\"}}},\"pathContext\":{\"slug\":\"/python/containers/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/python-containers.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/python-containers.json\n// module chunks = 1087509054019856500"],"sourceRoot":""}