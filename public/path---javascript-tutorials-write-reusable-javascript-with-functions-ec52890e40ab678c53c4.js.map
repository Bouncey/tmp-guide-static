{"version":3,"sources":["webpack:///path---javascript-tutorials-write-reusable-javascript-with-functions-ec52890e40ab678c53c4.js","webpack:///./.cache/json/javascript-tutorials-write-reusable-javascript-with-functions.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/javascript-tutorials-write-reusable-javascript-with-functions.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,uHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2pCAA4lCC,QAAkGC,KAAA,mEAAyEC,aAAgBC,MAAA,8CAAqDC,aAAgBH,KAAA","file":"path---javascript-tutorials-write-reusable-javascript-with-functions-ec52890e40ab678c53c4.js","sourcesContent":["webpackJsonp([7711119479933795000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/javascript-tutorials-write-reusable-javascript-with-functions.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>In JavaScript, we can divide up our code into reusable parts called functions.</p>\\n<p>Here’s an example of a function:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function functionName() {\\n  console.log(\\\"Hello World\\\");\\n}</code></pre>\\n      </div>\\n<p>You can <code>call</code> or <code>invoke</code> this function by using its name followed by parentheses, like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>functionName();</code></pre>\\n      </div>\\n<p>Each time the function is called it will print out the message “Hello World” on the dev console. All of the code between the curly braces will be executed every time the function is called.</p>\\n<p>Here is another example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function otherFunctionName (a, b) {\\n    return(a + b);\\n}</code></pre>\\n      </div>\\n<p>We can <code>call</code> or <code>invoke</code> our function like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>otherFunctionName(1,2);</code></pre>\\n      </div>\\n<p>and it will run and return its return value to us.</p>\",\"fields\":{\"slug\":\"/javascript/tutorials/write-reusable-javascript-with-functions/\"},\"frontmatter\":{\"title\":\"Write Reusable JavaScript with Functions\"}}},\"pathContext\":{\"slug\":\"/javascript/tutorials/write-reusable-javascript-with-functions/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---javascript-tutorials-write-reusable-javascript-with-functions-ec52890e40ab678c53c4.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>In JavaScript, we can divide up our code into reusable parts called functions.</p>\\n<p>Here’s an example of a function:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function functionName() {\\n  console.log(\\\"Hello World\\\");\\n}</code></pre>\\n      </div>\\n<p>You can <code>call</code> or <code>invoke</code> this function by using its name followed by parentheses, like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>functionName();</code></pre>\\n      </div>\\n<p>Each time the function is called it will print out the message “Hello World” on the dev console. All of the code between the curly braces will be executed every time the function is called.</p>\\n<p>Here is another example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>function otherFunctionName (a, b) {\\n    return(a + b);\\n}</code></pre>\\n      </div>\\n<p>We can <code>call</code> or <code>invoke</code> our function like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>otherFunctionName(1,2);</code></pre>\\n      </div>\\n<p>and it will run and return its return value to us.</p>\",\"fields\":{\"slug\":\"/javascript/tutorials/write-reusable-javascript-with-functions/\"},\"frontmatter\":{\"title\":\"Write Reusable JavaScript with Functions\"}}},\"pathContext\":{\"slug\":\"/javascript/tutorials/write-reusable-javascript-with-functions/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/javascript-tutorials-write-reusable-javascript-with-functions.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/javascript-tutorials-write-reusable-javascript-with-functions.json\n// module chunks = 7711119479933795000"],"sourceRoot":""}