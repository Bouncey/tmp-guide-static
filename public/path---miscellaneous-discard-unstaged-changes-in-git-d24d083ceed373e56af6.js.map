{"version":3,"sources":["webpack:///path---miscellaneous-discard-unstaged-changes-in-git-d24d083ceed373e56af6.js","webpack:///./.cache/json/miscellaneous-discard-unstaged-changes-in-git.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/miscellaneous-discard-unstaged-changes-in-git.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,uGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,4kBAAgdC,QAA6IC,KAAA,mDAAyDC,aAAgBC,MAAA,qCAA4CC,aAAgBH,KAAA","file":"path---miscellaneous-discard-unstaged-changes-in-git-d24d083ceed373e56af6.js","sourcesContent":["webpackJsonp([3536550576030589400],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/miscellaneous-discard-unstaged-changes-in-git.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>When using Git, it is common to make changes that you want to remove entirely before the staging phase. For example, after working on a few files, you realize that you want to revert the changes made to one specific file. To discard the changes before staging and committing, use the <code>$ git checkout</code> command.</p>\\n<h2>To unstage one file :</h2>\\n<p><code>$ git checkout &#x3C;path-to-file></code></p>\\n<p><em>Remember to replace <code>&#x3C;path-to-file></code> with the actual file name.</em></p>\\n<h2>To unstage all files:</h2>\\n<p><code>$ git checkout -- .</code></p>\",\"fields\":{\"slug\":\"/miscellaneous/discard-unstaged-changes-in-git/\"},\"frontmatter\":{\"title\":\"Discard Unstaged Changes in Git\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/discard-unstaged-changes-in-git/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---miscellaneous-discard-unstaged-changes-in-git-d24d083ceed373e56af6.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>When using Git, it is common to make changes that you want to remove entirely before the staging phase. For example, after working on a few files, you realize that you want to revert the changes made to one specific file. To discard the changes before staging and committing, use the <code>$ git checkout</code> command.</p>\\n<h2>To unstage one file :</h2>\\n<p><code>$ git checkout &#x3C;path-to-file></code></p>\\n<p><em>Remember to replace <code>&#x3C;path-to-file></code> with the actual file name.</em></p>\\n<h2>To unstage all files:</h2>\\n<p><code>$ git checkout -- .</code></p>\",\"fields\":{\"slug\":\"/miscellaneous/discard-unstaged-changes-in-git/\"},\"frontmatter\":{\"title\":\"Discard Unstaged Changes in Git\"}}},\"pathContext\":{\"slug\":\"/miscellaneous/discard-unstaged-changes-in-git/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/miscellaneous-discard-unstaged-changes-in-git.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/miscellaneous-discard-unstaged-changes-in-git.json\n// module chunks = 3536550576030589400"],"sourceRoot":""}