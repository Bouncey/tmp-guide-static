webpackJsonp([0x6d389830464cd000],{"./node_modules/json-loader/index.js!./.cache/json/css-layout-flexbox-flexbox-direction.json":function(o,t){o.exports={data:{markdownRemark:{html:'<h2>Flexbox Direction</h2>\n<p>Now that you know what flexbox is, it’s time to move on to how you can arrange content within a flex container. You can set this via <i>flex-direction</i></p>\n<p>There are 4 ways to set the flex direction</p>\n<ol>\n<li>Row</li>\n</ol>\n<img src = "https://css-tricks.com/wp-content/uploads/2013/04/flex-direction2.svg">\n<p>The flex direction is set to row by default. This arranges all your content in a single row <b>without margins<b>. </p>\n<ol start="2">\n<li>Row-reverse</li>\n</ol>\n<img src = "https://i-msdn.sec.s-msft.com/dynimg/IC681588.png">\n<p>This reverses your content in the opposite direction. Originally it was going from left to right, now it’s going right to left.</p>\n<ol start="3">\n<li>column</li>\n</ol>\n<img src = "https://i-msdn.sec.s-msft.com/dynimg/IC681589.png">\n<p>This arranges your content in a single column from top to bottom. </p>\n<ol start="4">\n<li>column-reverse</li>\n</ol>\n<p>This arranges your content in a single column from bottom to top. </p>\n<h4>More Information:</h4>\n<!-- Please add any articles you think might be helpful to read before writing the article -->',fields:{slug:"/css/layout/flexbox/flexbox-direction/"},frontmatter:{title:"Flexbox Direction"}}},pathContext:{slug:"/css/layout/flexbox/flexbox-direction/"}}}});
//# sourceMappingURL=path---css-layout-flexbox-flexbox-direction-f532fbf88150a6b01e30.js.map