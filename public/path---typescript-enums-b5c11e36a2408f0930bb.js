webpackJsonp([0xf3cf2e8ec2a45000],{"./node_modules/json-loader/index.js!./.cache/json/typescript-enums.json":function(n,s){n.exports={data:{markdownRemark:{html:'<h2>Enums</h2>\n<p>Developers can use <code>Enums</code> to define a set of named constants.</p>\n<p>There are two types of <code>Enums</code></p>\n<ol>\n<li>numeric</li>\n<li>string-based</li>\n</ol>\n<div class="gatsby-highlight">\n      <pre class="language-typescript"><code><span class="token comment" spellcheck="true">// numeric enum</span>\n<span class="token keyword">enum</span> NumericEnum <span class="token punctuation">{</span>\n    numeric1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    numeric2<span class="token punctuation">,</span>\n    numeric3<span class="token punctuation">,</span>\n    numeric4<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true">// string based enum</span>\n<span class="token keyword">enum</span> StringBasedEnum <span class="token punctuation">{</span>\n    Programming <span class="token operator">=</span> <span class="token string">"is fun"</span><span class="token punctuation">,</span>\n    Pizza <span class="token operator">=</span> <span class="token string">"is good"</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>',fields:{slug:"/typescript/enums/"},frontmatter:{title:"Enums"}}},pathContext:{slug:"/typescript/enums/"}}}});
//# sourceMappingURL=path---typescript-enums-b5c11e36a2408f0930bb.js.map