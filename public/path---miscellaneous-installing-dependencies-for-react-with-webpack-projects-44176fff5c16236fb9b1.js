webpackJsonp([0x2bb988983fd2ca0],{"./node_modules/json-loader/index.js!./.cache/json/miscellaneous-installing-dependencies-for-react-with-webpack-projects.json":function(e,a){e.exports={data:{markdownRemark:{html:"<p>Now that we have an empty Webpack Configuration file (<code>webpack.config.js</code>) and a freshly made Package file (<code>package.json</code>), we need to install some dependencies. Installing dependencies automatically adds some data to our <code>package.json</code>.</p>\n<p>This project will depend on React, ReactDOM, Webpack, and Webpack Dev Server. It will also depend on a number of Babel packages, because we are going to be writing code using ES6, and <a href='https://babeljs.io/' target='_blank' rel='nofollow'>Babel is an ES6 transpiler</a>.</p>\n<p>The dependencies we require in detail:</p>\n<p>| Package | Reason |<br>\n| <a href='https://www.npmjs.com/package/react' target='_blank' rel='nofollow'>React</a> | ‘An npm package to get you immediate access to React, without also requiring the JSX transformer.’ |<br>\n| <a href='https://www.npmjs.com/package/react-dom' target='_blank' rel='nofollow'>React DOM</a> | ‘This package serves as the entry point of the DOM-related rendering paths. It is intended to be paired with the isomorphic React, which will be shipped as react to npm.’ |<br>\n| <a href='https://www.npmjs.com/package/webpack' target='_blank' rel='nofollow'>Webpack</a> | ‘Allows to split your codebase into multiple bundles, which can be loaded on demand.’ |<br>\n| <a href='https://www.npmjs.com/package/webpack-dev-server' target='_blank' rel='nofollow'>Webpack Dev Server</a> | ‘Serves a webpack app. Updates the browser on changes.’ |<br>\n| <a href='https://www.npmjs.com/package/babel-loader' target='_blank' rel='nofollow'>Babel Loader</a> | ‘Babel module loader for Webpack.’ |<br>\n| Babel Core | Required for Babel Loader. |<br>\n| Babel Preset: ES2015 | Required for Babel Loader. |<br>\n| Babel Preset: React | Required for Babel Loader. |</p>\n<p>We can go ahead and install all these modules with a single command:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-none\"><code>npm install --save-dev react react-dom webpack webpack-dev-server babel-loader babel-core babel-preset-es2015 babel-preset-react</code></pre>\n      </div>\n<p>If we look at our <code>package.json</code> file now, we will notice that our <code>devDependencies</code> has become a list of the Node packages we just installed. This is important because it means we can install these again if we need to using <code>npm install</code>.</p>\n<ul>\n<li><a href='http://stackoverflow.com/a/22004559/4637110' target='_blank' rel='nofollow'>Help: More about <code>dependencies</code> and <code>devDependencies</code></a></li>\n</ul>",fields:{slug:"/miscellaneous/installing-dependencies-for-react-with-webpack-projects/"},frontmatter:{title:"Installing Dependencies for React with Webpack Projects"}}},pathContext:{slug:"/miscellaneous/installing-dependencies-for-react-with-webpack-projects/"}}}});
//# sourceMappingURL=path---miscellaneous-installing-dependencies-for-react-with-webpack-projects-44176fff5c16236fb9b1.js.map