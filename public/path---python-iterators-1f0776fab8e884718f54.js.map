{"version":3,"sources":["webpack:///path---python-iterators-1f0776fab8e884718f54.js","webpack:///./.cache/json/python-iterators.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/python-iterators.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,0EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,0gEAAkHC,QAAy6DC,KAAA,sBAA4BC,aAAgBC,MAAA,sBAA6BC,aAAgBH,KAAA","file":"path---python-iterators-1f0776fab8e884718f54.js","sourcesContent":["webpackJsonp([3252099289158281000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/python-iterators.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Python supports a concept of iteration over containers. This is implemented using two distinct methods; these are used to allow user-defined classes to support iteration.</p>\\n<p><a href='https://docs.python.org/3/library/stdtypes.html#iterator-types' target='_blank' rel='nofollow'>Python Docs - Iterator Types</a></p>\\n<p><strong>TODO: Clarify what iteration means and what iterators can be used for.</strong></p>\\n<ul>\\n<li>\\n<p>Objects can implement a <code>__iter__()</code> method that returns an iterator object to support iteration.</p>\\n</li>\\n<li>\\n<p>Iterator objects must implement:</p>\\n<ul>\\n<li>\\n<p><code>__iter__()</code>: returns the iterator object.</p>\\n</li>\\n<li>\\n<p><code>__next__()</code>: returns the next object of the container.</p>\\n</li>\\n</ul>\\n<p>iterator<em>object = ‘abc’.<strong>iter</strong>()\\nprint(iterator</em>object)\\nprint(id(iterator<em>object))\\nprint(id(iterator</em>object.<strong>iter</strong>())) # Returns the iterator itself.\\nprint(iterator<em>object.<strong>next</strong>())     # Returns 1st object and advances iterator.\\nprint(iterator</em>object.<strong>next</strong>())     # Returns 2nd object and advances iterator.\\nprint(iterator<em>object.<strong>next</strong>())     # Returns 3rd object and advances iterator.\\nprint(iterator</em>object.<strong>next</strong>())     # Raises StopIteration Exception.</p>\\n</li>\\n</ul>\\n<p>Output :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><str_iterator object at 0x102e196a0>\\n4343305888\\n4343305888\\na\\nb\\nc\\n---------------------------------------------------------------------------\\nStopIteration                             Traceback (most recent call last)\\n<ipython-input-1-d466eea8c1b0> in <module>()\\n      6 print(iterator_object.__next__())     # Returns 2nd object and advances iterator.\\n      7 print(iterator_object.__next__())     # Returns 3rd object and advances iterator.\\n----> 8 print(iterator_object.__next__())     # Raises StopIteration Exception.\\n\\nStopIteration:</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/python/iterators/\"},\"frontmatter\":{\"title\":\"Python Iterators\"}}},\"pathContext\":{\"slug\":\"/python/iterators/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---python-iterators-1f0776fab8e884718f54.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Python supports a concept of iteration over containers. This is implemented using two distinct methods; these are used to allow user-defined classes to support iteration.</p>\\n<p><a href='https://docs.python.org/3/library/stdtypes.html#iterator-types' target='_blank' rel='nofollow'>Python Docs - Iterator Types</a></p>\\n<p><strong>TODO: Clarify what iteration means and what iterators can be used for.</strong></p>\\n<ul>\\n<li>\\n<p>Objects can implement a <code>__iter__()</code> method that returns an iterator object to support iteration.</p>\\n</li>\\n<li>\\n<p>Iterator objects must implement:</p>\\n<ul>\\n<li>\\n<p><code>__iter__()</code>: returns the iterator object.</p>\\n</li>\\n<li>\\n<p><code>__next__()</code>: returns the next object of the container.</p>\\n</li>\\n</ul>\\n<p>iterator<em>object = ‘abc’.<strong>iter</strong>()\\nprint(iterator</em>object)\\nprint(id(iterator<em>object))\\nprint(id(iterator</em>object.<strong>iter</strong>())) # Returns the iterator itself.\\nprint(iterator<em>object.<strong>next</strong>())     # Returns 1st object and advances iterator.\\nprint(iterator</em>object.<strong>next</strong>())     # Returns 2nd object and advances iterator.\\nprint(iterator<em>object.<strong>next</strong>())     # Returns 3rd object and advances iterator.\\nprint(iterator</em>object.<strong>next</strong>())     # Raises StopIteration Exception.</p>\\n</li>\\n</ul>\\n<p>Output :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><str_iterator object at 0x102e196a0>\\n4343305888\\n4343305888\\na\\nb\\nc\\n---------------------------------------------------------------------------\\nStopIteration                             Traceback (most recent call last)\\n<ipython-input-1-d466eea8c1b0> in <module>()\\n      6 print(iterator_object.__next__())     # Returns 2nd object and advances iterator.\\n      7 print(iterator_object.__next__())     # Returns 3rd object and advances iterator.\\n----> 8 print(iterator_object.__next__())     # Raises StopIteration Exception.\\n\\nStopIteration:</code></pre>\\n      </div>\",\"fields\":{\"slug\":\"/python/iterators/\"},\"frontmatter\":{\"title\":\"Python Iterators\"}}},\"pathContext\":{\"slug\":\"/python/iterators/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/python-iterators.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/python-iterators.json\n// module chunks = 3252099289158281000"],"sourceRoot":""}