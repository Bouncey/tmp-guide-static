{"version":3,"sources":["webpack:///path---go-go-functions-8b14b74aa39662b4609d.js","webpack:///./.cache/json/go-go-functions.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/go-go-functions.json","module","exports","data","markdownRemark","html","fields","slug","frontmatter","title","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,yEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2qKAAusJC,QAA6rBC,KAAA,qBAA2BC,aAAgBC,MAAA,kBAAyBC,aAAgBH,KAAA","file":"path---go-go-functions-8b14b74aa39662b4609d.js","sourcesContent":["webpackJsonp([11598295489429680000],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/go-go-functions.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Go Functions</h2>\\n<p>A function is a block of code that performs a task when it’s called, such that the function’s name identifies it and is used in calling the function.</p>\\n<p>A function’s declaration starts with the keyword <code>func</code> followed by the function’s name then the arguments of the function and finally the returned values types. The declaration binds the function name to the function. Keep in mind that the type comes after the variable name in both the arguments and the returned values. An example of a function’s declaration is the following</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> b <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span>\\n</code></pre>\\n      </div>\\n<p>A function can have 0 or many arguments depending on its desired functionality</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">zero</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Function Definition */</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">increment</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Function Definition */</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> y <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Function Definition */</span> <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Go supports returning multiple values. The function below returns 2 values: the sum of the 2 arguments, and the difference between the first and the second argument</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">addAndSubtract</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> y <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">+</span> y<span class=\\\"token punctuation\\\">,</span> x <span class=\\\"token operator\\\">-</span> y\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">addAndSubtract</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Returns 11, 3</span>\\n</code></pre>\\n      </div>\\n<p>Go also supports naming the returned values</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">mulitplyByThreeAndDivideByFive</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">(</span>product <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> quotient <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\tproduct <span class=\\\"token operator\\\">=</span> x <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">3</span>\\n\\tquotient <span class=\\\"token operator\\\">=</span> x <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">5</span>\\n\\t<span class=\\\"token keyword\\\">return</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">mulitplyByThreeAndDivideByFive</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Returns 60, 4</span>\\n</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<ul>\\n<li><a href=\\\"https://tour.golang.org/basics/4\\\">A Tour of Go</a></li>\\n<li><a href=\\\"https://gobyexample.com/functions\\\">Go By Example</a></li>\\n<li><a href=\\\"https://www.golang-book.com/books/intro/7\\\">Golang Book</a></li>\\n<li><a href=\\\"https://golang.org/ref/spec#Function_declarations\\\">The Go Programming Language Specification</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/go/go-functions/\"},\"frontmatter\":{\"title\":\"Go Functions\"}}},\"pathContext\":{\"slug\":\"/go/go-functions/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---go-go-functions-8b14b74aa39662b4609d.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2>Go Functions</h2>\\n<p>A function is a block of code that performs a task when it’s called, such that the function’s name identifies it and is used in calling the function.</p>\\n<p>A function’s declaration starts with the keyword <code>func</code> followed by the function’s name then the arguments of the function and finally the returned values types. The declaration binds the function name to the function. Keep in mind that the type comes after the variable name in both the arguments and the returned values. An example of a function’s declaration is the following</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>a <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> b <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span>\\n</code></pre>\\n      </div>\\n<p>A function can have 0 or many arguments depending on its desired functionality</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">zero</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Function Definition */</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">increment</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Function Definition */</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">add</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> y <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token builtin\\\">int</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Function Definition */</span> <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Go supports returning multiple values. The function below returns 2 values: the sum of the 2 arguments, and the difference between the first and the second argument</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">addAndSubtract</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> y <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">+</span> y<span class=\\\"token punctuation\\\">,</span> x <span class=\\\"token operator\\\">-</span> y\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">addAndSubtract</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Returns 11, 3</span>\\n</code></pre>\\n      </div>\\n<p>Go also supports naming the returned values</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-go\\\"><code><span class=\\\"token keyword\\\">func</span> <span class=\\\"token function\\\">mulitplyByThreeAndDivideByFive</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">(</span>product <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">,</span> quotient <span class=\\\"token builtin\\\">int</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\tproduct <span class=\\\"token operator\\\">=</span> x <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">3</span>\\n\\tquotient <span class=\\\"token operator\\\">=</span> x <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">5</span>\\n\\t<span class=\\\"token keyword\\\">return</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">mulitplyByThreeAndDivideByFive</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Returns 60, 4</span>\\n</code></pre>\\n      </div>\\n<h4>More Information:</h4>\\n<ul>\\n<li><a href=\\\"https://tour.golang.org/basics/4\\\">A Tour of Go</a></li>\\n<li><a href=\\\"https://gobyexample.com/functions\\\">Go By Example</a></li>\\n<li><a href=\\\"https://www.golang-book.com/books/intro/7\\\">Golang Book</a></li>\\n<li><a href=\\\"https://golang.org/ref/spec#Function_declarations\\\">The Go Programming Language Specification</a></li>\\n</ul>\",\"fields\":{\"slug\":\"/go/go-functions/\"},\"frontmatter\":{\"title\":\"Go Functions\"}}},\"pathContext\":{\"slug\":\"/go/go-functions/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/go-go-functions.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/go-go-functions.json\n// module chunks = 11598295489429680000"],"sourceRoot":""}