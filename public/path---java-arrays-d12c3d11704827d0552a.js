webpackJsonp([0x8d89123722b05000],{"./node_modules/json-loader/index.js!./.cache/json/java-arrays.json":function(n,a){n.exports={data:{markdownRemark:{html:'<h1>Array</h1>\n<p>An Array is used to store a collection of data of similar datatypes. Arrays always start with the index of 0 and are instantiated to a set number of indexes. All the variables in the array must be of the same type, declared at instantiation.</p>\n<p><strong>Syntax:</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>dataType<span class="token punctuation">[</span><span class="token punctuation">]</span> arrayName<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// preferred way</span>\n</code></pre>\n      </div>\n<p>or</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>dataType arrayName<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//  works but not preferred way</span>\n</code></pre>\n      </div>\n<h2>Code snippets of above syntax:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// preferred way</span>\n</code></pre>\n      </div>\n<p>or </p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">double</span> list<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// works but not preferred way</span>\n</code></pre>\n      </div>\n<p>Note: The style <code>double list[]</code> is not preferred as it comes from the C/C++ language and was adopted in Java to accommodate C/C++ programmers. Additionally it’s more readable: you can read that it’s a “double array named list” other than “a double called list that is an array”</p>\n<h2>Creating Arrays:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>dataType<span class="token punctuation">[</span><span class="token punctuation">]</span> arrayName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">dataType</span><span class="token punctuation">[</span>arraySize<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<h2>Code snippets of the above syntax:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> List <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">double</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<h2>Another way to create an Array:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>dataType<span class="token punctuation">[</span><span class="token punctuation">]</span> arrayName <span class="token operator">=</span> <span class="token punctuation">{</span>value0<span class="token punctuation">,</span> value1<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> valuek<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<h2>Code snippets of above syntax:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<h2>Accessing Arrays:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>arrayName<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// gives you the value at the specified index</span>\n</code></pre>\n      </div>\n<h2>Code snippets of above syntax:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>Output:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>2.0</code></pre>\n      </div>\n<h2>Modifying Arrays:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>arrayName<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span> \n</code></pre>\n      </div>\n<p>Note: You cannot change the size or type of an array after initialising it.\nNote: You can however reset the array like so</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>arrayName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">dataType</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">,</span> value3<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<h2>Code snippets of above syntax:</h2>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// now, if you access the array like above, it will output 3 rather than 2</span>\n</code></pre>\n      </div>\n<p><em>Example of code:</em></p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// declare array</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// loop goes through each index</span>\n    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// prints the array</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p><img src="https://forum.freecodecamp.org/images/emoji/emoji_one/rocket.png?v=2" title=":rocket:" alt=":rocket:" class="forum-image"> <a href=\'https://repl.it/NC2Y\' target=\'_blank\' rel=\'nofollow\'>Run Code</a></p>\n<p>Output:</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code>    <span class="token number">4</span>\n    <span class="token number">5</span>\n    <span class="token number">6</span>\n    <span class="token number">7</span>\n    <span class="token number">8</span>\n</code></pre>\n      </div>\n<h3>Multi-dimensional Arrays</h3>\n<p>Two-dimensional arrays (2D arrays) can be thought of as a table with rows and columns</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">int</span> M <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n<span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">double</span> <span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//M = rows N = columns</span>\n<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> M<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment" spellcheck="true">//Do something here at index </span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>This loop will execute M ^ N times and will build this:</p>\n<p><a href=""> 0 | 1 | 2 | 3 | 4 </a><br>\n<a href="">0 | 1 | 2 | 3 | 4 </a><br>\n[ 0 | 1 | 2 | 3 | 4 ]  </p>\n<h3>Jagged Arrays</h3>\n<p>Jagged arrays are multi-dimensional arrays that have a set number of rows but a varying number of columns. Jagged arrays are used to conserve memory use of the array. Here is a code example:</p>\n<div class="gatsby-highlight">\n      <pre class="language-java"><code><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//initialize a 2D array with 5 rows</span>\narray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//creates 1 column for first row</span>\narray<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//creates 2 columns for second row</span>\narray<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//creates 5 columns for third row</span>\narray<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//creates 5 columns for fourth row</span>\narray<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//creates 5 columns for fifth row</span>\n</code></pre>\n      </div>\n<p>Output: </p>\n<p><a href=""> 0 </a><br>\n<a href="">0 | 1 | 2 | 3 | 4 </a><br>\n[ 0 | 1 | 2 | 3 | 4 ]  </p>\n<h4>More Information:</h4>\n<ul>\n<li>Source: <a href=\'https://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html\' target=\'_blank\' rel=\'nofollow\'>Java Arrays</a></li>\n</ul>',fields:{slug:"/java/arrays/"},frontmatter:{title:"Arrays"}}},pathContext:{slug:"/java/arrays/"}}}});
//# sourceMappingURL=path---java-arrays-d12c3d11704827d0552a.js.map